/*
 * HyperOne
 *
 * HyperOne API
 *
 * API version: 0.1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h1

import (
	"encoding/json"
)

// IamProjectQuotaLimitPatch struct for IamProjectQuotaLimitPatch
type IamProjectQuotaLimitPatch struct {
	User *float32 `json:"user,omitempty"`
}

// NewIamProjectQuotaLimitPatch instantiates a new IamProjectQuotaLimitPatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIamProjectQuotaLimitPatch() *IamProjectQuotaLimitPatch {
	this := IamProjectQuotaLimitPatch{}
	return &this
}

// NewIamProjectQuotaLimitPatchWithDefaults instantiates a new IamProjectQuotaLimitPatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIamProjectQuotaLimitPatchWithDefaults() *IamProjectQuotaLimitPatch {
	this := IamProjectQuotaLimitPatch{}
	return &this
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *IamProjectQuotaLimitPatch) GetUser() float32 {
	if o == nil || o.User == nil {
		var ret float32
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IamProjectQuotaLimitPatch) GetUserOk() (*float32, bool) {
	if o == nil || o.User == nil {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *IamProjectQuotaLimitPatch) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given float32 and assigns it to the User field.
func (o *IamProjectQuotaLimitPatch) SetUser(v float32) {
	o.User = &v
}

func (o IamProjectQuotaLimitPatch) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.User != nil {
		toSerialize["user"] = o.User
	}
	return json.Marshal(toSerialize)
}

type NullableIamProjectQuotaLimitPatch struct {
	value *IamProjectQuotaLimitPatch
	isSet bool
}

func (v NullableIamProjectQuotaLimitPatch) Get() *IamProjectQuotaLimitPatch {
	return v.value
}

func (v *NullableIamProjectQuotaLimitPatch) Set(val *IamProjectQuotaLimitPatch) {
	v.value = val
	v.isSet = true
}

func (v NullableIamProjectQuotaLimitPatch) IsSet() bool {
	return v.isSet
}

func (v *NullableIamProjectQuotaLimitPatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIamProjectQuotaLimitPatch(val *IamProjectQuotaLimitPatch) *NullableIamProjectQuotaLimitPatch {
	return &NullableIamProjectQuotaLimitPatch{value: val, isSet: true}
}

func (v NullableIamProjectQuotaLimitPatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIamProjectQuotaLimitPatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


