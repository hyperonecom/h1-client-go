/*
HyperOne

HyperOne API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IamProjectCreate struct for IamProjectCreate
type IamProjectCreate struct {
	Name string `json:"name"`
	Organisation string `json:"organisation"`
	Tag []Tag `json:"tag,omitempty"`
}

// NewIamProjectCreate instantiates a new IamProjectCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIamProjectCreate(name string, organisation string) *IamProjectCreate {
	this := IamProjectCreate{}
	this.Name = name
	this.Organisation = organisation
	return &this
}

// NewIamProjectCreateWithDefaults instantiates a new IamProjectCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIamProjectCreateWithDefaults() *IamProjectCreate {
	this := IamProjectCreate{}
	return &this
}

// GetName returns the Name field value
func (o *IamProjectCreate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *IamProjectCreate) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *IamProjectCreate) SetName(v string) {
	o.Name = v
}

// GetOrganisation returns the Organisation field value
func (o *IamProjectCreate) GetOrganisation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Organisation
}

// GetOrganisationOk returns a tuple with the Organisation field value
// and a boolean to check if the value has been set.
func (o *IamProjectCreate) GetOrganisationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Organisation, true
}

// SetOrganisation sets field value
func (o *IamProjectCreate) SetOrganisation(v string) {
	o.Organisation = v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *IamProjectCreate) GetTag() []Tag {
	if o == nil || o.Tag == nil {
		var ret []Tag
		return ret
	}
	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IamProjectCreate) GetTagOk() ([]Tag, bool) {
	if o == nil || o.Tag == nil {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *IamProjectCreate) HasTag() bool {
	if o != nil && o.Tag != nil {
		return true
	}

	return false
}

// SetTag gets a reference to the given []Tag and assigns it to the Tag field.
func (o *IamProjectCreate) SetTag(v []Tag) {
	o.Tag = v
}

func (o IamProjectCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["organisation"] = o.Organisation
	}
	if o.Tag != nil {
		toSerialize["tag"] = o.Tag
	}
	return json.Marshal(toSerialize)
}

type NullableIamProjectCreate struct {
	value *IamProjectCreate
	isSet bool
}

func (v NullableIamProjectCreate) Get() *IamProjectCreate {
	return v.value
}

func (v *NullableIamProjectCreate) Set(val *IamProjectCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableIamProjectCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableIamProjectCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIamProjectCreate(val *IamProjectCreate) *NullableIamProjectCreate {
	return &NullableIamProjectCreate{value: val, isSet: true}
}

func (v NullableIamProjectCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIamProjectCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


