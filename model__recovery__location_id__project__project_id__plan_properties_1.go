/*
HyperOne

HyperOne API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RecoveryLocationIdProjectProjectIdPlanProperties1 struct for RecoveryLocationIdProjectProjectIdPlanProperties1
type RecoveryLocationIdProjectProjectIdPlanProperties1 struct {
	Window []RecoveryLocationIdProjectProjectIdPlanPropertiesWindow `json:"window"`
	Retention []RecoveryLocationIdProjectProjectIdPlanPropertiesRetention `json:"retention"`
}

// NewRecoveryLocationIdProjectProjectIdPlanProperties1 instantiates a new RecoveryLocationIdProjectProjectIdPlanProperties1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoveryLocationIdProjectProjectIdPlanProperties1(window []RecoveryLocationIdProjectProjectIdPlanPropertiesWindow, retention []RecoveryLocationIdProjectProjectIdPlanPropertiesRetention) *RecoveryLocationIdProjectProjectIdPlanProperties1 {
	this := RecoveryLocationIdProjectProjectIdPlanProperties1{}
	this.Window = window
	this.Retention = retention
	return &this
}

// NewRecoveryLocationIdProjectProjectIdPlanProperties1WithDefaults instantiates a new RecoveryLocationIdProjectProjectIdPlanProperties1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoveryLocationIdProjectProjectIdPlanProperties1WithDefaults() *RecoveryLocationIdProjectProjectIdPlanProperties1 {
	this := RecoveryLocationIdProjectProjectIdPlanProperties1{}
	return &this
}

// GetWindow returns the Window field value
func (o *RecoveryLocationIdProjectProjectIdPlanProperties1) GetWindow() []RecoveryLocationIdProjectProjectIdPlanPropertiesWindow {
	if o == nil {
		var ret []RecoveryLocationIdProjectProjectIdPlanPropertiesWindow
		return ret
	}

	return o.Window
}

// GetWindowOk returns a tuple with the Window field value
// and a boolean to check if the value has been set.
func (o *RecoveryLocationIdProjectProjectIdPlanProperties1) GetWindowOk() ([]RecoveryLocationIdProjectProjectIdPlanPropertiesWindow, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Window, true
}

// SetWindow sets field value
func (o *RecoveryLocationIdProjectProjectIdPlanProperties1) SetWindow(v []RecoveryLocationIdProjectProjectIdPlanPropertiesWindow) {
	o.Window = v
}

// GetRetention returns the Retention field value
func (o *RecoveryLocationIdProjectProjectIdPlanProperties1) GetRetention() []RecoveryLocationIdProjectProjectIdPlanPropertiesRetention {
	if o == nil {
		var ret []RecoveryLocationIdProjectProjectIdPlanPropertiesRetention
		return ret
	}

	return o.Retention
}

// GetRetentionOk returns a tuple with the Retention field value
// and a boolean to check if the value has been set.
func (o *RecoveryLocationIdProjectProjectIdPlanProperties1) GetRetentionOk() ([]RecoveryLocationIdProjectProjectIdPlanPropertiesRetention, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Retention, true
}

// SetRetention sets field value
func (o *RecoveryLocationIdProjectProjectIdPlanProperties1) SetRetention(v []RecoveryLocationIdProjectProjectIdPlanPropertiesRetention) {
	o.Retention = v
}

func (o RecoveryLocationIdProjectProjectIdPlanProperties1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["window"] = o.Window
	}
	if true {
		toSerialize["retention"] = o.Retention
	}
	return json.Marshal(toSerialize)
}

type NullableRecoveryLocationIdProjectProjectIdPlanProperties1 struct {
	value *RecoveryLocationIdProjectProjectIdPlanProperties1
	isSet bool
}

func (v NullableRecoveryLocationIdProjectProjectIdPlanProperties1) Get() *RecoveryLocationIdProjectProjectIdPlanProperties1 {
	return v.value
}

func (v *NullableRecoveryLocationIdProjectProjectIdPlanProperties1) Set(val *RecoveryLocationIdProjectProjectIdPlanProperties1) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoveryLocationIdProjectProjectIdPlanProperties1) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoveryLocationIdProjectProjectIdPlanProperties1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoveryLocationIdProjectProjectIdPlanProperties1(val *RecoveryLocationIdProjectProjectIdPlanProperties1) *NullableRecoveryLocationIdProjectProjectIdPlanProperties1 {
	return &NullableRecoveryLocationIdProjectProjectIdPlanProperties1{value: val, isSet: true}
}

func (v NullableRecoveryLocationIdProjectProjectIdPlanProperties1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoveryLocationIdProjectProjectIdPlanProperties1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


