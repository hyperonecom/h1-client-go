/*
 * HyperOne
 *
 * HyperOne API
 *
 * API version: 0.1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h1

import (
	"encoding/json"
)

// ComputeProjectVmPasswordReset struct for ComputeProjectVmPasswordReset
type ComputeProjectVmPasswordReset struct {
	UserName string `json:"userName"`
	Modulus string `json:"modulus"`
	Exponent string `json:"exponent"`
}

// NewComputeProjectVmPasswordReset instantiates a new ComputeProjectVmPasswordReset object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComputeProjectVmPasswordReset(userName string, modulus string, exponent string) *ComputeProjectVmPasswordReset {
	this := ComputeProjectVmPasswordReset{}
	this.UserName = userName
	this.Modulus = modulus
	this.Exponent = exponent
	return &this
}

// NewComputeProjectVmPasswordResetWithDefaults instantiates a new ComputeProjectVmPasswordReset object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComputeProjectVmPasswordResetWithDefaults() *ComputeProjectVmPasswordReset {
	this := ComputeProjectVmPasswordReset{}
	return &this
}

// GetUserName returns the UserName field value
func (o *ComputeProjectVmPasswordReset) GetUserName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value
// and a boolean to check if the value has been set.
func (o *ComputeProjectVmPasswordReset) GetUserNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UserName, true
}

// SetUserName sets field value
func (o *ComputeProjectVmPasswordReset) SetUserName(v string) {
	o.UserName = v
}

// GetModulus returns the Modulus field value
func (o *ComputeProjectVmPasswordReset) GetModulus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Modulus
}

// GetModulusOk returns a tuple with the Modulus field value
// and a boolean to check if the value has been set.
func (o *ComputeProjectVmPasswordReset) GetModulusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Modulus, true
}

// SetModulus sets field value
func (o *ComputeProjectVmPasswordReset) SetModulus(v string) {
	o.Modulus = v
}

// GetExponent returns the Exponent field value
func (o *ComputeProjectVmPasswordReset) GetExponent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Exponent
}

// GetExponentOk returns a tuple with the Exponent field value
// and a boolean to check if the value has been set.
func (o *ComputeProjectVmPasswordReset) GetExponentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Exponent, true
}

// SetExponent sets field value
func (o *ComputeProjectVmPasswordReset) SetExponent(v string) {
	o.Exponent = v
}

func (o ComputeProjectVmPasswordReset) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["userName"] = o.UserName
	}
	if true {
		toSerialize["modulus"] = o.Modulus
	}
	if true {
		toSerialize["exponent"] = o.Exponent
	}
	return json.Marshal(toSerialize)
}

type NullableComputeProjectVmPasswordReset struct {
	value *ComputeProjectVmPasswordReset
	isSet bool
}

func (v NullableComputeProjectVmPasswordReset) Get() *ComputeProjectVmPasswordReset {
	return v.value
}

func (v *NullableComputeProjectVmPasswordReset) Set(val *ComputeProjectVmPasswordReset) {
	v.value = val
	v.isSet = true
}

func (v NullableComputeProjectVmPasswordReset) IsSet() bool {
	return v.isSet
}

func (v *NullableComputeProjectVmPasswordReset) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComputeProjectVmPasswordReset(val *ComputeProjectVmPasswordReset) *NullableComputeProjectVmPasswordReset {
	return &NullableComputeProjectVmPasswordReset{value: val, isSet: true}
}

func (v NullableComputeProjectVmPasswordReset) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComputeProjectVmPasswordReset) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


