/*
HyperOne

HyperOne API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// WebsiteLocationIdProjectProjectIdInstanceTag struct for WebsiteLocationIdProjectProjectIdInstanceTag
type WebsiteLocationIdProjectProjectIdInstanceTag struct {
	Id *string `json:"id,omitempty"`
	Key string `json:"key"`
	Value string `json:"value"`
}

// NewWebsiteLocationIdProjectProjectIdInstanceTag instantiates a new WebsiteLocationIdProjectProjectIdInstanceTag object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebsiteLocationIdProjectProjectIdInstanceTag(key string, value string) *WebsiteLocationIdProjectProjectIdInstanceTag {
	this := WebsiteLocationIdProjectProjectIdInstanceTag{}
	this.Key = key
	this.Value = value
	return &this
}

// NewWebsiteLocationIdProjectProjectIdInstanceTagWithDefaults instantiates a new WebsiteLocationIdProjectProjectIdInstanceTag object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebsiteLocationIdProjectProjectIdInstanceTagWithDefaults() *WebsiteLocationIdProjectProjectIdInstanceTag {
	this := WebsiteLocationIdProjectProjectIdInstanceTag{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WebsiteLocationIdProjectProjectIdInstanceTag) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebsiteLocationIdProjectProjectIdInstanceTag) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WebsiteLocationIdProjectProjectIdInstanceTag) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WebsiteLocationIdProjectProjectIdInstanceTag) SetId(v string) {
	o.Id = &v
}

// GetKey returns the Key field value
func (o *WebsiteLocationIdProjectProjectIdInstanceTag) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *WebsiteLocationIdProjectProjectIdInstanceTag) GetKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *WebsiteLocationIdProjectProjectIdInstanceTag) SetKey(v string) {
	o.Key = v
}

// GetValue returns the Value field value
func (o *WebsiteLocationIdProjectProjectIdInstanceTag) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *WebsiteLocationIdProjectProjectIdInstanceTag) GetValueOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *WebsiteLocationIdProjectProjectIdInstanceTag) SetValue(v string) {
	o.Value = v
}

func (o WebsiteLocationIdProjectProjectIdInstanceTag) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["key"] = o.Key
	}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableWebsiteLocationIdProjectProjectIdInstanceTag struct {
	value *WebsiteLocationIdProjectProjectIdInstanceTag
	isSet bool
}

func (v NullableWebsiteLocationIdProjectProjectIdInstanceTag) Get() *WebsiteLocationIdProjectProjectIdInstanceTag {
	return v.value
}

func (v *NullableWebsiteLocationIdProjectProjectIdInstanceTag) Set(val *WebsiteLocationIdProjectProjectIdInstanceTag) {
	v.value = val
	v.isSet = true
}

func (v NullableWebsiteLocationIdProjectProjectIdInstanceTag) IsSet() bool {
	return v.isSet
}

func (v *NullableWebsiteLocationIdProjectProjectIdInstanceTag) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebsiteLocationIdProjectProjectIdInstanceTag(val *WebsiteLocationIdProjectProjectIdInstanceTag) *NullableWebsiteLocationIdProjectProjectIdInstanceTag {
	return &NullableWebsiteLocationIdProjectProjectIdInstanceTag{value: val, isSet: true}
}

func (v NullableWebsiteLocationIdProjectProjectIdInstanceTag) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebsiteLocationIdProjectProjectIdInstanceTag) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


