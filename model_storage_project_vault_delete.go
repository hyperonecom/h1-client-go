/*
HyperOne

HyperOne API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// StorageProjectVaultDelete struct for StorageProjectVaultDelete
type StorageProjectVaultDelete struct {
	RemoveAllSnapshots *bool `json:"removeAllSnapshots,omitempty"`
}

// NewStorageProjectVaultDelete instantiates a new StorageProjectVaultDelete object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStorageProjectVaultDelete() *StorageProjectVaultDelete {
	this := StorageProjectVaultDelete{}
	var removeAllSnapshots bool = false
	this.RemoveAllSnapshots = &removeAllSnapshots
	return &this
}

// NewStorageProjectVaultDeleteWithDefaults instantiates a new StorageProjectVaultDelete object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStorageProjectVaultDeleteWithDefaults() *StorageProjectVaultDelete {
	this := StorageProjectVaultDelete{}
	var removeAllSnapshots bool = false
	this.RemoveAllSnapshots = &removeAllSnapshots
	return &this
}

// GetRemoveAllSnapshots returns the RemoveAllSnapshots field value if set, zero value otherwise.
func (o *StorageProjectVaultDelete) GetRemoveAllSnapshots() bool {
	if o == nil || o.RemoveAllSnapshots == nil {
		var ret bool
		return ret
	}
	return *o.RemoveAllSnapshots
}

// GetRemoveAllSnapshotsOk returns a tuple with the RemoveAllSnapshots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageProjectVaultDelete) GetRemoveAllSnapshotsOk() (*bool, bool) {
	if o == nil || o.RemoveAllSnapshots == nil {
		return nil, false
	}
	return o.RemoveAllSnapshots, true
}

// HasRemoveAllSnapshots returns a boolean if a field has been set.
func (o *StorageProjectVaultDelete) HasRemoveAllSnapshots() bool {
	if o != nil && o.RemoveAllSnapshots != nil {
		return true
	}

	return false
}

// SetRemoveAllSnapshots gets a reference to the given bool and assigns it to the RemoveAllSnapshots field.
func (o *StorageProjectVaultDelete) SetRemoveAllSnapshots(v bool) {
	o.RemoveAllSnapshots = &v
}

func (o StorageProjectVaultDelete) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RemoveAllSnapshots != nil {
		toSerialize["removeAllSnapshots"] = o.RemoveAllSnapshots
	}
	return json.Marshal(toSerialize)
}

type NullableStorageProjectVaultDelete struct {
	value *StorageProjectVaultDelete
	isSet bool
}

func (v NullableStorageProjectVaultDelete) Get() *StorageProjectVaultDelete {
	return v.value
}

func (v *NullableStorageProjectVaultDelete) Set(val *StorageProjectVaultDelete) {
	v.value = val
	v.isSet = true
}

func (v NullableStorageProjectVaultDelete) IsSet() bool {
	return v.isSet
}

func (v *NullableStorageProjectVaultDelete) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStorageProjectVaultDelete(val *StorageProjectVaultDelete) *NullableStorageProjectVaultDelete {
	return &NullableStorageProjectVaultDelete{value: val, isSet: true}
}

func (v NullableStorageProjectVaultDelete) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStorageProjectVaultDelete) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


