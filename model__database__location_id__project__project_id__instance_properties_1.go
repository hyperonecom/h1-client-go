/*
HyperOne

HyperOne API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DatabaseLocationIdProjectProjectIdInstanceProperties1 struct for DatabaseLocationIdProjectProjectIdInstanceProperties1
type DatabaseLocationIdProjectProjectIdInstanceProperties1 struct {
	Source *string `json:"source,omitempty"`
}

// NewDatabaseLocationIdProjectProjectIdInstanceProperties1 instantiates a new DatabaseLocationIdProjectProjectIdInstanceProperties1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDatabaseLocationIdProjectProjectIdInstanceProperties1() *DatabaseLocationIdProjectProjectIdInstanceProperties1 {
	this := DatabaseLocationIdProjectProjectIdInstanceProperties1{}
	return &this
}

// NewDatabaseLocationIdProjectProjectIdInstanceProperties1WithDefaults instantiates a new DatabaseLocationIdProjectProjectIdInstanceProperties1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDatabaseLocationIdProjectProjectIdInstanceProperties1WithDefaults() *DatabaseLocationIdProjectProjectIdInstanceProperties1 {
	this := DatabaseLocationIdProjectProjectIdInstanceProperties1{}
	return &this
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *DatabaseLocationIdProjectProjectIdInstanceProperties1) GetSource() string {
	if o == nil || o.Source == nil {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseLocationIdProjectProjectIdInstanceProperties1) GetSourceOk() (*string, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *DatabaseLocationIdProjectProjectIdInstanceProperties1) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *DatabaseLocationIdProjectProjectIdInstanceProperties1) SetSource(v string) {
	o.Source = &v
}

func (o DatabaseLocationIdProjectProjectIdInstanceProperties1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	return json.Marshal(toSerialize)
}

type NullableDatabaseLocationIdProjectProjectIdInstanceProperties1 struct {
	value *DatabaseLocationIdProjectProjectIdInstanceProperties1
	isSet bool
}

func (v NullableDatabaseLocationIdProjectProjectIdInstanceProperties1) Get() *DatabaseLocationIdProjectProjectIdInstanceProperties1 {
	return v.value
}

func (v *NullableDatabaseLocationIdProjectProjectIdInstanceProperties1) Set(val *DatabaseLocationIdProjectProjectIdInstanceProperties1) {
	v.value = val
	v.isSet = true
}

func (v NullableDatabaseLocationIdProjectProjectIdInstanceProperties1) IsSet() bool {
	return v.isSet
}

func (v *NullableDatabaseLocationIdProjectProjectIdInstanceProperties1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDatabaseLocationIdProjectProjectIdInstanceProperties1(val *DatabaseLocationIdProjectProjectIdInstanceProperties1) *NullableDatabaseLocationIdProjectProjectIdInstanceProperties1 {
	return &NullableDatabaseLocationIdProjectProjectIdInstanceProperties1{value: val, isSet: true}
}

func (v NullableDatabaseLocationIdProjectProjectIdInstanceProperties1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDatabaseLocationIdProjectProjectIdInstanceProperties1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


