/*
HyperOne

HyperOne API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// WebsiteLocationIdProjectProjectIdInstanceProperties1 struct for WebsiteLocationIdProjectProjectIdInstanceProperties1
type WebsiteLocationIdProjectProjectIdInstanceProperties1 struct {
	Image string `json:"image"`
	Env []WebsiteLocationIdProjectProjectIdInstanceProperties1Env `json:"env,omitempty"`
	Source OneOfstringstring `json:"source,omitempty"`
}

// NewWebsiteLocationIdProjectProjectIdInstanceProperties1 instantiates a new WebsiteLocationIdProjectProjectIdInstanceProperties1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebsiteLocationIdProjectProjectIdInstanceProperties1(image string) *WebsiteLocationIdProjectProjectIdInstanceProperties1 {
	this := WebsiteLocationIdProjectProjectIdInstanceProperties1{}
	this.Image = image
	return &this
}

// NewWebsiteLocationIdProjectProjectIdInstanceProperties1WithDefaults instantiates a new WebsiteLocationIdProjectProjectIdInstanceProperties1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebsiteLocationIdProjectProjectIdInstanceProperties1WithDefaults() *WebsiteLocationIdProjectProjectIdInstanceProperties1 {
	this := WebsiteLocationIdProjectProjectIdInstanceProperties1{}
	return &this
}

// GetImage returns the Image field value
func (o *WebsiteLocationIdProjectProjectIdInstanceProperties1) GetImage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Image
}

// GetImageOk returns a tuple with the Image field value
// and a boolean to check if the value has been set.
func (o *WebsiteLocationIdProjectProjectIdInstanceProperties1) GetImageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Image, true
}

// SetImage sets field value
func (o *WebsiteLocationIdProjectProjectIdInstanceProperties1) SetImage(v string) {
	o.Image = v
}

// GetEnv returns the Env field value if set, zero value otherwise.
func (o *WebsiteLocationIdProjectProjectIdInstanceProperties1) GetEnv() []WebsiteLocationIdProjectProjectIdInstanceProperties1Env {
	if o == nil || o.Env == nil {
		var ret []WebsiteLocationIdProjectProjectIdInstanceProperties1Env
		return ret
	}
	return o.Env
}

// GetEnvOk returns a tuple with the Env field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebsiteLocationIdProjectProjectIdInstanceProperties1) GetEnvOk() ([]WebsiteLocationIdProjectProjectIdInstanceProperties1Env, bool) {
	if o == nil || o.Env == nil {
		return nil, false
	}
	return o.Env, true
}

// HasEnv returns a boolean if a field has been set.
func (o *WebsiteLocationIdProjectProjectIdInstanceProperties1) HasEnv() bool {
	if o != nil && o.Env != nil {
		return true
	}

	return false
}

// SetEnv gets a reference to the given []WebsiteLocationIdProjectProjectIdInstanceProperties1Env and assigns it to the Env field.
func (o *WebsiteLocationIdProjectProjectIdInstanceProperties1) SetEnv(v []WebsiteLocationIdProjectProjectIdInstanceProperties1Env) {
	o.Env = v
}

// GetSource returns the Source field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebsiteLocationIdProjectProjectIdInstanceProperties1) GetSource() OneOfstringstring {
	if o == nil  {
		var ret OneOfstringstring
		return ret
	}
	return o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebsiteLocationIdProjectProjectIdInstanceProperties1) GetSourceOk() (*OneOfstringstring, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return &o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *WebsiteLocationIdProjectProjectIdInstanceProperties1) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given OneOfstringstring and assigns it to the Source field.
func (o *WebsiteLocationIdProjectProjectIdInstanceProperties1) SetSource(v OneOfstringstring) {
	o.Source = v
}

func (o WebsiteLocationIdProjectProjectIdInstanceProperties1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["image"] = o.Image
	}
	if o.Env != nil {
		toSerialize["env"] = o.Env
	}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	return json.Marshal(toSerialize)
}

type NullableWebsiteLocationIdProjectProjectIdInstanceProperties1 struct {
	value *WebsiteLocationIdProjectProjectIdInstanceProperties1
	isSet bool
}

func (v NullableWebsiteLocationIdProjectProjectIdInstanceProperties1) Get() *WebsiteLocationIdProjectProjectIdInstanceProperties1 {
	return v.value
}

func (v *NullableWebsiteLocationIdProjectProjectIdInstanceProperties1) Set(val *WebsiteLocationIdProjectProjectIdInstanceProperties1) {
	v.value = val
	v.isSet = true
}

func (v NullableWebsiteLocationIdProjectProjectIdInstanceProperties1) IsSet() bool {
	return v.isSet
}

func (v *NullableWebsiteLocationIdProjectProjectIdInstanceProperties1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebsiteLocationIdProjectProjectIdInstanceProperties1(val *WebsiteLocationIdProjectProjectIdInstanceProperties1) *NullableWebsiteLocationIdProjectProjectIdInstanceProperties1 {
	return &NullableWebsiteLocationIdProjectProjectIdInstanceProperties1{value: val, isSet: true}
}

func (v NullableWebsiteLocationIdProjectProjectIdInstanceProperties1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebsiteLocationIdProjectProjectIdInstanceProperties1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


