/*
HyperOne

HyperOne API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NetworkingProjectIpUpdate struct for NetworkingProjectIpUpdate
type NetworkingProjectIpUpdate struct {
	PtrRecord *string `json:"ptrRecord,omitempty"`
}

// NewNetworkingProjectIpUpdate instantiates a new NetworkingProjectIpUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkingProjectIpUpdate() *NetworkingProjectIpUpdate {
	this := NetworkingProjectIpUpdate{}
	return &this
}

// NewNetworkingProjectIpUpdateWithDefaults instantiates a new NetworkingProjectIpUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkingProjectIpUpdateWithDefaults() *NetworkingProjectIpUpdate {
	this := NetworkingProjectIpUpdate{}
	return &this
}

// GetPtrRecord returns the PtrRecord field value if set, zero value otherwise.
func (o *NetworkingProjectIpUpdate) GetPtrRecord() string {
	if o == nil || o.PtrRecord == nil {
		var ret string
		return ret
	}
	return *o.PtrRecord
}

// GetPtrRecordOk returns a tuple with the PtrRecord field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkingProjectIpUpdate) GetPtrRecordOk() (*string, bool) {
	if o == nil || o.PtrRecord == nil {
		return nil, false
	}
	return o.PtrRecord, true
}

// HasPtrRecord returns a boolean if a field has been set.
func (o *NetworkingProjectIpUpdate) HasPtrRecord() bool {
	if o != nil && o.PtrRecord != nil {
		return true
	}

	return false
}

// SetPtrRecord gets a reference to the given string and assigns it to the PtrRecord field.
func (o *NetworkingProjectIpUpdate) SetPtrRecord(v string) {
	o.PtrRecord = &v
}

func (o NetworkingProjectIpUpdate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PtrRecord != nil {
		toSerialize["ptrRecord"] = o.PtrRecord
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkingProjectIpUpdate struct {
	value *NetworkingProjectIpUpdate
	isSet bool
}

func (v NullableNetworkingProjectIpUpdate) Get() *NetworkingProjectIpUpdate {
	return v.value
}

func (v *NullableNetworkingProjectIpUpdate) Set(val *NetworkingProjectIpUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkingProjectIpUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkingProjectIpUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkingProjectIpUpdate(val *NetworkingProjectIpUpdate) *NullableNetworkingProjectIpUpdate {
	return &NullableNetworkingProjectIpUpdate{value: val, isSet: true}
}

func (v NullableNetworkingProjectIpUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkingProjectIpUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


