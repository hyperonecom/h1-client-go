/*
HyperOne

HyperOne API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// ContainerImage struct for ContainerImage
type ContainerImage struct {
	CreatedOn time.Time `json:"createdOn"`
	Digest string `json:"digest"`
	Id *string `json:"id,omitempty"`
	ModifiedOn time.Time `json:"modifiedOn"`
	Name string `json:"name"`
}

// NewContainerImage instantiates a new ContainerImage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerImage(createdOn time.Time, digest string, modifiedOn time.Time, name string) *ContainerImage {
	this := ContainerImage{}
	this.CreatedOn = createdOn
	this.Digest = digest
	this.ModifiedOn = modifiedOn
	this.Name = name
	return &this
}

// NewContainerImageWithDefaults instantiates a new ContainerImage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerImageWithDefaults() *ContainerImage {
	this := ContainerImage{}
	return &this
}

// GetCreatedOn returns the CreatedOn field value
func (o *ContainerImage) GetCreatedOn() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value
// and a boolean to check if the value has been set.
func (o *ContainerImage) GetCreatedOnOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CreatedOn, true
}

// SetCreatedOn sets field value
func (o *ContainerImage) SetCreatedOn(v time.Time) {
	o.CreatedOn = v
}

// GetDigest returns the Digest field value
func (o *ContainerImage) GetDigest() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Digest
}

// GetDigestOk returns a tuple with the Digest field value
// and a boolean to check if the value has been set.
func (o *ContainerImage) GetDigestOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Digest, true
}

// SetDigest sets field value
func (o *ContainerImage) SetDigest(v string) {
	o.Digest = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ContainerImage) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerImage) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ContainerImage) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ContainerImage) SetId(v string) {
	o.Id = &v
}

// GetModifiedOn returns the ModifiedOn field value
func (o *ContainerImage) GetModifiedOn() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedOn
}

// GetModifiedOnOk returns a tuple with the ModifiedOn field value
// and a boolean to check if the value has been set.
func (o *ContainerImage) GetModifiedOnOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ModifiedOn, true
}

// SetModifiedOn sets field value
func (o *ContainerImage) SetModifiedOn(v time.Time) {
	o.ModifiedOn = v
}

// GetName returns the Name field value
func (o *ContainerImage) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ContainerImage) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ContainerImage) SetName(v string) {
	o.Name = v
}

func (o ContainerImage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["createdOn"] = o.CreatedOn
	}
	if true {
		toSerialize["digest"] = o.Digest
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["modifiedOn"] = o.ModifiedOn
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableContainerImage struct {
	value *ContainerImage
	isSet bool
}

func (v NullableContainerImage) Get() *ContainerImage {
	return v.value
}

func (v *NullableContainerImage) Set(val *ContainerImage) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerImage) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerImage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerImage(val *ContainerImage) *NullableContainerImage {
	return &NullableContainerImage{value: val, isSet: true}
}

func (v NullableContainerImage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerImage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


