/*
HyperOne

HyperOne API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// StorageProjectVaultResize struct for StorageProjectVaultResize
type StorageProjectVaultResize struct {
	Size float32 `json:"size"`
}

// NewStorageProjectVaultResize instantiates a new StorageProjectVaultResize object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStorageProjectVaultResize(size float32) *StorageProjectVaultResize {
	this := StorageProjectVaultResize{}
	this.Size = size
	return &this
}

// NewStorageProjectVaultResizeWithDefaults instantiates a new StorageProjectVaultResize object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStorageProjectVaultResizeWithDefaults() *StorageProjectVaultResize {
	this := StorageProjectVaultResize{}
	return &this
}

// GetSize returns the Size field value
func (o *StorageProjectVaultResize) GetSize() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *StorageProjectVaultResize) GetSizeOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *StorageProjectVaultResize) SetSize(v float32) {
	o.Size = v
}

func (o StorageProjectVaultResize) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["size"] = o.Size
	}
	return json.Marshal(toSerialize)
}

type NullableStorageProjectVaultResize struct {
	value *StorageProjectVaultResize
	isSet bool
}

func (v NullableStorageProjectVaultResize) Get() *StorageProjectVaultResize {
	return v.value
}

func (v *NullableStorageProjectVaultResize) Set(val *StorageProjectVaultResize) {
	v.value = val
	v.isSet = true
}

func (v NullableStorageProjectVaultResize) IsSet() bool {
	return v.isSet
}

func (v *NullableStorageProjectVaultResize) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStorageProjectVaultResize(val *StorageProjectVaultResize) *NullableStorageProjectVaultResize {
	return &NullableStorageProjectVaultResize{value: val, isSet: true}
}

func (v NullableStorageProjectVaultResize) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStorageProjectVaultResize) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


