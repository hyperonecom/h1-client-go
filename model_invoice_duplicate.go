/*
HyperOne

HyperOne API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InvoiceDuplicate struct for InvoiceDuplicate
type InvoiceDuplicate struct {
	CreatedOn *string `json:"createdOn,omitempty"`
	Id *string `json:"id,omitempty"`
}

// NewInvoiceDuplicate instantiates a new InvoiceDuplicate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceDuplicate() *InvoiceDuplicate {
	this := InvoiceDuplicate{}
	return &this
}

// NewInvoiceDuplicateWithDefaults instantiates a new InvoiceDuplicate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceDuplicateWithDefaults() *InvoiceDuplicate {
	this := InvoiceDuplicate{}
	return &this
}

// GetCreatedOn returns the CreatedOn field value if set, zero value otherwise.
func (o *InvoiceDuplicate) GetCreatedOn() string {
	if o == nil || o.CreatedOn == nil {
		var ret string
		return ret
	}
	return *o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDuplicate) GetCreatedOnOk() (*string, bool) {
	if o == nil || o.CreatedOn == nil {
		return nil, false
	}
	return o.CreatedOn, true
}

// HasCreatedOn returns a boolean if a field has been set.
func (o *InvoiceDuplicate) HasCreatedOn() bool {
	if o != nil && o.CreatedOn != nil {
		return true
	}

	return false
}

// SetCreatedOn gets a reference to the given string and assigns it to the CreatedOn field.
func (o *InvoiceDuplicate) SetCreatedOn(v string) {
	o.CreatedOn = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InvoiceDuplicate) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDuplicate) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InvoiceDuplicate) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InvoiceDuplicate) SetId(v string) {
	o.Id = &v
}

func (o InvoiceDuplicate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedOn != nil {
		toSerialize["createdOn"] = o.CreatedOn
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableInvoiceDuplicate struct {
	value *InvoiceDuplicate
	isSet bool
}

func (v NullableInvoiceDuplicate) Get() *InvoiceDuplicate {
	return v.value
}

func (v *NullableInvoiceDuplicate) Set(val *InvoiceDuplicate) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceDuplicate) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceDuplicate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceDuplicate(val *InvoiceDuplicate) *NullableInvoiceDuplicate {
	return &NullableInvoiceDuplicate{value: val, isSet: true}
}

func (v NullableInvoiceDuplicate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceDuplicate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


