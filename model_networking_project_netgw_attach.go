/*
HyperOne

HyperOne API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NetworkingProjectNetgwAttach struct for NetworkingProjectNetgwAttach
type NetworkingProjectNetgwAttach struct {
	Private *NetgwPrivate `json:"private,omitempty"`
}

// NewNetworkingProjectNetgwAttach instantiates a new NetworkingProjectNetgwAttach object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkingProjectNetgwAttach() *NetworkingProjectNetgwAttach {
	this := NetworkingProjectNetgwAttach{}
	return &this
}

// NewNetworkingProjectNetgwAttachWithDefaults instantiates a new NetworkingProjectNetgwAttach object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkingProjectNetgwAttachWithDefaults() *NetworkingProjectNetgwAttach {
	this := NetworkingProjectNetgwAttach{}
	return &this
}

// GetPrivate returns the Private field value if set, zero value otherwise.
func (o *NetworkingProjectNetgwAttach) GetPrivate() NetgwPrivate {
	if o == nil || o.Private == nil {
		var ret NetgwPrivate
		return ret
	}
	return *o.Private
}

// GetPrivateOk returns a tuple with the Private field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkingProjectNetgwAttach) GetPrivateOk() (*NetgwPrivate, bool) {
	if o == nil || o.Private == nil {
		return nil, false
	}
	return o.Private, true
}

// HasPrivate returns a boolean if a field has been set.
func (o *NetworkingProjectNetgwAttach) HasPrivate() bool {
	if o != nil && o.Private != nil {
		return true
	}

	return false
}

// SetPrivate gets a reference to the given NetgwPrivate and assigns it to the Private field.
func (o *NetworkingProjectNetgwAttach) SetPrivate(v NetgwPrivate) {
	o.Private = &v
}

func (o NetworkingProjectNetgwAttach) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Private != nil {
		toSerialize["private"] = o.Private
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkingProjectNetgwAttach struct {
	value *NetworkingProjectNetgwAttach
	isSet bool
}

func (v NullableNetworkingProjectNetgwAttach) Get() *NetworkingProjectNetgwAttach {
	return v.value
}

func (v *NullableNetworkingProjectNetgwAttach) Set(val *NetworkingProjectNetgwAttach) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkingProjectNetgwAttach) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkingProjectNetgwAttach) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkingProjectNetgwAttach(val *NetworkingProjectNetgwAttach) *NullableNetworkingProjectNetgwAttach {
	return &NullableNetworkingProjectNetgwAttach{value: val, isSet: true}
}

func (v NullableNetworkingProjectNetgwAttach) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkingProjectNetgwAttach) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


