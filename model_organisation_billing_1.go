/*
HyperOne

HyperOne API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OrganisationBilling1 struct for OrganisationBilling1
type OrganisationBilling1 struct {
	Email *string `json:"email,omitempty"`
	Company *string `json:"company,omitempty"`
	Address *BillingAddress1 `json:"address,omitempty"`
}

// NewOrganisationBilling1 instantiates a new OrganisationBilling1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganisationBilling1() *OrganisationBilling1 {
	this := OrganisationBilling1{}
	return &this
}

// NewOrganisationBilling1WithDefaults instantiates a new OrganisationBilling1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganisationBilling1WithDefaults() *OrganisationBilling1 {
	this := OrganisationBilling1{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *OrganisationBilling1) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationBilling1) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *OrganisationBilling1) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *OrganisationBilling1) SetEmail(v string) {
	o.Email = &v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *OrganisationBilling1) GetCompany() string {
	if o == nil || o.Company == nil {
		var ret string
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationBilling1) GetCompanyOk() (*string, bool) {
	if o == nil || o.Company == nil {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *OrganisationBilling1) HasCompany() bool {
	if o != nil && o.Company != nil {
		return true
	}

	return false
}

// SetCompany gets a reference to the given string and assigns it to the Company field.
func (o *OrganisationBilling1) SetCompany(v string) {
	o.Company = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *OrganisationBilling1) GetAddress() BillingAddress1 {
	if o == nil || o.Address == nil {
		var ret BillingAddress1
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationBilling1) GetAddressOk() (*BillingAddress1, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *OrganisationBilling1) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given BillingAddress1 and assigns it to the Address field.
func (o *OrganisationBilling1) SetAddress(v BillingAddress1) {
	o.Address = &v
}

func (o OrganisationBilling1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.Company != nil {
		toSerialize["company"] = o.Company
	}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	return json.Marshal(toSerialize)
}

type NullableOrganisationBilling1 struct {
	value *OrganisationBilling1
	isSet bool
}

func (v NullableOrganisationBilling1) Get() *OrganisationBilling1 {
	return v.value
}

func (v *NullableOrganisationBilling1) Set(val *OrganisationBilling1) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganisationBilling1) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganisationBilling1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganisationBilling1(val *OrganisationBilling1) *NullableOrganisationBilling1 {
	return &NullableOrganisationBilling1{value: val, isSet: true}
}

func (v NullableOrganisationBilling1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganisationBilling1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


