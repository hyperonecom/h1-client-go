/*
 * HyperOne
 *
 * HyperOne API
 *
 * API version: 0.1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h1

import (
	"encoding/json"
)

// IamProjectRoleUpdate struct for IamProjectRoleUpdate
type IamProjectRoleUpdate struct {
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
}

// NewIamProjectRoleUpdate instantiates a new IamProjectRoleUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIamProjectRoleUpdate() *IamProjectRoleUpdate {
	this := IamProjectRoleUpdate{}
	return &this
}

// NewIamProjectRoleUpdateWithDefaults instantiates a new IamProjectRoleUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIamProjectRoleUpdateWithDefaults() *IamProjectRoleUpdate {
	this := IamProjectRoleUpdate{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IamProjectRoleUpdate) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IamProjectRoleUpdate) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IamProjectRoleUpdate) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IamProjectRoleUpdate) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *IamProjectRoleUpdate) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IamProjectRoleUpdate) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *IamProjectRoleUpdate) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *IamProjectRoleUpdate) SetDescription(v string) {
	o.Description = &v
}

func (o IamProjectRoleUpdate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableIamProjectRoleUpdate struct {
	value *IamProjectRoleUpdate
	isSet bool
}

func (v NullableIamProjectRoleUpdate) Get() *IamProjectRoleUpdate {
	return v.value
}

func (v *NullableIamProjectRoleUpdate) Set(val *IamProjectRoleUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableIamProjectRoleUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableIamProjectRoleUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIamProjectRoleUpdate(val *IamProjectRoleUpdate) *NullableIamProjectRoleUpdate {
	return &NullableIamProjectRoleUpdate{value: val, isSet: true}
}

func (v NullableIamProjectRoleUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIamProjectRoleUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


