/*
HyperOne

HyperOne API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject18 struct for InlineObject18
type InlineObject18 struct {
	Properties RecoveryLocationIdProjectProjectIdPlanProperties1 `json:"properties"`
	Tag []WebsiteLocationIdProjectProjectIdInstanceTag1 `json:"tag,omitempty"`
	Profile string `json:"profile"`
	Name string `json:"name"`
}

// NewInlineObject18 instantiates a new InlineObject18 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject18(properties RecoveryLocationIdProjectProjectIdPlanProperties1, profile string, name string) *InlineObject18 {
	this := InlineObject18{}
	this.Properties = properties
	this.Profile = profile
	this.Name = name
	return &this
}

// NewInlineObject18WithDefaults instantiates a new InlineObject18 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject18WithDefaults() *InlineObject18 {
	this := InlineObject18{}
	return &this
}

// GetProperties returns the Properties field value
func (o *InlineObject18) GetProperties() RecoveryLocationIdProjectProjectIdPlanProperties1 {
	if o == nil {
		var ret RecoveryLocationIdProjectProjectIdPlanProperties1
		return ret
	}

	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value
// and a boolean to check if the value has been set.
func (o *InlineObject18) GetPropertiesOk() (*RecoveryLocationIdProjectProjectIdPlanProperties1, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Properties, true
}

// SetProperties sets field value
func (o *InlineObject18) SetProperties(v RecoveryLocationIdProjectProjectIdPlanProperties1) {
	o.Properties = v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *InlineObject18) GetTag() []WebsiteLocationIdProjectProjectIdInstanceTag1 {
	if o == nil || o.Tag == nil {
		var ret []WebsiteLocationIdProjectProjectIdInstanceTag1
		return ret
	}
	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject18) GetTagOk() ([]WebsiteLocationIdProjectProjectIdInstanceTag1, bool) {
	if o == nil || o.Tag == nil {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *InlineObject18) HasTag() bool {
	if o != nil && o.Tag != nil {
		return true
	}

	return false
}

// SetTag gets a reference to the given []WebsiteLocationIdProjectProjectIdInstanceTag1 and assigns it to the Tag field.
func (o *InlineObject18) SetTag(v []WebsiteLocationIdProjectProjectIdInstanceTag1) {
	o.Tag = v
}

// GetProfile returns the Profile field value
func (o *InlineObject18) GetProfile() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Profile
}

// GetProfileOk returns a tuple with the Profile field value
// and a boolean to check if the value has been set.
func (o *InlineObject18) GetProfileOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Profile, true
}

// SetProfile sets field value
func (o *InlineObject18) SetProfile(v string) {
	o.Profile = v
}

// GetName returns the Name field value
func (o *InlineObject18) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *InlineObject18) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *InlineObject18) SetName(v string) {
	o.Name = v
}

func (o InlineObject18) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["properties"] = o.Properties
	}
	if o.Tag != nil {
		toSerialize["tag"] = o.Tag
	}
	if true {
		toSerialize["profile"] = o.Profile
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject18 struct {
	value *InlineObject18
	isSet bool
}

func (v NullableInlineObject18) Get() *InlineObject18 {
	return v.value
}

func (v *NullableInlineObject18) Set(val *InlineObject18) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject18) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject18) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject18(val *InlineObject18) *NullableInlineObject18 {
	return &NullableInlineObject18{value: val, isSet: true}
}

func (v NullableInlineObject18) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject18) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


