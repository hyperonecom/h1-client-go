/*
 * HyperOne
 *
 * HyperOne API
 *
 * API version: 0.1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h1

import (
	"encoding/json"
)

// ServiceDisplay struct for ServiceDisplay
type ServiceDisplay struct {
	Unit *ServiceDisplayUnit `json:"unit,omitempty"`
}

// NewServiceDisplay instantiates a new ServiceDisplay object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceDisplay() *ServiceDisplay {
	this := ServiceDisplay{}
	return &this
}

// NewServiceDisplayWithDefaults instantiates a new ServiceDisplay object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceDisplayWithDefaults() *ServiceDisplay {
	this := ServiceDisplay{}
	return &this
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *ServiceDisplay) GetUnit() ServiceDisplayUnit {
	if o == nil || o.Unit == nil {
		var ret ServiceDisplayUnit
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceDisplay) GetUnitOk() (*ServiceDisplayUnit, bool) {
	if o == nil || o.Unit == nil {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *ServiceDisplay) HasUnit() bool {
	if o != nil && o.Unit != nil {
		return true
	}

	return false
}

// SetUnit gets a reference to the given ServiceDisplayUnit and assigns it to the Unit field.
func (o *ServiceDisplay) SetUnit(v ServiceDisplayUnit) {
	o.Unit = &v
}

func (o ServiceDisplay) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Unit != nil {
		toSerialize["unit"] = o.Unit
	}
	return json.Marshal(toSerialize)
}

type NullableServiceDisplay struct {
	value *ServiceDisplay
	isSet bool
}

func (v NullableServiceDisplay) Get() *ServiceDisplay {
	return v.value
}

func (v *NullableServiceDisplay) Set(val *ServiceDisplay) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceDisplay) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceDisplay) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceDisplay(val *ServiceDisplay) *NullableServiceDisplay {
	return &NullableServiceDisplay{value: val, isSet: true}
}

func (v NullableServiceDisplay) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceDisplay) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


