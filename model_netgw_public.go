/*
HyperOne

HyperOne API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NetgwPublic struct for NetgwPublic
type NetgwPublic struct {
	Ip string `json:"ip"`
}

// NewNetgwPublic instantiates a new NetgwPublic object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetgwPublic(ip string) *NetgwPublic {
	this := NetgwPublic{}
	this.Ip = ip
	return &this
}

// NewNetgwPublicWithDefaults instantiates a new NetgwPublic object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetgwPublicWithDefaults() *NetgwPublic {
	this := NetgwPublic{}
	return &this
}

// GetIp returns the Ip field value
func (o *NetgwPublic) GetIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ip
}

// GetIpOk returns a tuple with the Ip field value
// and a boolean to check if the value has been set.
func (o *NetgwPublic) GetIpOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Ip, true
}

// SetIp sets field value
func (o *NetgwPublic) SetIp(v string) {
	o.Ip = v
}

func (o NetgwPublic) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ip"] = o.Ip
	}
	return json.Marshal(toSerialize)
}

type NullableNetgwPublic struct {
	value *NetgwPublic
	isSet bool
}

func (v NullableNetgwPublic) Get() *NetgwPublic {
	return v.value
}

func (v *NullableNetgwPublic) Set(val *NetgwPublic) {
	v.value = val
	v.isSet = true
}

func (v NullableNetgwPublic) IsSet() bool {
	return v.isSet
}

func (v *NullableNetgwPublic) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetgwPublic(val *NetgwPublic) *NullableNetgwPublic {
	return &NullableNetgwPublic{value: val, isSet: true}
}

func (v NullableNetgwPublic) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetgwPublic) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


