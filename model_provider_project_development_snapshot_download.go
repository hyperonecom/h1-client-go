/*
 * HyperOne
 *
 * HyperOne API
 *
 * API version: 0.1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h1

import (
	"encoding/json"
)

// ProviderProjectDevelopmentSnapshotDownload struct for ProviderProjectDevelopmentSnapshotDownload
type ProviderProjectDevelopmentSnapshotDownload struct {
	Incremental *string `json:"incremental,omitempty"`
}

// NewProviderProjectDevelopmentSnapshotDownload instantiates a new ProviderProjectDevelopmentSnapshotDownload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProviderProjectDevelopmentSnapshotDownload() *ProviderProjectDevelopmentSnapshotDownload {
	this := ProviderProjectDevelopmentSnapshotDownload{}
	return &this
}

// NewProviderProjectDevelopmentSnapshotDownloadWithDefaults instantiates a new ProviderProjectDevelopmentSnapshotDownload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProviderProjectDevelopmentSnapshotDownloadWithDefaults() *ProviderProjectDevelopmentSnapshotDownload {
	this := ProviderProjectDevelopmentSnapshotDownload{}
	return &this
}

// GetIncremental returns the Incremental field value if set, zero value otherwise.
func (o *ProviderProjectDevelopmentSnapshotDownload) GetIncremental() string {
	if o == nil || o.Incremental == nil {
		var ret string
		return ret
	}
	return *o.Incremental
}

// GetIncrementalOk returns a tuple with the Incremental field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProviderProjectDevelopmentSnapshotDownload) GetIncrementalOk() (*string, bool) {
	if o == nil || o.Incremental == nil {
		return nil, false
	}
	return o.Incremental, true
}

// HasIncremental returns a boolean if a field has been set.
func (o *ProviderProjectDevelopmentSnapshotDownload) HasIncremental() bool {
	if o != nil && o.Incremental != nil {
		return true
	}

	return false
}

// SetIncremental gets a reference to the given string and assigns it to the Incremental field.
func (o *ProviderProjectDevelopmentSnapshotDownload) SetIncremental(v string) {
	o.Incremental = &v
}

func (o ProviderProjectDevelopmentSnapshotDownload) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Incremental != nil {
		toSerialize["incremental"] = o.Incremental
	}
	return json.Marshal(toSerialize)
}

type NullableProviderProjectDevelopmentSnapshotDownload struct {
	value *ProviderProjectDevelopmentSnapshotDownload
	isSet bool
}

func (v NullableProviderProjectDevelopmentSnapshotDownload) Get() *ProviderProjectDevelopmentSnapshotDownload {
	return v.value
}

func (v *NullableProviderProjectDevelopmentSnapshotDownload) Set(val *ProviderProjectDevelopmentSnapshotDownload) {
	v.value = val
	v.isSet = true
}

func (v NullableProviderProjectDevelopmentSnapshotDownload) IsSet() bool {
	return v.isSet
}

func (v *NullableProviderProjectDevelopmentSnapshotDownload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProviderProjectDevelopmentSnapshotDownload(val *ProviderProjectDevelopmentSnapshotDownload) *NullableProviderProjectDevelopmentSnapshotDownload {
	return &NullableProviderProjectDevelopmentSnapshotDownload{value: val, isSet: true}
}

func (v NullableProviderProjectDevelopmentSnapshotDownload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProviderProjectDevelopmentSnapshotDownload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


