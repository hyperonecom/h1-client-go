/*
 * HyperOne
 *
 * HyperOne API
 *
 * API version: 0.1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h1

import (
	"encoding/json"
)

// WebsiteProjectInstanceTransfer struct for WebsiteProjectInstanceTransfer
type WebsiteProjectInstanceTransfer struct {
	Project string `json:"project"`
}

// NewWebsiteProjectInstanceTransfer instantiates a new WebsiteProjectInstanceTransfer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebsiteProjectInstanceTransfer(project string, ) *WebsiteProjectInstanceTransfer {
	this := WebsiteProjectInstanceTransfer{}
	this.Project = project
	return &this
}

// NewWebsiteProjectInstanceTransferWithDefaults instantiates a new WebsiteProjectInstanceTransfer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebsiteProjectInstanceTransferWithDefaults() *WebsiteProjectInstanceTransfer {
	this := WebsiteProjectInstanceTransfer{}
	return &this
}

// GetProject returns the Project field value
func (o *WebsiteProjectInstanceTransfer) GetProject() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Project
}

// GetProjectOk returns a tuple with the Project field value
// and a boolean to check if the value has been set.
func (o *WebsiteProjectInstanceTransfer) GetProjectOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Project, true
}

// SetProject sets field value
func (o *WebsiteProjectInstanceTransfer) SetProject(v string) {
	o.Project = v
}

func (o WebsiteProjectInstanceTransfer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["project"] = o.Project
	}
	return json.Marshal(toSerialize)
}

type NullableWebsiteProjectInstanceTransfer struct {
	value *WebsiteProjectInstanceTransfer
	isSet bool
}

func (v NullableWebsiteProjectInstanceTransfer) Get() *WebsiteProjectInstanceTransfer {
	return v.value
}

func (v *NullableWebsiteProjectInstanceTransfer) Set(val *WebsiteProjectInstanceTransfer) {
	v.value = val
	v.isSet = true
}

func (v NullableWebsiteProjectInstanceTransfer) IsSet() bool {
	return v.isSet
}

func (v *NullableWebsiteProjectInstanceTransfer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebsiteProjectInstanceTransfer(val *WebsiteProjectInstanceTransfer) *NullableWebsiteProjectInstanceTransfer {
	return &NullableWebsiteProjectInstanceTransfer{value: val, isSet: true}
}

func (v NullableWebsiteProjectInstanceTransfer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebsiteProjectInstanceTransfer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


