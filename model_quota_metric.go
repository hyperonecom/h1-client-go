/*
 * HyperOne
 *
 * HyperOne API
 *
 * API version: 0.1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h1

import (
	"encoding/json"
)

// QuotaMetric struct for QuotaMetric
type QuotaMetric struct {
	Key *string `json:"key,omitempty"`
	Unit *string `json:"unit,omitempty"`
}

// NewQuotaMetric instantiates a new QuotaMetric object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuotaMetric() *QuotaMetric {
	this := QuotaMetric{}
	return &this
}

// NewQuotaMetricWithDefaults instantiates a new QuotaMetric object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuotaMetricWithDefaults() *QuotaMetric {
	this := QuotaMetric{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *QuotaMetric) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaMetric) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *QuotaMetric) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *QuotaMetric) SetKey(v string) {
	o.Key = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *QuotaMetric) GetUnit() string {
	if o == nil || o.Unit == nil {
		var ret string
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaMetric) GetUnitOk() (*string, bool) {
	if o == nil || o.Unit == nil {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *QuotaMetric) HasUnit() bool {
	if o != nil && o.Unit != nil {
		return true
	}

	return false
}

// SetUnit gets a reference to the given string and assigns it to the Unit field.
func (o *QuotaMetric) SetUnit(v string) {
	o.Unit = &v
}

func (o QuotaMetric) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.Unit != nil {
		toSerialize["unit"] = o.Unit
	}
	return json.Marshal(toSerialize)
}

type NullableQuotaMetric struct {
	value *QuotaMetric
	isSet bool
}

func (v NullableQuotaMetric) Get() *QuotaMetric {
	return v.value
}

func (v *NullableQuotaMetric) Set(val *QuotaMetric) {
	v.value = val
	v.isSet = true
}

func (v NullableQuotaMetric) IsSet() bool {
	return v.isSet
}

func (v *NullableQuotaMetric) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuotaMetric(val *QuotaMetric) *NullableQuotaMetric {
	return &NullableQuotaMetric{value: val, isSet: true}
}

func (v NullableQuotaMetric) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuotaMetric) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


