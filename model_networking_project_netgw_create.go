/*
 * HyperOne
 *
 * HyperOne API
 *
 * API version: 0.1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h1

import (
	"encoding/json"
)

// NetworkingProjectNetgwCreate struct for NetworkingProjectNetgwCreate
type NetworkingProjectNetgwCreate struct {
	Name *string `json:"name,omitempty"`
	Public *NetgwPublic `json:"public,omitempty"`
	Tag *[]Tag `json:"tag,omitempty"`
}

// NewNetworkingProjectNetgwCreate instantiates a new NetworkingProjectNetgwCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkingProjectNetgwCreate() *NetworkingProjectNetgwCreate {
	this := NetworkingProjectNetgwCreate{}
	return &this
}

// NewNetworkingProjectNetgwCreateWithDefaults instantiates a new NetworkingProjectNetgwCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkingProjectNetgwCreateWithDefaults() *NetworkingProjectNetgwCreate {
	this := NetworkingProjectNetgwCreate{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NetworkingProjectNetgwCreate) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkingProjectNetgwCreate) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *NetworkingProjectNetgwCreate) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *NetworkingProjectNetgwCreate) SetName(v string) {
	o.Name = &v
}

// GetPublic returns the Public field value if set, zero value otherwise.
func (o *NetworkingProjectNetgwCreate) GetPublic() NetgwPublic {
	if o == nil || o.Public == nil {
		var ret NetgwPublic
		return ret
	}
	return *o.Public
}

// GetPublicOk returns a tuple with the Public field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkingProjectNetgwCreate) GetPublicOk() (*NetgwPublic, bool) {
	if o == nil || o.Public == nil {
		return nil, false
	}
	return o.Public, true
}

// HasPublic returns a boolean if a field has been set.
func (o *NetworkingProjectNetgwCreate) HasPublic() bool {
	if o != nil && o.Public != nil {
		return true
	}

	return false
}

// SetPublic gets a reference to the given NetgwPublic and assigns it to the Public field.
func (o *NetworkingProjectNetgwCreate) SetPublic(v NetgwPublic) {
	o.Public = &v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *NetworkingProjectNetgwCreate) GetTag() []Tag {
	if o == nil || o.Tag == nil {
		var ret []Tag
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkingProjectNetgwCreate) GetTagOk() (*[]Tag, bool) {
	if o == nil || o.Tag == nil {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *NetworkingProjectNetgwCreate) HasTag() bool {
	if o != nil && o.Tag != nil {
		return true
	}

	return false
}

// SetTag gets a reference to the given []Tag and assigns it to the Tag field.
func (o *NetworkingProjectNetgwCreate) SetTag(v []Tag) {
	o.Tag = &v
}

func (o NetworkingProjectNetgwCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Public != nil {
		toSerialize["public"] = o.Public
	}
	if o.Tag != nil {
		toSerialize["tag"] = o.Tag
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkingProjectNetgwCreate struct {
	value *NetworkingProjectNetgwCreate
	isSet bool
}

func (v NullableNetworkingProjectNetgwCreate) Get() *NetworkingProjectNetgwCreate {
	return v.value
}

func (v *NullableNetworkingProjectNetgwCreate) Set(val *NetworkingProjectNetgwCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkingProjectNetgwCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkingProjectNetgwCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkingProjectNetgwCreate(val *NetworkingProjectNetgwCreate) *NullableNetworkingProjectNetgwCreate {
	return &NullableNetworkingProjectNetgwCreate{value: val, isSet: true}
}

func (v NullableNetworkingProjectNetgwCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkingProjectNetgwCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


