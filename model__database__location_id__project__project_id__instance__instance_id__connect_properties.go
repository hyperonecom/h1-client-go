/*
HyperOne

HyperOne API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties struct for DatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties
type DatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties struct {
	Host *string `json:"host,omitempty"`
	Username *string `json:"username,omitempty"`
	Example *string `json:"example,omitempty"`
	Uri *string `json:"uri,omitempty"`
}

// NewDatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties instantiates a new DatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties() *DatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties {
	this := DatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties{}
	return &this
}

// NewDatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectPropertiesWithDefaults instantiates a new DatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectPropertiesWithDefaults() *DatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties {
	this := DatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties{}
	return &this
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *DatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties) GetHost() string {
	if o == nil || o.Host == nil {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties) GetHostOk() (*string, bool) {
	if o == nil || o.Host == nil {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *DatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties) HasHost() bool {
	if o != nil && o.Host != nil {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *DatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties) SetHost(v string) {
	o.Host = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *DatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *DatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *DatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties) SetUsername(v string) {
	o.Username = &v
}

// GetExample returns the Example field value if set, zero value otherwise.
func (o *DatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties) GetExample() string {
	if o == nil || o.Example == nil {
		var ret string
		return ret
	}
	return *o.Example
}

// GetExampleOk returns a tuple with the Example field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties) GetExampleOk() (*string, bool) {
	if o == nil || o.Example == nil {
		return nil, false
	}
	return o.Example, true
}

// HasExample returns a boolean if a field has been set.
func (o *DatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties) HasExample() bool {
	if o != nil && o.Example != nil {
		return true
	}

	return false
}

// SetExample gets a reference to the given string and assigns it to the Example field.
func (o *DatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties) SetExample(v string) {
	o.Example = &v
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *DatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties) GetUri() string {
	if o == nil || o.Uri == nil {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties) GetUriOk() (*string, bool) {
	if o == nil || o.Uri == nil {
		return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *DatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties) HasUri() bool {
	if o != nil && o.Uri != nil {
		return true
	}

	return false
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *DatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties) SetUri(v string) {
	o.Uri = &v
}

func (o DatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Host != nil {
		toSerialize["host"] = o.Host
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	if o.Example != nil {
		toSerialize["example"] = o.Example
	}
	if o.Uri != nil {
		toSerialize["uri"] = o.Uri
	}
	return json.Marshal(toSerialize)
}

type NullableDatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties struct {
	value *DatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties
	isSet bool
}

func (v NullableDatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties) Get() *DatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties {
	return v.value
}

func (v *NullableDatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties) Set(val *DatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableDatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableDatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties(val *DatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties) *NullableDatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties {
	return &NullableDatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties{value: val, isSet: true}
}

func (v NullableDatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDatabaseLocationIdProjectProjectIdInstanceInstanceIdConnectProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


