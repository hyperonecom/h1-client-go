openapi: 3.0.3
info:
  description: HyperOne API
  title: HyperOne
  version: 0.1.0
servers:
- description: HyperOne API
  url: https://api.hyperone.com/v2
security:
- BearerAuth: []
tags:
- name: iam_user
  x-kind: iam/user
  x-location: false
  x-parent: false
- name: iam_project
  x-kind: iam/project
  x-location: false
  x-parent: false
- name: support_project_ticket
  x-kind: support/ticket
  x-location: false
  x-parent:
  - project
- name: iam_organisation
  x-kind: iam/organisation
  x-location: false
  x-parent: false
- description: Available as part of the Early Adopters program.
  name: provider_project_agent
  x-kind: provider/agent
  x-location: true
  x-parent:
  - project
- description: Available as part of the Early Adopters program.
  name: database_project_instance
  x-kind: database/instance
  x-location: true
  x-parent:
  - project
- description: Available as part of the Early Adopters program.
  name: insight_project_journal
  x-kind: insight/journal
  x-location: true
  x-parent:
  - project
- description: Available as part of the Early Adopters program.
  name: container_project_registry
  x-kind: container/registry
  x-location: true
  x-parent:
  - project
- description: Available as part of the Early Adopters program.
  name: website_project_instance
  x-kind: website/instance
  x-location: true
  x-parent:
  - project
- name: dns_project_zone
  x-kind: dns/zone
  x-location: true
  x-parent:
  - project
- name: storage_project_disk
  x-kind: storage/disk
  x-location: true
  x-parent:
  - project
- name: networking_project_firewall
  x-kind: networking/firewall
  x-location: true
  x-parent:
  - project
- name: storage_project_image
  x-kind: storage/image
  x-location: true
  x-parent:
  - project
- name: networking_project_ip
  x-kind: networking/ip
  x-location: true
  x-parent:
  - project
- name: storage_project_iso
  x-kind: storage/iso
  x-location: true
  x-parent:
  - project
- name: networking_project_netadp
  x-kind: networking/netadp
  x-location: true
  x-parent:
  - project
- name: networking_project_netgw
  x-kind: networking/netgw
  x-location: true
  x-parent:
  - project
- name: networking_project_network
  x-kind: networking/network
  x-location: true
  x-parent:
  - project
- name: iam_project_policy
  x-kind: iam/policy
  x-location: false
  x-parent:
  - project
  - organisation
- name: iam_organisation_policy
  x-kind: iam/policy
  x-location: false
  x-parent:
  - project
  - organisation
- name: compute_project_replica
  x-kind: compute/replica
  x-location: true
  x-parent:
  - project
- name: iam_project_role
  x-kind: iam/role
  x-location: false
  x-parent:
  - project
  - organisation
- name: iam_organisation_role
  x-kind: iam/role
  x-location: false
  x-parent:
  - project
  - organisation
- name: iam_project_sa
  x-kind: iam/sa
  x-location: false
  x-parent:
  - project
- name: storage_project_vault
  x-kind: storage/vault
  x-location: true
  x-parent:
  - project
- name: compute_project_vm
  x-kind: compute/vm
  x-location: true
  x-parent:
  - project
- name: billing_project_reservation
  x-kind: billing/reservation
  x-location: false
  x-parent:
  - project
- name: vmhost_project_instance
  x-kind: vmhost/instance
  x-location: true
  x-parent:
  - project
- name: billing_project_service
  x-kind: billing/service
  x-location: false
  x-parent:
  - project
paths:
  /iam/user/{userId}:
    get:
      description: Returns a single user
      operationId: iam_user_get
      parameters:
      - description: User Id
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/user
      tags:
      - iam_user
      x-permissions:
      - iam/user/get
    patch:
      description: Returns modified user
      operationId: iam_user_update
      parameters:
      - description: User Id
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam_user_update'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update iam/user
      tags:
      - iam_user
  /iam/user/{userId}/credential/authtoken:
    get:
      description: List iam/user.credential
      operationId: iam_user_credential_authtoken_list
      parameters:
      - description: User Id
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/authToken'
                title: AuthToken collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/user.credential
      tags:
      - iam_user
      x-permissions:
      - iam/user.credential/list
  /iam/user/{userId}/credential/authtoken/{authtokenId}:
    delete:
      description: Delete iam/user.credential
      operationId: iam_user_credential_authtoken_delete
      parameters:
      - description: User Id
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: authtokenId
        explode: false
        in: path
        name: authtokenId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete iam/user.credential
      tags:
      - iam_user
      x-permissions:
      - iam/user.credential/delete
    get:
      description: Get iam/user.credential
      operationId: iam_user_credential_authtoken_get
      parameters:
      - description: User Id
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: authtokenId
        explode: false
        in: path
        name: authtokenId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authToken'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/user.credential
      tags:
      - iam_user
      x-permissions:
      - iam/user.credential/get
  /iam/user/{userId}/credential:
    get:
      description: List iam/user.credential
      operationId: iam_user_credential_list
      parameters:
      - description: User Id
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/user.credential'
                title: User.credential collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/user.credential
      tags:
      - iam_user
      x-permissions:
      - iam/user.credential/list
    post:
      description: Create iam/user.credential
      operationId: iam_user_credential_create
      parameters:
      - description: User Id
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user.credential'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user.credential'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create iam/user.credential
      tags:
      - iam_user
      x-permissions:
      - iam/user.credential/create
  /iam/user/{userId}/credential/{credentialId}:
    delete:
      description: Delete iam/user.credential
      operationId: iam_user_credential_delete
      parameters:
      - description: User Id
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: credentialId
        explode: false
        in: path
        name: credentialId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete iam/user.credential
      tags:
      - iam_user
      x-permissions:
      - iam/user.credential/delete
    get:
      description: Get iam/user.credential
      operationId: iam_user_credential_get
      parameters:
      - description: User Id
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: credentialId
        explode: false
        in: path
        name: credentialId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user.credential'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/user.credential
      tags:
      - iam_user
      x-permissions:
      - iam/user.credential/get
    patch:
      description: Update iam/user.credential
      operationId: iam_user_credential_patch
      parameters:
      - description: User Id
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: credentialId
        explode: false
        in: path
        name: credentialId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam_user_credential_patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user.credential'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update iam/user.credential
      tags:
      - iam_user
  /iam/user/{userId}/service:
    get:
      description: List iam/user.service
      operationId: iam_user_service_list
      parameters:
      - description: User Id
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/resourceService'
                title: ResourceService collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/user.service
      tags:
      - iam_user
      x-permissions:
      - iam/user.service/list
  /iam/user/{userId}/service/{serviceId}:
    get:
      description: Get iam/user.service
      operationId: iam_user_service_get
      parameters:
      - description: User Id
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceService'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/user.service
      tags:
      - iam_user
      x-permissions:
      - iam/user.service/get
  /iam/project:
    get:
      description: List project
      operationId: iam_project_list
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          type: number
        style: form
      - description: Filter by active
        explode: true
        in: query
        name: active
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Filter by organisation
        explode: true
        in: query
        name: organisation
        required: false
        schema:
          format: uri
          type: string
          x-resource:
            kind: iam/organisation
          x-permissions: []
        style: form
      - description: return a lightweight version of the resource
        explode: true
        in: query
        name: $lean
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Filter by tag.value
        explode: true
        in: query
        name: tag.value
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.key
        explode: true
        in: query
        name: tag.key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/project'
                title: Project collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/project
      tags:
      - iam_project
      x-permissions: []
    post:
      description: Create project
      operationId: iam_project_create
      parameters:
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam_project_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create iam/project
      tags:
      - iam_project
      x-permissions: []
  /iam/project/{projectId}:
    delete:
      description: Delete project
      operationId: iam_project_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete iam/project
      tags:
      - iam_project
      x-permissions:
      - iam/project/delete
      x-state:
      - Active
    get:
      description: Returns a single project
      operationId: iam_project_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/project
      tags:
      - iam_project
      x-permissions:
      - iam/project/get
    patch:
      description: Returns modified project
      operationId: iam_project_update
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam_project_update'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update iam/project
      tags:
      - iam_project
  /iam/project/{projectId}/billing:
    get:
      description: List iam/project.billing
      operationId: iam_project_billing_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: start
        explode: true
        in: query
        name: start
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: end
        explode: true
        in: query
        name: end
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: resource.type
        explode: true
        in: query
        name: resource.type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/billing'
                title: Billing collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/project.billing
      tags:
      - iam_project
      x-permissions:
      - iam/project.billing/list
      x-audience: developer
  /iam/project/{projectId}/payment:
    get:
      description: List iam/project.payment
      operationId: iam_project_payment_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/payment'
                title: Payment collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/project.payment
      tags:
      - iam_project
      x-permissions:
      - iam/project.payment/list
  /iam/project/{projectId}/invoice:
    get:
      description: List iam/project.invoice
      operationId: iam_project_invoice_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/invoice'
                title: Invoice collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/project.invoice
      tags:
      - iam_project
      x-permissions:
      - iam/project.invoice/list
  /iam/project/{projectId}/proforma:
    get:
      description: List iam/project.proforma
      operationId: iam_project_proforma_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/proforma'
                title: Proforma collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/project.proforma
      tags:
      - iam_project
      x-permissions:
      - iam/project.proforma/list
  /iam/project/{projectId}/threshold:
    get:
      description: List iam/project.threshold
      operationId: iam_project_threshold_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/project.threshold'
                title: Project.threshold collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/project.threshold
      tags:
      - iam_project
      x-permissions:
      - iam/project.threshold/list
    post:
      description: Create iam/project.threshold
      operationId: iam_project_threshold_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam_project_threshold_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project.threshold'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create iam/project.threshold
      tags:
      - iam_project
      x-permissions:
      - iam/project.threshold/create
  /iam/project/{projectId}/threshold/{thresholdId}:
    delete:
      description: Delete iam/project.threshold
      operationId: iam_project_threshold_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: thresholdId
        explode: false
        in: path
        name: thresholdId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete iam/project.threshold
      tags:
      - iam_project
      x-permissions:
      - iam/project.threshold/delete
    get:
      description: Get iam/project.threshold
      operationId: iam_project_threshold_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: thresholdId
        explode: false
        in: path
        name: thresholdId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project.threshold'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/project.threshold
      tags:
      - iam_project
      x-permissions:
      - iam/project.threshold/get
  /iam/project/{projectId}/credentialStore:
    get:
      description: List iam/project.credentialStore
      operationId: iam_project_credentialStore_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/project.credential'
                title: Project.credential collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/project.credentialStore
      tags:
      - iam_project
      x-permissions:
      - iam/project.credentialStore/list
    post:
      description: Create iam/project.credentialStore
      operationId: iam_project_credentialStore_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/project.credential'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project.credential'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create iam/project.credentialStore
      tags:
      - iam_project
      x-permissions:
      - iam/project.credentialStore/create
  /iam/project/{projectId}/credentialStore/{credentialStoreId}:
    delete:
      description: Delete iam/project.credentialStore
      operationId: iam_project_credentialStore_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: credentialStoreId
        explode: false
        in: path
        name: credentialStoreId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete iam/project.credentialStore
      tags:
      - iam_project
      x-permissions:
      - iam/project.credentialStore/delete
    get:
      description: Get iam/project.credentialStore
      operationId: iam_project_credentialStore_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: credentialStoreId
        explode: false
        in: path
        name: credentialStoreId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project.credential'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/project.credentialStore
      tags:
      - iam_project
      x-permissions:
      - iam/project.credentialStore/get
    patch:
      description: Update iam/project.credentialStore
      operationId: iam_project_credentialStore_patch
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: credentialStoreId
        explode: false
        in: path
        name: credentialStoreId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam_project_credentialStore_patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project.credential'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update iam/project.credentialStore
      tags:
      - iam_project
  /iam/project/{projectId}/quota:
    get:
      description: List iam/project.quota
      operationId: iam_project_quota_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/quota'
                title: Quota collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/project.quota
      tags:
      - iam_project
      x-permissions:
      - iam/project.quota/list
  /iam/project/{projectId}/quota/{quotaId}:
    get:
      description: Get iam/project.quota
      operationId: iam_project_quota_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: quotaId
        explode: false
        in: path
        name: quotaId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quota'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/project.quota
      tags:
      - iam_project
      x-permissions:
      - iam/project.quota/get
  /iam/project/{projectId}/quota/{quotaId}/limit:
    patch:
      description: Update iam/project.limit
      operationId: iam_project_quota_limit_patch
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: quotaId
        explode: false
        in: path
        name: quotaId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam_project_quota_limit_patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quotaLimit'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update iam/project.limit
      tags:
      - iam_project
  /iam/project/{projectId}/invitation:
    get:
      description: List iam/project.invitation
      operationId: iam_project_invitation_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: resource
        explode: true
        in: query
        name: resource
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/invitation'
                title: Invitation collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/project.invitation
      tags:
      - iam_project
      x-permissions:
      - iam/project.invitation/list
  /iam/project/{projectId}/invitation/{invitationId}:
    delete:
      description: Delete iam/project.invitation
      operationId: iam_project_invitation_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: invitationId
        explode: false
        in: path
        name: invitationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete iam/project.invitation
      tags:
      - iam_project
      x-permissions:
      - iam/project.invitation/delete
    get:
      description: Get iam/project.invitation
      operationId: iam_project_invitation_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: invitationId
        explode: false
        in: path
        name: invitationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invitation'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/project.invitation
      tags:
      - iam_project
      x-permissions:
      - iam/project.invitation/get
  /iam/project/{projectId}/invitation/{invitationId}/actions/accept:
    post:
      description: action accept
      operationId: iam_project_invitation_accept
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: invitationId
        explode: false
        in: path
        name: invitationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam_project_invitation_accept'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invitation'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Accept iam/project.invitation
      tags:
      - iam_project
      x-permissions: []
      x-audience: developer
  /iam/project/{projectId}/ownership:
    get:
      description: List iam/project.ownership
      operationId: iam_project_ownership_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ownership'
                title: Ownership collection
                type: array
          description: successful operation
          links:
            invitation:
              operationId: iam_project_invitation_list
              parameters:
                resource: $path
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/project.ownership
      tags:
      - iam_project
      x-permissions:
      - iam/project.ownership/list
    post:
      description: Create iam/project.ownership
      operationId: iam_project_ownership_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam_project_ownership_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create iam/project.ownership
      tags:
      - iam_project
      x-permissions:
      - iam/project.ownership/create
  /iam/project/{projectId}/ownership/{ownershipId}:
    delete:
      description: Delete iam/project.ownership
      operationId: iam_project_ownership_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: ownershipId
        explode: false
        in: path
        name: ownershipId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete iam/project.ownership
      tags:
      - iam_project
      x-permissions:
      - iam/project.ownership/delete
    get:
      description: Get iam/project.ownership
      operationId: iam_project_ownership_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: ownershipId
        explode: false
        in: path
        name: ownershipId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ownership'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/project.ownership
      tags:
      - iam_project
      x-permissions:
      - iam/project.ownership/get
  /iam/project/{projectId}/service:
    get:
      description: List iam/project.service
      operationId: iam_project_service_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/resourceService'
                title: ResourceService collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/project.service
      tags:
      - iam_project
      x-permissions:
      - iam/project.service/list
  /iam/project/{projectId}/service/{serviceId}:
    get:
      description: Get iam/project.service
      operationId: iam_project_service_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceService'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/project.service
      tags:
      - iam_project
      x-permissions:
      - iam/project.service/get
  /iam/project/{projectId}/tag:
    get:
      description: List iam/project.tag
      operationId: iam_project_tag_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/project.tag
      tags:
      - iam_project
      x-permissions:
      - iam/project.tag/list
    post:
      description: Create iam/project.tag
      operationId: iam_project_tag_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create iam/project.tag
      tags:
      - iam_project
      x-permissions:
      - iam/project.tag/create
    put:
      description: Replace iam/project.tag
      operationId: iam_project_tag_put
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag_array'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Replace iam/project.tag
      tags:
      - iam_project
      x-permissions:
      - iam/project.tag/create
      - iam/project.tag/delete
  /iam/project/{projectId}/tag/{tagId}:
    delete:
      description: Delete iam/project.tag
      operationId: iam_project_tag_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete iam/project.tag
      tags:
      - iam_project
      x-permissions:
      - iam/project.tag/delete
    get:
      description: Get iam/project.tag
      operationId: iam_project_tag_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/project.tag
      tags:
      - iam_project
      x-permissions:
      - iam/project.tag/get
  /iam/project/{projectId}/event:
    get:
      description: List iam/project.event
      operationId: iam_project_event_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: number
        style: form
      - description: $skip
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                title: Event collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/project.event
      tags:
      - iam_project
      x-permissions:
      - iam/project.event/list
  /iam/project/{projectId}/event/{eventId}:
    get:
      description: Get iam/project.event
      operationId: iam_project_event_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: eventId
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/project.event
      tags:
      - iam_project
      x-permissions:
      - iam/project.event/get
  /support/project/{projectId}/ticket:
    get:
      description: List ticket
      operationId: support_project_ticket_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Filter by state
        explode: true
        in: query
        name: state
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ticket'
                title: Ticket collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List support/ticket
      tags:
      - support_project_ticket
      x-permissions:
      - support/ticket/list
    post:
      description: Create ticket
      operationId: support_project_ticket_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/support_project_ticket_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ticket'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ticket'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create support/ticket
      tags:
      - support_project_ticket
      x-permissions:
      - support/ticket/create
  /support/project/{projectId}/ticket/{ticketId}:
    get:
      description: Returns a single ticket
      operationId: support_project_ticket_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Ticket Id
        explode: false
        in: path
        name: ticketId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ticket'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get support/ticket
      tags:
      - support_project_ticket
      x-permissions:
      - support/ticket/get
  /support/project/{projectId}/ticket/{ticketId}/actions/close:
    post:
      description: action close
      operationId: support_project_ticket_close
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Ticket Id
        explode: false
        in: path
        name: ticketId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ticket'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ticket'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Close support/ticket
      tags:
      - support_project_ticket
      x-permissions:
      - support/ticket/close
      x-state:
      - open
  /support/project/{projectId}/ticket/{ticketId}/message:
    get:
      description: List support/ticket.message
      operationId: support_project_ticket_message_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Ticket Id
        explode: false
        in: path
        name: ticketId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/support.message'
                title: Support.message collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List support/ticket.message
      tags:
      - support_project_ticket
      x-permissions:
      - support/ticket.message/list
    post:
      description: Create support/ticket.message
      operationId: support_project_ticket_message_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Ticket Id
        explode: false
        in: path
        name: ticketId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/support.message'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/support.message'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create support/ticket.message
      tags:
      - support_project_ticket
      x-permissions:
      - support/ticket.message/create
  /support/project/{projectId}/ticket/{ticketId}/message/{messageId}:
    get:
      description: Get support/ticket.message
      operationId: support_project_ticket_message_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Ticket Id
        explode: false
        in: path
        name: ticketId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: messageId
        explode: false
        in: path
        name: messageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/support.message'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get support/ticket.message
      tags:
      - support_project_ticket
      x-permissions:
      - support/ticket.message/get
  /iam/organisation:
    get:
      description: List organisation
      operationId: iam_organisation_list
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by billing.company
        explode: true
        in: query
        name: billing.company
        required: false
        schema:
          type: string
        style: form
      - description: Filter by $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          type: number
        style: form
      - description: Filter by active
        explode: true
        in: query
        name: active
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/organisation'
                title: Organisation collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/organisation
      tags:
      - iam_organisation
      x-permissions: []
    post:
      description: Create organisation
      operationId: iam_organisation_create
      parameters:
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam_organisation_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organisation'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organisation'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create iam/organisation
      tags:
      - iam_organisation
      x-permissions: []
  /iam/organisation/{organisationId}:
    delete:
      description: Delete organisation
      operationId: iam_organisation_delete
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete iam/organisation
      tags:
      - iam_organisation
      x-permissions:
      - iam/organisation/delete
      x-state:
      - Active
    get:
      description: Returns a single organisation
      operationId: iam_organisation_get
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organisation'
          description: successful operation
          links:
            project:
              operationId: iam_project_list
              parameters:
                organisation: $request.path.organisationId
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/organisation
      tags:
      - iam_organisation
      x-permissions:
      - iam/organisation/get
    patch:
      description: Returns modified organisation
      operationId: iam_organisation_update
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam_organisation_update'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organisation'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update iam/organisation
      tags:
      - iam_organisation
  /iam/organisation/{organisationId}/actions/transfer_accept:
    post:
      description: action transfer_accept
      operationId: iam_organisation_transfer_accept
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam_organisation_transfer_accept'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organisation'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organisation'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Transfer accept iam/organisation
      tags:
      - iam_organisation
      x-permissions:
      - iam/organisation.transfer/accept
      x-state:
      - Active
  /iam/organisation/{organisationId}/billing:
    get:
      description: List iam/organisation.billing
      operationId: iam_organisation_billing_list
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: start
        explode: true
        in: query
        name: start
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: end
        explode: true
        in: query
        name: end
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: resource.type
        explode: true
        in: query
        name: resource.type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/billing'
                title: Billing collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/organisation.billing
      tags:
      - iam_organisation
      x-permissions:
      - iam/organisation.billing/list
      x-audience: developer
  /iam/organisation/{organisationId}/payment:
    get:
      description: List iam/organisation.payment
      operationId: iam_organisation_payment_list
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/payment'
                title: Payment collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/organisation.payment
      tags:
      - iam_organisation
      x-permissions:
      - iam/organisation.payment/list
  /iam/organisation/{organisationId}/payment/{paymentId}:
    get:
      description: Get iam/organisation.payment
      operationId: iam_organisation_payment_get
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: paymentId
        explode: false
        in: path
        name: paymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payment'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/organisation.payment
      tags:
      - iam_organisation
      x-permissions:
      - iam/organisation.payment/get
  /iam/organisation/{organisationId}/payment/{paymentId}/actions/allocate:
    post:
      description: action allocate
      operationId: iam_organisation_payment_allocate
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: paymentId
        explode: false
        in: path
        name: paymentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam_organisation_payment_allocate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payment'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Allocate iam/organisation.payment
      tags:
      - iam_organisation
      x-permissions:
      - iam/organisation.payment/allocate
      x-state:
      - Unallocated
  /iam/organisation/{organisationId}/invoice:
    get:
      description: List iam/organisation.invoice
      operationId: iam_organisation_invoice_list
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/invoice'
                title: Invoice collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/organisation.invoice
      tags:
      - iam_organisation
      x-permissions:
      - iam/organisation.invoice/list
  /iam/organisation/{organisationId}/invoice/{invoiceId}:
    get:
      description: Get iam/organisation.invoice
      operationId: iam_organisation_invoice_get
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: invoiceId
        explode: false
        in: path
        name: invoiceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/proforma'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/organisation.invoice
      tags:
      - iam_organisation
      x-permissions:
      - iam/organisation.invoice/get
  /iam/organisation/{organisationId}/invoice/{invoiceId}/actions/download:
    post:
      description: action download
      operationId: iam_organisation_invoice_download
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: invoiceId
        explode: false
        in: path
        name: invoiceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/pdf:
              schema:
                format: binary
                type: string
          description: PDF file
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Download iam/organisation.invoice
      tags:
      - iam_organisation
      x-permissions:
      - iam/organisation.invoice/download
  /iam/organisation/{organisationId}/proforma:
    get:
      description: List iam/organisation.proforma
      operationId: iam_organisation_proforma_list
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/proforma'
                title: Proforma collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/organisation.proforma
      tags:
      - iam_organisation
      x-permissions:
      - iam/organisation.proforma/list
    post:
      description: Create iam/organisation.proforma
      operationId: iam_organisation_proforma_create
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam_organisation_proforma_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/proforma'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create iam/organisation.proforma
      tags:
      - iam_organisation
      x-permissions:
      - iam/organisation.proforma/create
  /iam/organisation/{organisationId}/proforma/{proformaId}:
    get:
      description: Get iam/organisation.proforma
      operationId: iam_organisation_proforma_get
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: proformaId
        explode: false
        in: path
        name: proformaId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/proforma'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/organisation.proforma
      tags:
      - iam_organisation
      x-permissions:
      - iam/organisation.proforma/get
  /iam/organisation/{organisationId}/proforma/{proformaId}/actions/download:
    post:
      description: action download
      operationId: iam_organisation_proforma_download
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: proformaId
        explode: false
        in: path
        name: proformaId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/pdf:
              schema:
                format: binary
                type: string
          description: PDF file
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Download iam/organisation.proforma
      tags:
      - iam_organisation
      x-permissions:
      - iam/organisation.proforma/download
  /iam/organisation/{organisationId}/invitation:
    get:
      description: List iam/organisation.invitation
      operationId: iam_organisation_invitation_list
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: resource
        explode: true
        in: query
        name: resource
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/invitation'
                title: Invitation collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/organisation.invitation
      tags:
      - iam_organisation
      x-permissions:
      - iam/organisation.invitation/list
  /iam/organisation/{organisationId}/invitation/{invitationId}:
    delete:
      description: Delete iam/organisation.invitation
      operationId: iam_organisation_invitation_delete
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: invitationId
        explode: false
        in: path
        name: invitationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete iam/organisation.invitation
      tags:
      - iam_organisation
      x-permissions:
      - iam/organisation.invitation/delete
    get:
      description: Get iam/organisation.invitation
      operationId: iam_organisation_invitation_get
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: invitationId
        explode: false
        in: path
        name: invitationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invitation'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/organisation.invitation
      tags:
      - iam_organisation
      x-permissions:
      - iam/organisation.invitation/get
  /iam/organisation/{organisationId}/invitation/{invitationId}/actions/accept:
    post:
      description: action accept
      operationId: iam_organisation_invitation_accept
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: invitationId
        explode: false
        in: path
        name: invitationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam_organisation_invitation_accept'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invitation'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Accept iam/organisation.invitation
      tags:
      - iam_organisation
      x-permissions: []
      x-audience: developer
  /iam/organisation/{organisationId}/ownership:
    get:
      description: List iam/organisation.ownership
      operationId: iam_organisation_ownership_list
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ownership'
                title: Ownership collection
                type: array
          description: successful operation
          links:
            invitation:
              operationId: iam_organisation_invitation_list
              parameters:
                resource: $path
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/organisation.ownership
      tags:
      - iam_organisation
      x-permissions:
      - iam/organisation.ownership/list
    post:
      description: Create iam/organisation.ownership
      operationId: iam_organisation_ownership_create
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam_organisation_ownership_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organisation'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organisation'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create iam/organisation.ownership
      tags:
      - iam_organisation
      x-permissions:
      - iam/organisation.ownership/create
  /iam/organisation/{organisationId}/ownership/{ownershipId}:
    delete:
      description: Delete iam/organisation.ownership
      operationId: iam_organisation_ownership_delete
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: ownershipId
        explode: false
        in: path
        name: ownershipId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete iam/organisation.ownership
      tags:
      - iam_organisation
      x-permissions:
      - iam/organisation.ownership/delete
    get:
      description: Get iam/organisation.ownership
      operationId: iam_organisation_ownership_get
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: ownershipId
        explode: false
        in: path
        name: ownershipId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ownership'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/organisation.ownership
      tags:
      - iam_organisation
      x-permissions:
      - iam/organisation.ownership/get
  /iam/organisation/{organisationId}/event:
    get:
      description: List iam/organisation.event
      operationId: iam_organisation_event_list
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: number
        style: form
      - description: $skip
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                title: Event collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/organisation.event
      tags:
      - iam_organisation
      x-permissions:
      - iam/organisation.event/list
  /iam/organisation/{organisationId}/event/{eventId}:
    get:
      description: Get iam/organisation.event
      operationId: iam_organisation_event_get
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: eventId
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/organisation.event
      tags:
      - iam_organisation
      x-permissions:
      - iam/organisation.event/get
  /provider/{locationId}/project/{projectId}/agent:
    get:
      description: List agent
      operationId: provider_project_agent_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.value
        explode: true
        in: query
        name: tag.value
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.key
        explode: true
        in: query
        name: tag.key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/agent'
                title: Agent collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List provider/agent
      tags:
      - provider_project_agent
      x-permissions:
      - provider/agent/list
      x-examples:
        $ref: ./docs/provider_project_agent_list/index.json
    post:
      description: Create agent
      operationId: provider_project_agent_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/provider_project_agent_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agent'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agent'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create provider/agent
      tags:
      - provider_project_agent
      x-permissions:
      - provider/agent/create
      x-examples:
        $ref: ./docs/provider_project_agent_create/index.json
  /provider/{locationId}/project/{projectId}/agent/{agentId}:
    delete:
      description: Delete agent
      operationId: provider_project_agent_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Agent Id
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete provider/agent
      tags:
      - provider_project_agent
      x-permissions:
      - provider/agent/delete
      x-state:
      - Unknown
      x-examples:
        $ref: ./docs/provider_project_agent_delete/index.json
    get:
      description: Returns a single agent
      operationId: provider_project_agent_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Agent Id
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agent'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get provider/agent
      tags:
      - provider_project_agent
      x-permissions:
      - provider/agent/get
      x-examples:
        $ref: ./docs/provider_project_agent_get/index.json
    patch:
      description: Returns modified agent
      operationId: provider_project_agent_update
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Agent Id
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/provider_project_agent_update'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agent'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update provider/agent
      tags:
      - provider_project_agent
      x-examples:
        $ref: ./docs/provider_project_agent_update/index.json
  /provider/{locationId}/project/{projectId}/agent/{agentId}/actions/start:
    post:
      description: action start
      operationId: provider_project_agent_start
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Agent Id
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agent'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agent'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Start provider/agent
      tags:
      - provider_project_agent
      x-permissions:
      - provider/agent/start
      x-state:
      - Suspended
  /provider/{locationId}/project/{projectId}/agent/{agentId}/actions/suspend:
    post:
      description: action suspend
      operationId: provider_project_agent_suspend
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Agent Id
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agent'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agent'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Suspend provider/agent
      tags:
      - provider_project_agent
      x-permissions:
      - provider/agent/suspend
      x-state:
      - Online
  /provider/{locationId}/project/{projectId}/agent/{agentId}/actions/inspect:
    post:
      description: action inspect
      operationId: provider_project_agent_inspect
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Agent Id
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agent'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agent'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Inspect provider/agent
      tags:
      - provider_project_agent
      x-permissions:
      - provider/agent/inspect
      x-state:
      - Online
      - Suspended
  /provider/{locationId}/project/{projectId}/agent/{agentId}/actions/transfer:
    post:
      description: action transfer
      operationId: provider_project_agent_transfer
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Agent Id
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/provider_project_agent_transfer'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agent'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agent'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Transfer provider/agent
      tags:
      - provider_project_agent
      x-permissions:
      - provider/agent/transfer
      x-state:
      - Online
      - Suspended
  /provider/{locationId}/project/{projectId}/agent/{agentId}/resource:
    get:
      description: List provider/agent.resource
      operationId: provider_project_agent_resource_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Agent Id
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/agentResource'
                title: AgentResource collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List provider/agent.resource
      tags:
      - provider_project_agent
      x-permissions:
      - provider/agent.resource/list
  /provider/{locationId}/project/{projectId}/agent/{agentId}/resource/{resourceId}/actions/recreate:
    post:
      description: action recreate
      operationId: provider_project_agent_resource_recreate
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Agent Id
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: resourceId
        explode: false
        in: path
        name: resourceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agentResource'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Recreate provider/agent.resource
      tags:
      - provider_project_agent
      x-permissions:
      - provider/agent.resource/recreate
  /provider/{locationId}/project/{projectId}/agent/{agentId}/resource/{resourceId}/actions/inspect:
    post:
      description: action inspect
      operationId: provider_project_agent_resource_inspect
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Agent Id
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: resourceId
        explode: false
        in: path
        name: resourceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Inspect provider/agent.resource
      tags:
      - provider_project_agent
      x-permissions:
      - provider/agent.resource/inspect
  /provider/{locationId}/project/{projectId}/agent/{agentId}/resource/{resourceId}/event:
    get:
      description: List provider/agent.event
      operationId: provider_project_agent_resource_event_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Agent Id
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: resourceId
        explode: false
        in: path
        name: resourceId
        required: true
        schema:
          type: string
        style: simple
      - description: $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          type: number
        style: form
      - description: $skip
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/agentResourceEvent'
                title: AgentResourceEvent collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List provider/agent.event
      tags:
      - provider_project_agent
      x-permissions:
      - provider/agent.resource.event/list
  /provider/{locationId}/project/{projectId}/agent/{agentId}/credential:
    get:
      description: List provider/agent.credential
      operationId: provider_project_agent_credential_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Agent Id
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/agent.credential'
                title: Agent.credential collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List provider/agent.credential
      tags:
      - provider_project_agent
      x-permissions:
      - provider/agent.credential/list
      x-examples:
        $ref: ./docs/provider_project_agent_credential_list/index.json
    post:
      description: Create provider/agent.credential
      operationId: provider_project_agent_credential_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Agent Id
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/agent.credential'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agent.credential'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create provider/agent.credential
      tags:
      - provider_project_agent
      x-permissions:
      - provider/agent.credential/create
      x-examples:
        $ref: ./docs/provider_project_agent_credential_create/index.json
  /provider/{locationId}/project/{projectId}/agent/{agentId}/credential/{credentialId}:
    delete:
      description: Delete provider/agent.credential
      operationId: provider_project_agent_credential_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Agent Id
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: credentialId
        explode: false
        in: path
        name: credentialId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agent'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agent'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete provider/agent.credential
      tags:
      - provider_project_agent
      x-permissions:
      - provider/agent.credential/delete
      x-examples:
        $ref: ./docs/provider_project_agent_credential_delete/index.json
    get:
      description: Get provider/agent.credential
      operationId: provider_project_agent_credential_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Agent Id
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: credentialId
        explode: false
        in: path
        name: credentialId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agent.credential'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get provider/agent.credential
      tags:
      - provider_project_agent
      x-permissions:
      - provider/agent.credential/get
      x-examples:
        $ref: ./docs/provider_project_agent_credential_get/index.json
    patch:
      description: Update provider/agent.credential
      operationId: provider_project_agent_credential_patch
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Agent Id
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: credentialId
        explode: false
        in: path
        name: credentialId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/provider_project_agent_credential_patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agent.credential'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update provider/agent.credential
      tags:
      - provider_project_agent
  /provider/{locationId}/project/{projectId}/agent/{agentId}/enabledService:
    get:
      description: List provider/agent.enabledService
      operationId: provider_project_agent_enabledService_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Agent Id
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/enabledService'
                title: EnabledService collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List provider/agent.enabledService
      tags:
      - provider_project_agent
      x-permissions:
      - provider/agent.enabledService/list
      x-examples:
        $ref: ./docs/provider_project_agent_enabledService_list/index.json
    post:
      description: Create provider/agent.enabledService
      operationId: provider_project_agent_enabledService_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Agent Id
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/enabledService'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/enabledService'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create provider/agent.enabledService
      tags:
      - provider_project_agent
      x-permissions:
      - provider/agent.enabledService/create
      x-examples:
        $ref: ./docs/provider_project_agent_enabledService_create/index.json
  /provider/{locationId}/project/{projectId}/agent/{agentId}/enabledService/{enabledServiceId}:
    delete:
      description: Delete provider/agent.enabledService
      operationId: provider_project_agent_enabledService_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Agent Id
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: enabledServiceId
        explode: false
        in: path
        name: enabledServiceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agent'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agent'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete provider/agent.enabledService
      tags:
      - provider_project_agent
      x-permissions:
      - provider/agent.enabledService/delete
      x-examples:
        $ref: ./docs/provider_project_agent_enabledService_delete/index.json
    get:
      description: Get provider/agent.enabledService
      operationId: provider_project_agent_enabledService_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Agent Id
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: enabledServiceId
        explode: false
        in: path
        name: enabledServiceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/enabledService'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get provider/agent.enabledService
      tags:
      - provider_project_agent
      x-permissions:
      - provider/agent.enabledService/get
      x-examples:
        $ref: ./docs/provider_project_agent_enabledService_get/index.json
  /provider/{locationId}/project/{projectId}/agent/{agentId}/service:
    get:
      description: List provider/agent.service
      operationId: provider_project_agent_service_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Agent Id
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/resourceService'
                title: ResourceService collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List provider/agent.service
      tags:
      - provider_project_agent
      x-permissions:
      - provider/agent.service/list
      x-examples:
        $ref: ./docs/provider_project_agent_service_list/index.json
  /provider/{locationId}/project/{projectId}/agent/{agentId}/service/{serviceId}:
    get:
      description: Get provider/agent.service
      operationId: provider_project_agent_service_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Agent Id
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceService'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get provider/agent.service
      tags:
      - provider_project_agent
      x-permissions:
      - provider/agent.service/get
      x-examples:
        $ref: ./docs/provider_project_agent_service_get/index.json
  /provider/{locationId}/project/{projectId}/agent/{agentId}/tag:
    get:
      description: List provider/agent.tag
      operationId: provider_project_agent_tag_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Agent Id
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List provider/agent.tag
      tags:
      - provider_project_agent
      x-permissions:
      - provider/agent.tag/list
      x-examples:
        $ref: ./docs/provider_project_agent_tag_list/index.json
    post:
      description: Create provider/agent.tag
      operationId: provider_project_agent_tag_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Agent Id
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create provider/agent.tag
      tags:
      - provider_project_agent
      x-permissions:
      - provider/agent.tag/create
      x-examples:
        $ref: ./docs/provider_project_agent_tag_create/index.json
    put:
      description: Replace provider/agent.tag
      operationId: provider_project_agent_tag_put
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Agent Id
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag_array'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Replace provider/agent.tag
      tags:
      - provider_project_agent
      x-permissions:
      - provider/agent.tag/create
      - provider/agent.tag/delete
  /provider/{locationId}/project/{projectId}/agent/{agentId}/tag/{tagId}:
    delete:
      description: Delete provider/agent.tag
      operationId: provider_project_agent_tag_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Agent Id
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete provider/agent.tag
      tags:
      - provider_project_agent
      x-permissions:
      - provider/agent.tag/delete
      x-examples:
        $ref: ./docs/provider_project_agent_tag_delete/index.json
    get:
      description: Get provider/agent.tag
      operationId: provider_project_agent_tag_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Agent Id
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get provider/agent.tag
      tags:
      - provider_project_agent
      x-permissions:
      - provider/agent.tag/get
      x-examples:
        $ref: ./docs/provider_project_agent_tag_get/index.json
  /provider/{locationId}/project/{projectId}/agent/{agentId}/event:
    get:
      description: List provider/agent.event
      operationId: provider_project_agent_event_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Agent Id
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: number
        style: form
      - description: $skip
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                title: Event collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List provider/agent.event
      tags:
      - provider_project_agent
      x-permissions:
      - provider/agent.event/list
      x-examples:
        $ref: ./docs/provider_project_agent_event_list/index.json
  /provider/{locationId}/project/{projectId}/agent/{agentId}/event/{eventId}:
    get:
      description: Get provider/agent.event
      operationId: provider_project_agent_event_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Agent Id
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: eventId
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get provider/agent.event
      tags:
      - provider_project_agent
      x-permissions:
      - provider/agent.event/get
      x-examples:
        $ref: ./docs/provider_project_agent_event_get/index.json
  /database/{locationId}/project/{projectId}/instance:
    get:
      description: List instance
      operationId: database_project_instance_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.value
        explode: true
        in: query
        name: tag.value
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.key
        explode: true
        in: query
        name: tag.key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/database'
                title: Database collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List database/instance
      tags:
      - database_project_instance
      x-permissions:
      - database/instance/list
      x-examples:
        $ref: ./docs/database_project_instance_list/index.json
    post:
      description: Create instance
      operationId: database_project_instance_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/database_project_instance_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/database'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/database'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create database/instance
      tags:
      - database_project_instance
      x-permissions:
      - database/instance/create
      x-examples:
        $ref: ./docs/database_project_instance_create/index.json
  /database/{locationId}/project/{projectId}/instance/{instanceId}:
    delete:
      description: Delete instance
      operationId: database_project_instance_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete database/instance
      tags:
      - database_project_instance
      x-permissions:
      - database/instance/delete
      x-state:
      - Running
      - "Off"
      x-examples:
        $ref: ./docs/database_project_instance_delete/index.json
    get:
      description: Returns a single instance
      operationId: database_project_instance_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/database'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get database/instance
      tags:
      - database_project_instance
      x-permissions:
      - database/instance/get
      x-examples:
        $ref: ./docs/database_project_instance_get/index.json
    patch:
      description: Returns modified instance
      operationId: database_project_instance_update
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/database_project_instance_update'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/database'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update database/instance
      tags:
      - database_project_instance
      x-examples:
        $ref: ./docs/database_project_instance_update/index.json
  /database/{locationId}/project/{projectId}/instance/{instanceId}/actions/start:
    post:
      description: action start
      operationId: database_project_instance_start
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/database'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/database'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Start database/instance
      tags:
      - database_project_instance
      x-permissions:
      - database/instance/start
      x-state:
      - "Off"
      x-examples:
        $ref: ./docs/database_project_instance_start/index.json
  /database/{locationId}/project/{projectId}/instance/{instanceId}/actions/stop:
    post:
      description: action stop
      operationId: database_project_instance_stop
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/database'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/database'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Stop database/instance
      tags:
      - database_project_instance
      x-permissions:
      - database/instance/stop
      x-state:
      - Running
      x-examples:
        $ref: ./docs/database_project_instance_stop/index.json
  /database/{locationId}/project/{projectId}/instance/{instanceId}/actions/transfer:
    post:
      description: action transfer
      operationId: database_project_instance_transfer
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/database_project_instance_transfer'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/database'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/database'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Transfer database/instance
      tags:
      - database_project_instance
      x-permissions:
      - database/instance/transfer
      x-state:
      - Running
      - "Off"
  /database/{locationId}/project/{projectId}/instance/{instanceId}/credential:
    get:
      description: List database/instance.credential
      operationId: database_project_instance_credential_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/database.credential'
                title: Database.credential collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List database/instance.credential
      tags:
      - database_project_instance
      x-permissions:
      - database/instance.credential/list
      x-examples:
        $ref: ./docs/database_project_instance_credential_list/index.json
    post:
      description: Create database/instance.credential
      operationId: database_project_instance_credential_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/database.credential'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/database.credential'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create database/instance.credential
      tags:
      - database_project_instance
      x-permissions:
      - database/instance.credential/create
      x-examples:
        $ref: ./docs/database_project_instance_credential_create/index.json
  /database/{locationId}/project/{projectId}/instance/{instanceId}/credential/{credentialId}:
    delete:
      description: Delete database/instance.credential
      operationId: database_project_instance_credential_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: credentialId
        explode: false
        in: path
        name: credentialId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/database'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/database'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete database/instance.credential
      tags:
      - database_project_instance
      x-permissions:
      - database/instance.credential/delete
      x-examples:
        $ref: ./docs/database_project_instance_credential_delete/index.json
    get:
      description: Get database/instance.credential
      operationId: database_project_instance_credential_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: credentialId
        explode: false
        in: path
        name: credentialId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/database.credential'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get database/instance.credential
      tags:
      - database_project_instance
      x-permissions:
      - database/instance.credential/get
      x-examples:
        $ref: ./docs/database_project_instance_credential_get/index.json
    patch:
      description: Update database/instance.credential
      operationId: database_project_instance_credential_patch
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: credentialId
        explode: false
        in: path
        name: credentialId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/database_project_instance_credential_patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/database.credential'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update database/instance.credential
      tags:
      - database_project_instance
  /database/{locationId}/project/{projectId}/instance/{instanceId}/service:
    get:
      description: List database/instance.service
      operationId: database_project_instance_service_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/resourceService'
                title: ResourceService collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List database/instance.service
      tags:
      - database_project_instance
      x-permissions:
      - database/instance.service/list
      x-examples:
        $ref: ./docs/database_project_instance_service_list/index.json
  /database/{locationId}/project/{projectId}/instance/{instanceId}/service/{serviceId}:
    get:
      description: Get database/instance.service
      operationId: database_project_instance_service_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceService'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get database/instance.service
      tags:
      - database_project_instance
      x-permissions:
      - database/instance.service/get
      x-examples:
        $ref: ./docs/database_project_instance_service_get/index.json
  /database/{locationId}/project/{projectId}/instance/{instanceId}/tag:
    get:
      description: List database/instance.tag
      operationId: database_project_instance_tag_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List database/instance.tag
      tags:
      - database_project_instance
      x-permissions:
      - database/instance.tag/list
      x-examples:
        $ref: ./docs/database_project_instance_tag_list/index.json
    post:
      description: Create database/instance.tag
      operationId: database_project_instance_tag_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create database/instance.tag
      tags:
      - database_project_instance
      x-permissions:
      - database/instance.tag/create
      x-examples:
        $ref: ./docs/database_project_instance_tag_create/index.json
    put:
      description: Replace database/instance.tag
      operationId: database_project_instance_tag_put
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag_array'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Replace database/instance.tag
      tags:
      - database_project_instance
      x-permissions:
      - database/instance.tag/create
      - database/instance.tag/delete
  /database/{locationId}/project/{projectId}/instance/{instanceId}/tag/{tagId}:
    delete:
      description: Delete database/instance.tag
      operationId: database_project_instance_tag_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete database/instance.tag
      tags:
      - database_project_instance
      x-permissions:
      - database/instance.tag/delete
      x-examples:
        $ref: ./docs/database_project_instance_tag_delete/index.json
    get:
      description: Get database/instance.tag
      operationId: database_project_instance_tag_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get database/instance.tag
      tags:
      - database_project_instance
      x-permissions:
      - database/instance.tag/get
      x-examples:
        $ref: ./docs/database_project_instance_tag_get/index.json
  /database/{locationId}/project/{projectId}/instance/{instanceId}/event:
    get:
      description: List database/instance.event
      operationId: database_project_instance_event_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: number
        style: form
      - description: $skip
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                title: Event collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List database/instance.event
      tags:
      - database_project_instance
      x-permissions:
      - database/instance.event/list
      x-examples:
        $ref: ./docs/database_project_instance_event_list/index.json
  /database/{locationId}/project/{projectId}/instance/{instanceId}/event/{eventId}:
    get:
      description: Get database/instance.event
      operationId: database_project_instance_event_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: eventId
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get database/instance.event
      tags:
      - database_project_instance
      x-permissions:
      - database/instance.event/get
      x-examples:
        $ref: ./docs/database_project_instance_event_get/index.json
  /insight/{locationId}/project/{projectId}/journal:
    get:
      description: List journal
      operationId: insight_project_journal_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.value
        explode: true
        in: query
        name: tag.value
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.key
        explode: true
        in: query
        name: tag.key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/journal'
                title: Journal collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List insight/journal
      tags:
      - insight_project_journal
      x-permissions:
      - insight/journal/list
      x-examples:
        $ref: ./docs/insight_project_journal_list/index.json
    post:
      description: Create journal
      operationId: insight_project_journal_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/insight_project_journal_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/journal'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/journal'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create insight/journal
      tags:
      - insight_project_journal
      x-permissions:
      - insight/journal/create
      x-examples:
        $ref: ./docs/insight_project_journal_create/index.json
  /insight/{locationId}/project/{projectId}/journal/{journalId}:
    delete:
      description: Delete journal
      operationId: insight_project_journal_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Journal Id
        explode: false
        in: path
        name: journalId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete insight/journal
      tags:
      - insight_project_journal
      x-permissions:
      - insight/journal/delete
      x-state:
      - Online
      x-examples:
        $ref: ./docs/insight_project_journal_delete/index.json
    get:
      description: Returns a single journal
      operationId: insight_project_journal_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Journal Id
        explode: false
        in: path
        name: journalId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/journal'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get insight/journal
      tags:
      - insight_project_journal
      x-permissions:
      - insight/journal/get
      x-examples:
        $ref: ./docs/insight_project_journal_get/index.json
    patch:
      description: Returns modified journal
      operationId: insight_project_journal_update
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Journal Id
        explode: false
        in: path
        name: journalId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/insight_project_journal_update'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/journal'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update insight/journal
      tags:
      - insight_project_journal
      x-examples:
        $ref: ./docs/insight_project_journal_update/index.json
  /insight/{locationId}/project/{projectId}/journal/{journalId}/actions/transfer:
    post:
      description: action transfer
      operationId: insight_project_journal_transfer
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Journal Id
        explode: false
        in: path
        name: journalId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/insight_project_journal_transfer'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/journal'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/journal'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Transfer insight/journal
      tags:
      - insight_project_journal
      x-permissions:
      - insight/journal/transfer
      x-state:
      - Online
  /insight/{locationId}/project/{projectId}/journal/{journalId}/log:
    get:
      description: websocket is also supported
      operationId: insight_project_journal_log_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Journal Id
        explode: false
        in: path
        name: journalId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: since
        explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: until
        explode: true
        in: query
        name: until
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: follow
        explode: true
        in: query
        name: follow
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: tail
        explode: true
        in: query
        name: tail
        required: false
        schema:
          type: number
        style: form
      - description: tag
        explode: true
        in: query
        name: tag
        required: false
        schema:
          $ref: '#/components/schemas/tag_array'
        style: form
      responses:
        "302":
          description: Redirect to the provider with a claim
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get insight/journal.log
      tags:
      - insight_project_journal
      x-permissions:
      - insight/journal.log/get
  /insight/{locationId}/project/{projectId}/journal/{journalId}/credential:
    get:
      description: List insight/journal.credential
      operationId: insight_project_journal_credential_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Journal Id
        explode: false
        in: path
        name: journalId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/journal.credential'
                title: Journal.credential collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List insight/journal.credential
      tags:
      - insight_project_journal
      x-permissions:
      - insight/journal.credential/list
      x-examples:
        $ref: ./docs/insight_project_journal_credential_list/index.json
    post:
      description: Create insight/journal.credential
      operationId: insight_project_journal_credential_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Journal Id
        explode: false
        in: path
        name: journalId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/journal.credential'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/journal.credential'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create insight/journal.credential
      tags:
      - insight_project_journal
      x-permissions:
      - insight/journal.credential/create
      x-examples:
        $ref: ./docs/insight_project_journal_credential_create/index.json
  /insight/{locationId}/project/{projectId}/journal/{journalId}/credential/{credentialId}:
    delete:
      description: Delete insight/journal.credential
      operationId: insight_project_journal_credential_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Journal Id
        explode: false
        in: path
        name: journalId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: credentialId
        explode: false
        in: path
        name: credentialId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/journal'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/journal'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete insight/journal.credential
      tags:
      - insight_project_journal
      x-permissions:
      - insight/journal.credential/delete
      x-examples:
        $ref: ./docs/insight_project_journal_credential_delete/index.json
    get:
      description: Get insight/journal.credential
      operationId: insight_project_journal_credential_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Journal Id
        explode: false
        in: path
        name: journalId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: credentialId
        explode: false
        in: path
        name: credentialId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/journal.credential'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get insight/journal.credential
      tags:
      - insight_project_journal
      x-permissions:
      - insight/journal.credential/get
      x-examples:
        $ref: ./docs/insight_project_journal_credential_get/index.json
    patch:
      description: Update insight/journal.credential
      operationId: insight_project_journal_credential_patch
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Journal Id
        explode: false
        in: path
        name: journalId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: credentialId
        explode: false
        in: path
        name: credentialId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/insight_project_journal_credential_patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/journal.credential'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update insight/journal.credential
      tags:
      - insight_project_journal
  /insight/{locationId}/project/{projectId}/journal/{journalId}/service:
    get:
      description: List insight/journal.service
      operationId: insight_project_journal_service_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Journal Id
        explode: false
        in: path
        name: journalId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/resourceService'
                title: ResourceService collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List insight/journal.service
      tags:
      - insight_project_journal
      x-permissions:
      - insight/journal.service/list
      x-examples:
        $ref: ./docs/insight_project_journal_service_list/index.json
  /insight/{locationId}/project/{projectId}/journal/{journalId}/service/{serviceId}:
    get:
      description: Get insight/journal.service
      operationId: insight_project_journal_service_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Journal Id
        explode: false
        in: path
        name: journalId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceService'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get insight/journal.service
      tags:
      - insight_project_journal
      x-permissions:
      - insight/journal.service/get
      x-examples:
        $ref: ./docs/insight_project_journal_service_get/index.json
  /insight/{locationId}/project/{projectId}/journal/{journalId}/tag:
    get:
      description: List insight/journal.tag
      operationId: insight_project_journal_tag_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Journal Id
        explode: false
        in: path
        name: journalId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List insight/journal.tag
      tags:
      - insight_project_journal
      x-permissions:
      - insight/journal.tag/list
      x-examples:
        $ref: ./docs/insight_project_journal_tag_list/index.json
    post:
      description: Create insight/journal.tag
      operationId: insight_project_journal_tag_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Journal Id
        explode: false
        in: path
        name: journalId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create insight/journal.tag
      tags:
      - insight_project_journal
      x-permissions:
      - insight/journal.tag/create
      x-examples:
        $ref: ./docs/insight_project_journal_tag_create/index.json
    put:
      description: Replace insight/journal.tag
      operationId: insight_project_journal_tag_put
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Journal Id
        explode: false
        in: path
        name: journalId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag_array'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Replace insight/journal.tag
      tags:
      - insight_project_journal
      x-permissions:
      - insight/journal.tag/create
      - insight/journal.tag/delete
  /insight/{locationId}/project/{projectId}/journal/{journalId}/tag/{tagId}:
    delete:
      description: Delete insight/journal.tag
      operationId: insight_project_journal_tag_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Journal Id
        explode: false
        in: path
        name: journalId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete insight/journal.tag
      tags:
      - insight_project_journal
      x-permissions:
      - insight/journal.tag/delete
      x-examples:
        $ref: ./docs/insight_project_journal_tag_delete/index.json
    get:
      description: Get insight/journal.tag
      operationId: insight_project_journal_tag_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Journal Id
        explode: false
        in: path
        name: journalId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get insight/journal.tag
      tags:
      - insight_project_journal
      x-permissions:
      - insight/journal.tag/get
      x-examples:
        $ref: ./docs/insight_project_journal_tag_get/index.json
  /insight/{locationId}/project/{projectId}/journal/{journalId}/event:
    get:
      description: List insight/journal.event
      operationId: insight_project_journal_event_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Journal Id
        explode: false
        in: path
        name: journalId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: number
        style: form
      - description: $skip
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                title: Event collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List insight/journal.event
      tags:
      - insight_project_journal
      x-permissions:
      - insight/journal.event/list
      x-examples:
        $ref: ./docs/insight_project_journal_event_list/index.json
  /insight/{locationId}/project/{projectId}/journal/{journalId}/event/{eventId}:
    get:
      description: Get insight/journal.event
      operationId: insight_project_journal_event_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Journal Id
        explode: false
        in: path
        name: journalId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: eventId
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get insight/journal.event
      tags:
      - insight_project_journal
      x-permissions:
      - insight/journal.event/get
      x-examples:
        $ref: ./docs/insight_project_journal_event_get/index.json
  /container/{locationId}/project/{projectId}/registry:
    get:
      description: List registry
      operationId: container_project_registry_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.value
        explode: true
        in: query
        name: tag.value
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.key
        explode: true
        in: query
        name: tag.key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/registry'
                title: Registry collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List container/registry
      tags:
      - container_project_registry
      x-permissions:
      - container/registry/list
      x-examples:
        $ref: ./docs/container_project_registry_list/index.json
    post:
      description: Create registry
      operationId: container_project_registry_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/container_project_registry_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/registry'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/registry'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create container/registry
      tags:
      - container_project_registry
      x-permissions:
      - container/registry/create
      x-examples:
        $ref: ./docs/container_project_registry_create/index.json
  /container/{locationId}/project/{projectId}/registry/{registryId}:
    delete:
      description: Delete registry
      operationId: container_project_registry_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Registry Id
        explode: false
        in: path
        name: registryId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete container/registry
      tags:
      - container_project_registry
      x-permissions:
      - container/registry/delete
      x-state:
      - Running
      - "Off"
      x-examples:
        $ref: ./docs/container_project_registry_delete/index.json
    get:
      description: Returns a single registry
      operationId: container_project_registry_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Registry Id
        explode: false
        in: path
        name: registryId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/registry'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get container/registry
      tags:
      - container_project_registry
      x-permissions:
      - container/registry/get
      x-examples:
        $ref: ./docs/container_project_registry_get/index.json
    patch:
      description: Returns modified registry
      operationId: container_project_registry_update
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Registry Id
        explode: false
        in: path
        name: registryId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/container_project_registry_update'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/registry'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update container/registry
      tags:
      - container_project_registry
      x-examples:
        $ref: ./docs/container_project_registry_update/index.json
  /container/{locationId}/project/{projectId}/registry/{registryId}/actions/start:
    post:
      description: action start
      operationId: container_project_registry_start
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Registry Id
        explode: false
        in: path
        name: registryId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/registry'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/registry'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Start container/registry
      tags:
      - container_project_registry
      x-permissions:
      - container/registry/start
      x-state:
      - "Off"
  /container/{locationId}/project/{projectId}/registry/{registryId}/actions/stop:
    post:
      description: action stop
      operationId: container_project_registry_stop
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Registry Id
        explode: false
        in: path
        name: registryId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/registry'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/registry'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Stop container/registry
      tags:
      - container_project_registry
      x-permissions:
      - container/registry/stop
      x-state:
      - Running
      x-examples:
        $ref: ./docs/container_project_registry_stop/index.json
  /container/{locationId}/project/{projectId}/registry/{registryId}/actions/transfer:
    post:
      description: action transfer
      operationId: container_project_registry_transfer
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Registry Id
        explode: false
        in: path
        name: registryId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/container_project_registry_transfer'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/registry'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/registry'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Transfer container/registry
      tags:
      - container_project_registry
      x-permissions:
      - container/registry/transfer
      x-state:
      - Running
      - "Off"
  /container/{locationId}/project/{projectId}/registry/{registryId}/repository:
    get:
      description: List container/registry.repository
      operationId: container_project_registry_repository_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Registry Id
        explode: false
        in: path
        name: registryId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/container.repository'
                title: Container.repository collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List container/registry.repository
      tags:
      - container_project_registry
      x-permissions:
      - container/registry.repository/list
  /container/{locationId}/project/{projectId}/registry/{registryId}/repository/{repositoryId}:
    get:
      description: Get container/registry.repository
      operationId: container_project_registry_repository_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Registry Id
        explode: false
        in: path
        name: registryId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: repositoryId
        explode: false
        in: path
        name: repositoryId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container.repository'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get container/registry.repository
      tags:
      - container_project_registry
      x-permissions:
      - container/registry.repository/get
  /container/{locationId}/project/{projectId}/registry/{registryId}/repository/{repositoryId}/image:
    get:
      description: List container/registry.image
      operationId: container_project_registry_repository_image_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Registry Id
        explode: false
        in: path
        name: registryId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: repositoryId
        explode: false
        in: path
        name: repositoryId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/container.image'
                title: Container.image collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List container/registry.image
      tags:
      - container_project_registry
      x-permissions:
      - container/registry.image/list
  /container/{locationId}/project/{projectId}/registry/{registryId}/repository/{repositoryId}/image/{imageId}:
    delete:
      description: Delete container/registry.image
      operationId: container_project_registry_repository_image_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Registry Id
        explode: false
        in: path
        name: registryId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: repositoryId
        explode: false
        in: path
        name: repositoryId
        required: true
        schema:
          type: string
        style: simple
      - description: imageId
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete container/registry.image
      tags:
      - container_project_registry
      x-permissions:
      - container/registry.image/delete
    get:
      description: Get container/registry.image
      operationId: container_project_registry_repository_image_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Registry Id
        explode: false
        in: path
        name: registryId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: repositoryId
        explode: false
        in: path
        name: repositoryId
        required: true
        schema:
          type: string
        style: simple
      - description: imageId
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container.image'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get container/registry.image
      tags:
      - container_project_registry
      x-permissions:
      - container/registry.image/get
  /container/{locationId}/project/{projectId}/registry/{registryId}/credential:
    get:
      description: List container/registry.credential
      operationId: container_project_registry_credential_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Registry Id
        explode: false
        in: path
        name: registryId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/registry.credential'
                title: Registry.credential collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List container/registry.credential
      tags:
      - container_project_registry
      x-permissions:
      - container/registry.credential/list
      x-examples:
        $ref: ./docs/container_project_registry_credential_list/index.json
    post:
      description: Create container/registry.credential
      operationId: container_project_registry_credential_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Registry Id
        explode: false
        in: path
        name: registryId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registry.credential'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/registry.credential'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create container/registry.credential
      tags:
      - container_project_registry
      x-permissions:
      - container/registry.credential/create
      x-examples:
        $ref: ./docs/container_project_registry_credential_create/index.json
  /container/{locationId}/project/{projectId}/registry/{registryId}/credential/{credentialId}:
    delete:
      description: Delete container/registry.credential
      operationId: container_project_registry_credential_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Registry Id
        explode: false
        in: path
        name: registryId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: credentialId
        explode: false
        in: path
        name: credentialId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/registry'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/registry'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete container/registry.credential
      tags:
      - container_project_registry
      x-permissions:
      - container/registry.credential/delete
      x-examples:
        $ref: ./docs/container_project_registry_credential_delete/index.json
    get:
      description: Get container/registry.credential
      operationId: container_project_registry_credential_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Registry Id
        explode: false
        in: path
        name: registryId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: credentialId
        explode: false
        in: path
        name: credentialId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/registry.credential'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get container/registry.credential
      tags:
      - container_project_registry
      x-permissions:
      - container/registry.credential/get
      x-examples:
        $ref: ./docs/container_project_registry_credential_get/index.json
    patch:
      description: Update container/registry.credential
      operationId: container_project_registry_credential_patch
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Registry Id
        explode: false
        in: path
        name: registryId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: credentialId
        explode: false
        in: path
        name: credentialId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/container_project_registry_credential_patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/registry.credential'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update container/registry.credential
      tags:
      - container_project_registry
  /container/{locationId}/project/{projectId}/registry/{registryId}/domain:
    get:
      description: List container/registry.domain
      operationId: container_project_registry_domain_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Registry Id
        explode: false
        in: path
        name: registryId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/domain'
                title: Domain collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List container/registry.domain
      tags:
      - container_project_registry
      x-permissions:
      - container/registry.domain/list
    post:
      description: Create container/registry.domain
      operationId: container_project_registry_domain_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Registry Id
        explode: false
        in: path
        name: registryId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/domain'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create container/registry.domain
      tags:
      - container_project_registry
      x-permissions:
      - container/registry.domain/create
  /container/{locationId}/project/{projectId}/registry/{registryId}/domain/{domainId}:
    delete:
      description: Delete container/registry.domain
      operationId: container_project_registry_domain_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Registry Id
        explode: false
        in: path
        name: registryId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: domainId
        explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete container/registry.domain
      tags:
      - container_project_registry
      x-permissions:
      - container/registry.domain/delete
    get:
      description: Get container/registry.domain
      operationId: container_project_registry_domain_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Registry Id
        explode: false
        in: path
        name: registryId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: domainId
        explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get container/registry.domain
      tags:
      - container_project_registry
      x-permissions:
      - container/registry.domain/get
  /container/{locationId}/project/{projectId}/registry/{registryId}/service:
    get:
      description: List container/registry.service
      operationId: container_project_registry_service_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Registry Id
        explode: false
        in: path
        name: registryId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/resourceService'
                title: ResourceService collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List container/registry.service
      tags:
      - container_project_registry
      x-permissions:
      - container/registry.service/list
      x-examples:
        $ref: ./docs/container_project_registry_service_list/index.json
  /container/{locationId}/project/{projectId}/registry/{registryId}/service/{serviceId}:
    get:
      description: Get container/registry.service
      operationId: container_project_registry_service_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Registry Id
        explode: false
        in: path
        name: registryId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceService'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get container/registry.service
      tags:
      - container_project_registry
      x-permissions:
      - container/registry.service/get
      x-examples:
        $ref: ./docs/container_project_registry_service_get/index.json
  /container/{locationId}/project/{projectId}/registry/{registryId}/tag:
    get:
      description: List container/registry.tag
      operationId: container_project_registry_tag_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Registry Id
        explode: false
        in: path
        name: registryId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List container/registry.tag
      tags:
      - container_project_registry
      x-permissions:
      - container/registry.tag/list
      x-examples:
        $ref: ./docs/container_project_registry_tag_list/index.json
    post:
      description: Create container/registry.tag
      operationId: container_project_registry_tag_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Registry Id
        explode: false
        in: path
        name: registryId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create container/registry.tag
      tags:
      - container_project_registry
      x-permissions:
      - container/registry.tag/create
      x-examples:
        $ref: ./docs/container_project_registry_tag_create/index.json
    put:
      description: Replace container/registry.tag
      operationId: container_project_registry_tag_put
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Registry Id
        explode: false
        in: path
        name: registryId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag_array'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Replace container/registry.tag
      tags:
      - container_project_registry
      x-permissions:
      - container/registry.tag/create
      - container/registry.tag/delete
  /container/{locationId}/project/{projectId}/registry/{registryId}/tag/{tagId}:
    delete:
      description: Delete container/registry.tag
      operationId: container_project_registry_tag_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Registry Id
        explode: false
        in: path
        name: registryId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete container/registry.tag
      tags:
      - container_project_registry
      x-permissions:
      - container/registry.tag/delete
      x-examples:
        $ref: ./docs/container_project_registry_tag_delete/index.json
    get:
      description: Get container/registry.tag
      operationId: container_project_registry_tag_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Registry Id
        explode: false
        in: path
        name: registryId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get container/registry.tag
      tags:
      - container_project_registry
      x-permissions:
      - container/registry.tag/get
      x-examples:
        $ref: ./docs/container_project_registry_tag_get/index.json
  /container/{locationId}/project/{projectId}/registry/{registryId}/event:
    get:
      description: List container/registry.event
      operationId: container_project_registry_event_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Registry Id
        explode: false
        in: path
        name: registryId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: number
        style: form
      - description: $skip
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                title: Event collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List container/registry.event
      tags:
      - container_project_registry
      x-permissions:
      - container/registry.event/list
      x-examples:
        $ref: ./docs/container_project_registry_event_list/index.json
  /container/{locationId}/project/{projectId}/registry/{registryId}/event/{eventId}:
    get:
      description: Get container/registry.event
      operationId: container_project_registry_event_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Registry Id
        explode: false
        in: path
        name: registryId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: eventId
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get container/registry.event
      tags:
      - container_project_registry
      x-permissions:
      - container/registry.event/get
      x-examples:
        $ref: ./docs/container_project_registry_event_get/index.json
  /website/{locationId}/project/{projectId}/instance:
    get:
      description: List instance
      operationId: website_project_instance_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.value
        explode: true
        in: query
        name: tag.value
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.key
        explode: true
        in: query
        name: tag.key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/website'
                title: Website collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List website/instance
      tags:
      - website_project_instance
      x-permissions:
      - website/instance/list
      x-examples:
        $ref: ./docs/website_project_instance_list/index.json
    post:
      description: Create instance
      operationId: website_project_instance_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/website_project_instance_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create website/instance
      tags:
      - website_project_instance
      x-permissions:
      - website/instance/create
      x-examples:
        $ref: ./docs/website_project_instance_create/index.json
  /website/{locationId}/project/{projectId}/instance/{instanceId}:
    delete:
      description: Delete instance
      operationId: website_project_instance_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete website/instance
      tags:
      - website_project_instance
      x-permissions:
      - website/instance/delete
      x-state:
      - Running
      - "Off"
      - Restarting
      x-examples:
        $ref: ./docs/website_project_instance_delete/index.json
    get:
      description: Returns a single instance
      operationId: website_project_instance_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get website/instance
      tags:
      - website_project_instance
      x-permissions:
      - website/instance/get
      x-examples:
        $ref: ./docs/website_project_instance_get/index.json
    patch:
      description: Returns modified instance
      operationId: website_project_instance_update
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/website_project_instance_update'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update website/instance
      tags:
      - website_project_instance
      x-examples:
        $ref: ./docs/website_project_instance_update/index.json
  /website/{locationId}/project/{projectId}/instance/{instanceId}/actions/start:
    post:
      description: action start
      operationId: website_project_instance_start
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Start website/instance
      tags:
      - website_project_instance
      x-permissions:
      - website/instance/start
      x-state:
      - "Off"
  /website/{locationId}/project/{projectId}/instance/{instanceId}/actions/stop:
    post:
      description: action stop
      operationId: website_project_instance_stop
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Stop website/instance
      tags:
      - website_project_instance
      x-permissions:
      - website/instance/stop
      x-state:
      - Running
      - Restarting
  /website/{locationId}/project/{projectId}/instance/{instanceId}/actions/restart:
    post:
      description: action restart
      operationId: website_project_instance_restart
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Restart website/instance
      tags:
      - website_project_instance
      x-permissions:
      - website/instance/restart
      x-state:
      - Running
  /website/{locationId}/project/{projectId}/instance/{instanceId}/actions/transfer:
    post:
      description: action transfer
      operationId: website_project_instance_transfer
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/website_project_instance_transfer'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Transfer website/instance
      tags:
      - website_project_instance
      x-permissions:
      - website/instance/transfer
      x-state:
      - Running
      - "Off"
      - Restarting
  /website/{locationId}/project/{projectId}/instance/{instanceId}/snapshot:
    get:
      description: List website/instance.snapshot
      operationId: website_project_instance_snapshot_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/website.snapshot'
                title: Website.snapshot collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List website/instance.snapshot
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.snapshot/list
      x-examples:
        $ref: ./docs/website_project_instance_snapshot_list/index.json
    post:
      description: Create website/instance.snapshot
      operationId: website_project_instance_snapshot_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/website.snapshot'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website.snapshot'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create website/instance.snapshot
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.snapshot/create
      x-examples:
        $ref: ./docs/website_project_instance_snapshot_create/index.json
  /website/{locationId}/project/{projectId}/instance/{instanceId}/snapshot/{snapshotId}:
    delete:
      description: Delete website/instance.snapshot
      operationId: website_project_instance_snapshot_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: snapshotId
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete website/instance.snapshot
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.snapshot/delete
      x-examples:
        $ref: ./docs/website_project_instance_snapshot_delete/index.json
    get:
      description: Get website/instance.snapshot
      operationId: website_project_instance_snapshot_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: snapshotId
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website.snapshot'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get website/instance.snapshot
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.snapshot/get
      x-examples:
        $ref: ./docs/website_project_instance_snapshot_get/index.json
  /website/{locationId}/project/{projectId}/instance/{instanceId}/snapshot/{snapshotId}/actions/download:
    post:
      description: action download
      operationId: website_project_instance_snapshot_download
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: snapshotId
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/website_project_instance_snapshot_download'
        required: true
      responses:
        "201":
          description: Download request accepted
          headers:
            location:
              description: Absolute URL
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Download website/instance.snapshot
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.snapshot/read
  /website/{locationId}/project/{projectId}/instance/{instanceId}/env:
    get:
      description: List website/instance.env
      operationId: website_project_instance_env_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/website.env'
                title: Website.env collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List website/instance.env
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.env/list
      x-examples:
        $ref: ./docs/website_project_instance_env_list/index.json
    post:
      description: Create website/instance.env
      operationId: website_project_instance_env_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/website.env'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website.env'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create website/instance.env
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.env/create
      x-examples:
        $ref: ./docs/website_project_instance_env_create/index.json
  /website/{locationId}/project/{projectId}/instance/{instanceId}/env/{envId}:
    delete:
      description: Delete website/instance.env
      operationId: website_project_instance_env_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: envId
        explode: false
        in: path
        name: envId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete website/instance.env
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.env/delete
      x-examples:
        $ref: ./docs/website_project_instance_env_delete/index.json
    get:
      description: Get website/instance.env
      operationId: website_project_instance_env_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: envId
        explode: false
        in: path
        name: envId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website.env'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get website/instance.env
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.env/get
      x-examples:
        $ref: ./docs/website_project_instance_env_get/index.json
  /website/{locationId}/project/{projectId}/instance/{instanceId}/link:
    get:
      description: List website/instance.link
      operationId: website_project_instance_link_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/website.link'
                title: Website.link collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List website/instance.link
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.link/list
    post:
      description: Create website/instance.link
      operationId: website_project_instance_link_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/website.link'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website.link'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create website/instance.link
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.link/create
  /website/{locationId}/project/{projectId}/instance/{instanceId}/link/{linkId}:
    delete:
      description: Delete website/instance.link
      operationId: website_project_instance_link_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: linkId
        explode: false
        in: path
        name: linkId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete website/instance.link
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.link/delete
    get:
      description: Get website/instance.link
      operationId: website_project_instance_link_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: linkId
        explode: false
        in: path
        name: linkId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website.link'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get website/instance.link
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.link/get
  /website/{locationId}/project/{projectId}/instance/{instanceId}/sideapp:
    get:
      description: List website/instance.sideapp
      operationId: website_project_instance_sideapp_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/website.sideapp'
                title: Website.sideapp collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List website/instance.sideapp
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.sideapp/list
      x-examples:
        $ref: ./docs/website_project_instance_sideapp_list/index.json
    post:
      description: Create website/instance.sideapp
      operationId: website_project_instance_sideapp_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/website.sideapp'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website.sideapp'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create website/instance.sideapp
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.sideapp/create
      x-examples:
        $ref: ./docs/website_project_instance_sideapp_create/index.json
  /website/{locationId}/project/{projectId}/instance/{instanceId}/sideapp/{sideappId}:
    delete:
      description: Delete website/instance.sideapp
      operationId: website_project_instance_sideapp_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: sideappId
        explode: false
        in: path
        name: sideappId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete website/instance.sideapp
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.sideapp/delete
      x-examples:
        $ref: ./docs/website_project_instance_sideapp_delete/index.json
    get:
      description: Get website/instance.sideapp
      operationId: website_project_instance_sideapp_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: sideappId
        explode: false
        in: path
        name: sideappId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website.sideapp'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get website/instance.sideapp
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.sideapp/get
      x-examples:
        $ref: ./docs/website_project_instance_sideapp_get/index.json
  /website/{locationId}/project/{projectId}/instance/{instanceId}/credential:
    get:
      description: List website/instance.credential
      operationId: website_project_instance_credential_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/website.credential'
                title: Website.credential collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List website/instance.credential
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.credential/list
      x-examples:
        $ref: ./docs/website_project_instance_credential_list/index.json
    post:
      description: Create website/instance.credential
      operationId: website_project_instance_credential_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/website.credential'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website.credential'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create website/instance.credential
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.credential/create
      x-examples:
        $ref: ./docs/website_project_instance_credential_create/index.json
  /website/{locationId}/project/{projectId}/instance/{instanceId}/credential/{credentialId}:
    delete:
      description: Delete website/instance.credential
      operationId: website_project_instance_credential_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: credentialId
        explode: false
        in: path
        name: credentialId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete website/instance.credential
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.credential/delete
      x-examples:
        $ref: ./docs/website_project_instance_credential_delete/index.json
    get:
      description: Get website/instance.credential
      operationId: website_project_instance_credential_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: credentialId
        explode: false
        in: path
        name: credentialId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website.credential'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get website/instance.credential
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.credential/get
      x-examples:
        $ref: ./docs/website_project_instance_credential_get/index.json
    patch:
      description: Update website/instance.credential
      operationId: website_project_instance_credential_patch
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: credentialId
        explode: false
        in: path
        name: credentialId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/website_project_instance_credential_patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website.credential'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update website/instance.credential
      tags:
      - website_project_instance
  /website/{locationId}/project/{projectId}/instance/{instanceId}/domain:
    get:
      description: List website/instance.domain
      operationId: website_project_instance_domain_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/domain'
                title: Domain collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List website/instance.domain
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.domain/list
    post:
      description: Create website/instance.domain
      operationId: website_project_instance_domain_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/domain'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create website/instance.domain
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.domain/create
  /website/{locationId}/project/{projectId}/instance/{instanceId}/domain/{domainId}:
    delete:
      description: Delete website/instance.domain
      operationId: website_project_instance_domain_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: domainId
        explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete website/instance.domain
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.domain/delete
    get:
      description: Get website/instance.domain
      operationId: website_project_instance_domain_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: domainId
        explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get website/instance.domain
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.domain/get
  /website/{locationId}/project/{projectId}/instance/{instanceId}/metric:
    get:
      description: List website/instance.metric
      operationId: website_project_instance_metric_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/metric'
                title: Metric collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List website/instance.metric
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.metric/list
  /website/{locationId}/project/{projectId}/instance/{instanceId}/metric/{metricId}:
    get:
      description: Get website/instance.metric
      operationId: website_project_instance_metric_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: metricId
        explode: false
        in: path
        name: metricId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/metric'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get website/instance.metric
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.metric/get
  /website/{locationId}/project/{projectId}/instance/{instanceId}/metric/{metricId}/point:
    get:
      description: List website/instance.point
      operationId: website_project_instance_metric_point_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: metricId
        explode: false
        in: path
        name: metricId
        required: true
        schema:
          type: string
        style: simple
      - description: interval
        explode: true
        in: query
        name: interval
        required: false
        schema:
          type: string
        style: form
      - description: timespan
        explode: true
        in: query
        name: timespan
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/serie'
                title: Serie collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List website/instance.point
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.point/list
  /website/{locationId}/project/{projectId}/instance/{instanceId}/service:
    get:
      description: List website/instance.service
      operationId: website_project_instance_service_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/resourceService'
                title: ResourceService collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List website/instance.service
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.service/list
      x-examples:
        $ref: ./docs/website_project_instance_service_list/index.json
  /website/{locationId}/project/{projectId}/instance/{instanceId}/service/{serviceId}:
    get:
      description: Get website/instance.service
      operationId: website_project_instance_service_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceService'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get website/instance.service
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.service/get
      x-examples:
        $ref: ./docs/website_project_instance_service_get/index.json
  /website/{locationId}/project/{projectId}/instance/{instanceId}/tag:
    get:
      description: List website/instance.tag
      operationId: website_project_instance_tag_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List website/instance.tag
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.tag/list
      x-examples:
        $ref: ./docs/website_project_instance_tag_list/index.json
    post:
      description: Create website/instance.tag
      operationId: website_project_instance_tag_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create website/instance.tag
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.tag/create
      x-examples:
        $ref: ./docs/website_project_instance_tag_create/index.json
    put:
      description: Replace website/instance.tag
      operationId: website_project_instance_tag_put
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag_array'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Replace website/instance.tag
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.tag/create
      - website/instance.tag/delete
  /website/{locationId}/project/{projectId}/instance/{instanceId}/tag/{tagId}:
    delete:
      description: Delete website/instance.tag
      operationId: website_project_instance_tag_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete website/instance.tag
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.tag/delete
      x-examples:
        $ref: ./docs/website_project_instance_tag_delete/index.json
    get:
      description: Get website/instance.tag
      operationId: website_project_instance_tag_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get website/instance.tag
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.tag/get
      x-examples:
        $ref: ./docs/website_project_instance_tag_get/index.json
  /website/{locationId}/project/{projectId}/instance/{instanceId}/event:
    get:
      description: List website/instance.event
      operationId: website_project_instance_event_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: number
        style: form
      - description: $skip
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                title: Event collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List website/instance.event
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.event/list
      x-examples:
        $ref: ./docs/website_project_instance_event_list/index.json
  /website/{locationId}/project/{projectId}/instance/{instanceId}/event/{eventId}:
    get:
      description: Get website/instance.event
      operationId: website_project_instance_event_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: eventId
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get website/instance.event
      tags:
      - website_project_instance
      x-permissions:
      - website/instance.event/get
      x-examples:
        $ref: ./docs/website_project_instance_event_get/index.json
  /dns/{locationId}/project/{projectId}/zone:
    get:
      description: List zone
      operationId: dns_project_zone_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.value
        explode: true
        in: query
        name: tag.value
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.key
        explode: true
        in: query
        name: tag.key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/zone'
                title: Zone collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List dns/zone
      tags:
      - dns_project_zone
      x-permissions:
      - dns/zone/list
      x-examples:
        $ref: ./docs/dns_project_zone_list/index.json
    post:
      description: Create zone
      operationId: dns_project_zone_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dns_project_zone_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zone'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zone'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create dns/zone
      tags:
      - dns_project_zone
      x-permissions:
      - dns/zone/create
      x-examples:
        $ref: ./docs/dns_project_zone_create/index.json
  /dns/{locationId}/project/{projectId}/zone/{zoneId}:
    delete:
      description: Delete zone
      operationId: dns_project_zone_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Zone Id
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete dns/zone
      tags:
      - dns_project_zone
      x-permissions:
      - dns/zone/delete
      x-state:
      - Online
      x-examples:
        $ref: ./docs/dns_project_zone_delete/index.json
    get:
      description: Returns a single zone
      operationId: dns_project_zone_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Zone Id
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zone'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get dns/zone
      tags:
      - dns_project_zone
      x-permissions:
      - dns/zone/get
      x-examples:
        $ref: ./docs/dns_project_zone_get/index.json
    patch:
      description: Returns modified zone
      operationId: dns_project_zone_update
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Zone Id
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dns_project_zone_update'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zone'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update dns/zone
      tags:
      - dns_project_zone
      x-examples:
        $ref: ./docs/dns_project_zone_update/index.json
  /dns/{locationId}/project/{projectId}/zone/{zoneId}/recordset:
    get:
      description: List dns/zone.recordset
      operationId: dns_project_zone_recordset_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Zone Id
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dns.recordset'
                title: Dns.recordset collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List dns/zone.recordset
      tags:
      - dns_project_zone
      x-permissions:
      - dns/zone.recordset/list
      x-examples:
        $ref: ./docs/dns_project_zone_recordset_list/index.json
    post:
      description: Create dns/zone.recordset
      operationId: dns_project_zone_recordset_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Zone Id
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dns.recordset'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dns.recordset'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create dns/zone.recordset
      tags:
      - dns_project_zone
      x-permissions:
      - dns/zone.recordset/create
      x-examples:
        $ref: ./docs/dns_project_zone_recordset_create/index.json
  /dns/{locationId}/project/{projectId}/zone/{zoneId}/recordset/{recordsetId}:
    delete:
      description: Delete dns/zone.recordset
      operationId: dns_project_zone_recordset_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Zone Id
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: recordsetId
        explode: false
        in: path
        name: recordsetId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zone'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zone'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete dns/zone.recordset
      tags:
      - dns_project_zone
      x-permissions:
      - dns/zone.recordset/delete
      x-examples:
        $ref: ./docs/dns_project_zone_recordset_delete/index.json
    get:
      description: Get dns/zone.recordset
      operationId: dns_project_zone_recordset_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Zone Id
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: recordsetId
        explode: false
        in: path
        name: recordsetId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dns.recordset'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get dns/zone.recordset
      tags:
      - dns_project_zone
      x-permissions:
      - dns/zone.recordset/get
      x-examples:
        $ref: ./docs/dns_project_zone_recordset_get/index.json
    patch:
      description: Update dns/zone.recordset
      operationId: dns_project_zone_recordset_patch
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Zone Id
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: recordsetId
        explode: false
        in: path
        name: recordsetId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dns_project_zone_recordset_patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dns.recordset'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update dns/zone.recordset
      tags:
      - dns_project_zone
  /dns/{locationId}/project/{projectId}/zone/{zoneId}/recordset/{recordsetId}/record:
    get:
      description: List dns/zone.record
      operationId: dns_project_zone_recordset_record_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Zone Id
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: recordsetId
        explode: false
        in: path
        name: recordsetId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dns.record'
                title: Dns.record collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List dns/zone.record
      tags:
      - dns_project_zone
      x-permissions:
      - dns/zone.record/list
    post:
      description: Create dns/zone.record
      operationId: dns_project_zone_recordset_record_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Zone Id
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: recordsetId
        explode: false
        in: path
        name: recordsetId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dns.record'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dns.record'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create dns/zone.record
      tags:
      - dns_project_zone
      x-permissions:
      - dns/zone.record/create
    put:
      description: Replace dns/zone.record
      operationId: dns_project_zone_recordset_record_put
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Zone Id
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: recordsetId
        explode: false
        in: path
        name: recordsetId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dns.record_array'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dns.record'
                title: Dns.record collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Replace dns/zone.record
      tags:
      - dns_project_zone
      x-permissions:
      - dns/zone.record/create
      - dns/zone.record/delete
  /dns/{locationId}/project/{projectId}/zone/{zoneId}/recordset/{recordsetId}/record/{recordId}:
    delete:
      description: Delete dns/zone.record
      operationId: dns_project_zone_recordset_record_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Zone Id
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: recordsetId
        explode: false
        in: path
        name: recordsetId
        required: true
        schema:
          type: string
        style: simple
      - description: recordId
        explode: false
        in: path
        name: recordId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete dns/zone.record
      tags:
      - dns_project_zone
      x-permissions:
      - dns/zone.record/delete
    get:
      description: Get dns/zone.record
      operationId: dns_project_zone_recordset_record_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Zone Id
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: recordsetId
        explode: false
        in: path
        name: recordsetId
        required: true
        schema:
          type: string
        style: simple
      - description: recordId
        explode: false
        in: path
        name: recordId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dns.record'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get dns/zone.record
      tags:
      - dns_project_zone
      x-permissions:
      - dns/zone.record/get
  /dns/{locationId}/project/{projectId}/zone/{zoneId}/service:
    get:
      description: List dns/zone.service
      operationId: dns_project_zone_service_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Zone Id
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/resourceService'
                title: ResourceService collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List dns/zone.service
      tags:
      - dns_project_zone
      x-permissions:
      - dns/zone.service/list
      x-examples:
        $ref: ./docs/dns_project_zone_service_list/index.json
  /dns/{locationId}/project/{projectId}/zone/{zoneId}/service/{serviceId}:
    get:
      description: Get dns/zone.service
      operationId: dns_project_zone_service_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Zone Id
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceService'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get dns/zone.service
      tags:
      - dns_project_zone
      x-permissions:
      - dns/zone.service/get
      x-examples:
        $ref: ./docs/dns_project_zone_service_get/index.json
  /dns/{locationId}/project/{projectId}/zone/{zoneId}/tag:
    get:
      description: List dns/zone.tag
      operationId: dns_project_zone_tag_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Zone Id
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List dns/zone.tag
      tags:
      - dns_project_zone
      x-permissions:
      - dns/zone.tag/list
      x-examples:
        $ref: ./docs/dns_project_zone_tag_list/index.json
    post:
      description: Create dns/zone.tag
      operationId: dns_project_zone_tag_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Zone Id
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create dns/zone.tag
      tags:
      - dns_project_zone
      x-permissions:
      - dns/zone.tag/create
      x-examples:
        $ref: ./docs/dns_project_zone_tag_create/index.json
    put:
      description: Replace dns/zone.tag
      operationId: dns_project_zone_tag_put
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Zone Id
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag_array'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Replace dns/zone.tag
      tags:
      - dns_project_zone
      x-permissions:
      - dns/zone.tag/create
      - dns/zone.tag/delete
  /dns/{locationId}/project/{projectId}/zone/{zoneId}/tag/{tagId}:
    delete:
      description: Delete dns/zone.tag
      operationId: dns_project_zone_tag_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Zone Id
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete dns/zone.tag
      tags:
      - dns_project_zone
      x-permissions:
      - dns/zone.tag/delete
      x-examples:
        $ref: ./docs/dns_project_zone_tag_delete/index.json
    get:
      description: Get dns/zone.tag
      operationId: dns_project_zone_tag_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Zone Id
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get dns/zone.tag
      tags:
      - dns_project_zone
      x-permissions:
      - dns/zone.tag/get
      x-examples:
        $ref: ./docs/dns_project_zone_tag_get/index.json
  /dns/{locationId}/project/{projectId}/zone/{zoneId}/event:
    get:
      description: List dns/zone.event
      operationId: dns_project_zone_event_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Zone Id
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: number
        style: form
      - description: $skip
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                title: Event collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List dns/zone.event
      tags:
      - dns_project_zone
      x-permissions:
      - dns/zone.event/list
      x-examples:
        $ref: ./docs/dns_project_zone_event_list/index.json
  /dns/{locationId}/project/{projectId}/zone/{zoneId}/event/{eventId}:
    get:
      description: Get dns/zone.event
      operationId: dns_project_zone_event_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Zone Id
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: eventId
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get dns/zone.event
      tags:
      - dns_project_zone
      x-permissions:
      - dns/zone.event/get
      x-examples:
        $ref: ./docs/dns_project_zone_event_get/index.json
  /storage/{locationId}/project/{projectId}/disk:
    get:
      description: List disk
      operationId: storage_project_disk_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by vm
        explode: true
        in: query
        name: vm
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.value
        explode: true
        in: query
        name: tag.value
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.key
        explode: true
        in: query
        name: tag.key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/disk'
                title: Disk collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List storage/disk
      tags:
      - storage_project_disk
      x-permissions:
      - storage/disk/list
      x-examples:
        $ref: ./docs/storage_project_disk_list/index.json
    post:
      description: Create disk
      operationId: storage_project_disk_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage_project_disk_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create storage/disk
      tags:
      - storage_project_disk
      x-permissions:
      - storage/disk/create
      x-examples:
        $ref: ./docs/storage_project_disk_create/index.json
  /storage/{locationId}/project/{projectId}/disk/{diskId}:
    delete:
      description: Delete disk
      operationId: storage_project_disk_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Disk Id
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete storage/disk
      tags:
      - storage_project_disk
      x-permissions:
      - storage/disk/delete
      x-state:
      - Detached
      x-examples:
        $ref: ./docs/storage_project_disk_delete/index.json
    get:
      description: Returns a single disk
      operationId: storage_project_disk_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Disk Id
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get storage/disk
      tags:
      - storage_project_disk
      x-permissions:
      - storage/disk/get
      x-examples:
        $ref: ./docs/storage_project_disk_get/index.json
    patch:
      description: Returns modified disk
      operationId: storage_project_disk_update
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Disk Id
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage_project_disk_update'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update storage/disk
      tags:
      - storage_project_disk
      x-examples:
        $ref: ./docs/storage_project_disk_update/index.json
  /storage/{locationId}/project/{projectId}/disk/{diskId}/actions/resize:
    post:
      description: action resize
      operationId: storage_project_disk_resize
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Disk Id
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage_project_disk_resize'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Resize storage/disk
      tags:
      - storage_project_disk
      x-permissions:
      - storage/disk.size/update
      x-state:
      - Attached
      - Detached
      x-examples:
        $ref: ./docs/storage_project_disk_resize/index.json
  /storage/{locationId}/project/{projectId}/disk/{diskId}/actions/attach:
    post:
      description: action attach
      operationId: storage_project_disk_attach
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Disk Id
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage_project_disk_attach'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Attach storage/disk
      tags:
      - storage_project_disk
      x-permissions:
      - storage/disk/attach
      x-state:
      - Detached
  /storage/{locationId}/project/{projectId}/disk/{diskId}/actions/detach:
    post:
      description: action detach
      operationId: storage_project_disk_detach
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Disk Id
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Detach storage/disk
      tags:
      - storage_project_disk
      x-permissions:
      - storage/disk/detach
      x-state:
      - Attached
  /storage/{locationId}/project/{projectId}/disk/{diskId}/actions/download:
    post:
      description: action download
      operationId: storage_project_disk_download
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Disk Id
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "201":
          description: Download request accepted
          headers:
            location:
              description: Absolute URL
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Download storage/disk
      tags:
      - storage_project_disk
      x-permissions:
      - storage/disk/read
      x-state:
      - Online
      - Attached
      - Detached
  /storage/{locationId}/project/{projectId}/disk/{diskId}/actions/transfer:
    post:
      description: action transfer
      operationId: storage_project_disk_transfer
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Disk Id
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage_project_disk_transfer'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Transfer storage/disk
      tags:
      - storage_project_disk
      x-permissions:
      - storage/disk/transfer
      x-state:
      - Detached
  /storage/{locationId}/project/{projectId}/disk/{diskId}/metric:
    get:
      description: List storage/disk.metric
      operationId: storage_project_disk_metric_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Disk Id
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/metric'
                title: Metric collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List storage/disk.metric
      tags:
      - storage_project_disk
      x-permissions:
      - storage/disk.metric/list
  /storage/{locationId}/project/{projectId}/disk/{diskId}/metric/{metricId}:
    get:
      description: Get storage/disk.metric
      operationId: storage_project_disk_metric_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Disk Id
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: metricId
        explode: false
        in: path
        name: metricId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/metric'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get storage/disk.metric
      tags:
      - storage_project_disk
      x-permissions:
      - storage/disk.metric/get
  /storage/{locationId}/project/{projectId}/disk/{diskId}/metric/{metricId}/point:
    get:
      description: List storage/disk.point
      operationId: storage_project_disk_metric_point_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Disk Id
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: metricId
        explode: false
        in: path
        name: metricId
        required: true
        schema:
          type: string
        style: simple
      - description: interval
        explode: true
        in: query
        name: interval
        required: false
        schema:
          type: string
        style: form
      - description: timespan
        explode: true
        in: query
        name: timespan
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/serie'
                title: Serie collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List storage/disk.point
      tags:
      - storage_project_disk
      x-permissions:
      - storage/disk.point/list
  /storage/{locationId}/project/{projectId}/disk/{diskId}/service:
    get:
      description: List storage/disk.service
      operationId: storage_project_disk_service_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Disk Id
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/resourceService'
                title: ResourceService collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List storage/disk.service
      tags:
      - storage_project_disk
      x-permissions:
      - storage/disk.service/list
      x-examples:
        $ref: ./docs/storage_project_disk_service_list/index.json
  /storage/{locationId}/project/{projectId}/disk/{diskId}/service/{serviceId}:
    get:
      description: Get storage/disk.service
      operationId: storage_project_disk_service_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Disk Id
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceService'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get storage/disk.service
      tags:
      - storage_project_disk
      x-permissions:
      - storage/disk.service/get
      x-examples:
        $ref: ./docs/storage_project_disk_service_get/index.json
  /storage/{locationId}/project/{projectId}/disk/{diskId}/tag:
    get:
      description: List storage/disk.tag
      operationId: storage_project_disk_tag_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Disk Id
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List storage/disk.tag
      tags:
      - storage_project_disk
      x-permissions:
      - storage/disk.tag/list
      x-examples:
        $ref: ./docs/storage_project_disk_tag_list/index.json
    post:
      description: Create storage/disk.tag
      operationId: storage_project_disk_tag_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Disk Id
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create storage/disk.tag
      tags:
      - storage_project_disk
      x-permissions:
      - storage/disk.tag/create
      x-examples:
        $ref: ./docs/storage_project_disk_tag_create/index.json
    put:
      description: Replace storage/disk.tag
      operationId: storage_project_disk_tag_put
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Disk Id
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag_array'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Replace storage/disk.tag
      tags:
      - storage_project_disk
      x-permissions:
      - storage/disk.tag/create
      - storage/disk.tag/delete
  /storage/{locationId}/project/{projectId}/disk/{diskId}/tag/{tagId}:
    delete:
      description: Delete storage/disk.tag
      operationId: storage_project_disk_tag_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Disk Id
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete storage/disk.tag
      tags:
      - storage_project_disk
      x-permissions:
      - storage/disk.tag/delete
      x-examples:
        $ref: ./docs/storage_project_disk_tag_delete/index.json
    get:
      description: Get storage/disk.tag
      operationId: storage_project_disk_tag_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Disk Id
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get storage/disk.tag
      tags:
      - storage_project_disk
      x-permissions:
      - storage/disk.tag/get
      x-examples:
        $ref: ./docs/storage_project_disk_tag_get/index.json
  /storage/{locationId}/project/{projectId}/disk/{diskId}/event:
    get:
      description: List storage/disk.event
      operationId: storage_project_disk_event_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Disk Id
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: number
        style: form
      - description: $skip
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                title: Event collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List storage/disk.event
      tags:
      - storage_project_disk
      x-permissions:
      - storage/disk.event/list
      x-examples:
        $ref: ./docs/storage_project_disk_event_list/index.json
  /storage/{locationId}/project/{projectId}/disk/{diskId}/event/{eventId}:
    get:
      description: Get storage/disk.event
      operationId: storage_project_disk_event_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Disk Id
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: eventId
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get storage/disk.event
      tags:
      - storage_project_disk
      x-permissions:
      - storage/disk.event/get
      x-examples:
        $ref: ./docs/storage_project_disk_event_get/index.json
  /networking/{locationId}/project/{projectId}/firewall:
    get:
      description: List firewall
      operationId: networking_project_firewall_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.value
        explode: true
        in: query
        name: tag.value
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.key
        explode: true
        in: query
        name: tag.key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/firewall'
                title: Firewall collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List networking/firewall
      tags:
      - networking_project_firewall
      x-permissions:
      - networking/firewall/list
      x-examples:
        $ref: ./docs/networking_project_firewall_list/index.json
    post:
      description: Create firewall
      operationId: networking_project_firewall_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/networking_project_firewall_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create networking/firewall
      tags:
      - networking_project_firewall
      x-permissions:
      - networking/firewall/create
      x-examples:
        $ref: ./docs/networking_project_firewall_create/index.json
  /networking/{locationId}/project/{projectId}/firewall/{firewallId}:
    delete:
      description: Delete firewall
      operationId: networking_project_firewall_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Firewall Id
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete networking/firewall
      tags:
      - networking_project_firewall
      x-permissions:
      - networking/firewall/delete
      x-state:
      - Detached
      x-examples:
        $ref: ./docs/networking_project_firewall_delete/index.json
    get:
      description: Returns a single firewall
      operationId: networking_project_firewall_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Firewall Id
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get networking/firewall
      tags:
      - networking_project_firewall
      x-permissions:
      - networking/firewall/get
      x-examples:
        $ref: ./docs/networking_project_firewall_get/index.json
    patch:
      description: Returns modified firewall
      operationId: networking_project_firewall_update
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Firewall Id
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/networking_project_firewall_update'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update networking/firewall
      tags:
      - networking_project_firewall
      x-examples:
        $ref: ./docs/networking_project_firewall_update/index.json
  /networking/{locationId}/project/{projectId}/firewall/{firewallId}/actions/transfer:
    post:
      description: action transfer
      operationId: networking_project_firewall_transfer
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Firewall Id
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/networking_project_firewall_transfer'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Transfer networking/firewall
      tags:
      - networking_project_firewall
      x-permissions:
      - networking/firewall/transfer
      x-state:
      - Detached
  /networking/{locationId}/project/{projectId}/firewall/{firewallId}/ingress:
    get:
      description: List networking/firewall.ingress
      operationId: networking_project_firewall_ingress_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Firewall Id
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/networking.rule'
                title: Networking.rule collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List networking/firewall.ingress
      tags:
      - networking_project_firewall
      x-permissions:
      - networking/firewall.ingress/list
      x-examples:
        $ref: ./docs/networking_project_firewall_ingress_list/index.json
    post:
      description: Create networking/firewall.ingress
      operationId: networking_project_firewall_ingress_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Firewall Id
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/networking.rule'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/networking.rule'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create networking/firewall.ingress
      tags:
      - networking_project_firewall
      x-permissions:
      - networking/firewall.ingress/create
      x-examples:
        $ref: ./docs/networking_project_firewall_ingress_create/index.json
    put:
      description: Replace networking/firewall.ingress
      operationId: networking_project_firewall_ingress_put
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Firewall Id
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/networking.rule_array'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/networking.rule'
                title: Networking.rule collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Replace networking/firewall.ingress
      tags:
      - networking_project_firewall
      x-permissions:
      - networking/firewall.ingress/create
      - networking/firewall.ingress/delete
  /networking/{locationId}/project/{projectId}/firewall/{firewallId}/ingress/{ingressId}:
    delete:
      description: Delete networking/firewall.ingress
      operationId: networking_project_firewall_ingress_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Firewall Id
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: ingressId
        explode: false
        in: path
        name: ingressId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete networking/firewall.ingress
      tags:
      - networking_project_firewall
      x-permissions:
      - networking/firewall.ingress/delete
      x-examples:
        $ref: ./docs/networking_project_firewall_ingress_delete/index.json
    get:
      description: Get networking/firewall.ingress
      operationId: networking_project_firewall_ingress_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Firewall Id
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: ingressId
        explode: false
        in: path
        name: ingressId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/networking.rule'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get networking/firewall.ingress
      tags:
      - networking_project_firewall
      x-permissions:
      - networking/firewall.ingress/get
      x-examples:
        $ref: ./docs/networking_project_firewall_ingress_get/index.json
  /networking/{locationId}/project/{projectId}/firewall/{firewallId}/egress:
    get:
      description: List networking/firewall.egress
      operationId: networking_project_firewall_egress_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Firewall Id
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/networking.rule'
                title: Networking.rule collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List networking/firewall.egress
      tags:
      - networking_project_firewall
      x-permissions:
      - networking/firewall.egress/list
      x-examples:
        $ref: ./docs/networking_project_firewall_egress_list/index.json
    post:
      description: Create networking/firewall.egress
      operationId: networking_project_firewall_egress_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Firewall Id
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/networking.rule'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/networking.rule'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create networking/firewall.egress
      tags:
      - networking_project_firewall
      x-permissions:
      - networking/firewall.egress/create
      x-examples:
        $ref: ./docs/networking_project_firewall_egress_create/index.json
    put:
      description: Replace networking/firewall.egress
      operationId: networking_project_firewall_egress_put
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Firewall Id
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/networking.rule_array'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/networking.rule'
                title: Networking.rule collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Replace networking/firewall.egress
      tags:
      - networking_project_firewall
      x-permissions:
      - networking/firewall.egress/create
      - networking/firewall.egress/delete
  /networking/{locationId}/project/{projectId}/firewall/{firewallId}/egress/{egressId}:
    delete:
      description: Delete networking/firewall.egress
      operationId: networking_project_firewall_egress_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Firewall Id
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: egressId
        explode: false
        in: path
        name: egressId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete networking/firewall.egress
      tags:
      - networking_project_firewall
      x-permissions:
      - networking/firewall.egress/delete
      x-examples:
        $ref: ./docs/networking_project_firewall_egress_delete/index.json
    get:
      description: Get networking/firewall.egress
      operationId: networking_project_firewall_egress_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Firewall Id
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: egressId
        explode: false
        in: path
        name: egressId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/networking.rule'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get networking/firewall.egress
      tags:
      - networking_project_firewall
      x-permissions:
      - networking/firewall.egress/get
      x-examples:
        $ref: ./docs/networking_project_firewall_egress_get/index.json
  /networking/{locationId}/project/{projectId}/firewall/{firewallId}/service:
    get:
      description: List networking/firewall.service
      operationId: networking_project_firewall_service_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Firewall Id
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/resourceService'
                title: ResourceService collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List networking/firewall.service
      tags:
      - networking_project_firewall
      x-permissions:
      - networking/firewall.service/list
      x-examples:
        $ref: ./docs/networking_project_firewall_service_list/index.json
  /networking/{locationId}/project/{projectId}/firewall/{firewallId}/service/{serviceId}:
    get:
      description: Get networking/firewall.service
      operationId: networking_project_firewall_service_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Firewall Id
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceService'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get networking/firewall.service
      tags:
      - networking_project_firewall
      x-permissions:
      - networking/firewall.service/get
      x-examples:
        $ref: ./docs/networking_project_firewall_service_get/index.json
  /networking/{locationId}/project/{projectId}/firewall/{firewallId}/tag:
    get:
      description: List networking/firewall.tag
      operationId: networking_project_firewall_tag_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Firewall Id
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List networking/firewall.tag
      tags:
      - networking_project_firewall
      x-permissions:
      - networking/firewall.tag/list
      x-examples:
        $ref: ./docs/networking_project_firewall_tag_list/index.json
    post:
      description: Create networking/firewall.tag
      operationId: networking_project_firewall_tag_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Firewall Id
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create networking/firewall.tag
      tags:
      - networking_project_firewall
      x-permissions:
      - networking/firewall.tag/create
      x-examples:
        $ref: ./docs/networking_project_firewall_tag_create/index.json
    put:
      description: Replace networking/firewall.tag
      operationId: networking_project_firewall_tag_put
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Firewall Id
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag_array'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Replace networking/firewall.tag
      tags:
      - networking_project_firewall
      x-permissions:
      - networking/firewall.tag/create
      - networking/firewall.tag/delete
  /networking/{locationId}/project/{projectId}/firewall/{firewallId}/tag/{tagId}:
    delete:
      description: Delete networking/firewall.tag
      operationId: networking_project_firewall_tag_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Firewall Id
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete networking/firewall.tag
      tags:
      - networking_project_firewall
      x-permissions:
      - networking/firewall.tag/delete
      x-examples:
        $ref: ./docs/networking_project_firewall_tag_delete/index.json
    get:
      description: Get networking/firewall.tag
      operationId: networking_project_firewall_tag_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Firewall Id
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get networking/firewall.tag
      tags:
      - networking_project_firewall
      x-permissions:
      - networking/firewall.tag/get
      x-examples:
        $ref: ./docs/networking_project_firewall_tag_get/index.json
  /networking/{locationId}/project/{projectId}/firewall/{firewallId}/event:
    get:
      description: List networking/firewall.event
      operationId: networking_project_firewall_event_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Firewall Id
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: number
        style: form
      - description: $skip
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                title: Event collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List networking/firewall.event
      tags:
      - networking_project_firewall
      x-permissions:
      - networking/firewall.event/list
      x-examples:
        $ref: ./docs/networking_project_firewall_event_list/index.json
  /networking/{locationId}/project/{projectId}/firewall/{firewallId}/event/{eventId}:
    get:
      description: Get networking/firewall.event
      operationId: networking_project_firewall_event_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Firewall Id
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: eventId
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get networking/firewall.event
      tags:
      - networking_project_firewall
      x-permissions:
      - networking/firewall.event/get
      x-examples:
        $ref: ./docs/networking_project_firewall_event_get/index.json
  /storage/{locationId}/project/{projectId}/image:
    get:
      description: List image
      operationId: storage_project_image_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.value
        explode: true
        in: query
        name: tag.value
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.key
        explode: true
        in: query
        name: tag.key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/image'
                title: Image collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List storage/image
      tags:
      - storage_project_image
      x-permissions:
      - storage/image/list
    post:
      description: Create image
      operationId: storage_project_image_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage_project_image_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create storage/image
      tags:
      - storage_project_image
      x-permissions:
      - storage/image/create
  /storage/{locationId}/project/{projectId}/image/{imageId}:
    delete:
      description: Delete image
      operationId: storage_project_image_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Image Id
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete storage/image
      tags:
      - storage_project_image
      x-permissions:
      - storage/image/delete
      x-state:
      - Online
    get:
      description: Returns a single image
      operationId: storage_project_image_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Image Id
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get storage/image
      tags:
      - storage_project_image
      x-permissions:
      - storage/image/get
    patch:
      description: Returns modified image
      operationId: storage_project_image_update
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Image Id
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage_project_image_update'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update storage/image
      tags:
      - storage_project_image
  /storage/{locationId}/project/{projectId}/image/{imageId}/actions/transfer:
    post:
      description: action transfer
      operationId: storage_project_image_transfer
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Image Id
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage_project_image_transfer'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Transfer storage/image
      tags:
      - storage_project_image
      x-permissions:
      - storage/image/transfer
      x-state:
      - Online
  /storage/{locationId}/project/{projectId}/image/{imageId}/disk:
    get:
      description: List storage/image.disk
      operationId: storage_project_image_disk_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Image Id
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/disk'
                title: Disk collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List storage/image.disk
      tags:
      - storage_project_image
      x-permissions:
      - storage/image.disk/list
  /storage/{locationId}/project/{projectId}/image/{imageId}/service:
    get:
      description: List storage/image.service
      operationId: storage_project_image_service_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Image Id
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/resourceService'
                title: ResourceService collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List storage/image.service
      tags:
      - storage_project_image
      x-permissions:
      - storage/image.service/list
  /storage/{locationId}/project/{projectId}/image/{imageId}/service/{serviceId}:
    get:
      description: Get storage/image.service
      operationId: storage_project_image_service_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Image Id
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceService'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get storage/image.service
      tags:
      - storage_project_image
      x-permissions:
      - storage/image.service/get
  /storage/{locationId}/project/{projectId}/image/{imageId}/tag:
    get:
      description: List storage/image.tag
      operationId: storage_project_image_tag_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Image Id
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List storage/image.tag
      tags:
      - storage_project_image
      x-permissions:
      - storage/image.tag/list
    post:
      description: Create storage/image.tag
      operationId: storage_project_image_tag_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Image Id
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create storage/image.tag
      tags:
      - storage_project_image
      x-permissions:
      - storage/image.tag/create
    put:
      description: Replace storage/image.tag
      operationId: storage_project_image_tag_put
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Image Id
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag_array'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Replace storage/image.tag
      tags:
      - storage_project_image
      x-permissions:
      - storage/image.tag/create
      - storage/image.tag/delete
  /storage/{locationId}/project/{projectId}/image/{imageId}/tag/{tagId}:
    delete:
      description: Delete storage/image.tag
      operationId: storage_project_image_tag_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Image Id
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete storage/image.tag
      tags:
      - storage_project_image
      x-permissions:
      - storage/image.tag/delete
    get:
      description: Get storage/image.tag
      operationId: storage_project_image_tag_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Image Id
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get storage/image.tag
      tags:
      - storage_project_image
      x-permissions:
      - storage/image.tag/get
  /storage/{locationId}/project/{projectId}/image/{imageId}/event:
    get:
      description: List storage/image.event
      operationId: storage_project_image_event_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Image Id
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: number
        style: form
      - description: $skip
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                title: Event collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List storage/image.event
      tags:
      - storage_project_image
      x-permissions:
      - storage/image.event/list
  /storage/{locationId}/project/{projectId}/image/{imageId}/event/{eventId}:
    get:
      description: Get storage/image.event
      operationId: storage_project_image_event_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Image Id
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: eventId
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get storage/image.event
      tags:
      - storage_project_image
      x-permissions:
      - storage/image.event/get
  /networking/{locationId}/project/{projectId}/ip:
    get:
      description: List ip
      operationId: networking_project_ip_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Filter by network
        explode: true
        in: query
        name: network
        required: false
        schema:
          format: uri
          type: string
          x-resource:
            kind: networking/network
          x-permissions: []
        style: form
      - description: Filter by associated.netadp
        explode: true
        in: query
        name: associated.netadp
        required: false
        schema:
          format: uri
          type: string
          x-resource:
            kind: networking/netadp
          x-permissions: []
        style: form
      - description: Filter by tag.value
        explode: true
        in: query
        name: tag.value
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.key
        explode: true
        in: query
        name: tag.key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ip'
                title: Ip collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List networking/ip
      tags:
      - networking_project_ip
      x-permissions:
      - networking/ip/list
      x-examples:
        $ref: ./docs/networking_project_ip_list/index.json
    post:
      description: Create ip
      operationId: networking_project_ip_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/networking_project_ip_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create networking/ip
      tags:
      - networking_project_ip
      x-permissions:
      - networking/ip/create
      x-examples:
        $ref: ./docs/networking_project_ip_create/index.json
  /networking/{locationId}/project/{projectId}/ip/{ipId}:
    delete:
      description: Delete ip
      operationId: networking_project_ip_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Ip Id
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete networking/ip
      tags:
      - networking_project_ip
      x-permissions:
      - networking/ip/delete
      x-state:
      - Unallocated
      x-examples:
        $ref: ./docs/networking_project_ip_delete/index.json
    get:
      description: Returns a single ip
      operationId: networking_project_ip_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Ip Id
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get networking/ip
      tags:
      - networking_project_ip
      x-permissions:
      - networking/ip/get
      x-examples:
        $ref: ./docs/networking_project_ip_get/index.json
    patch:
      description: Returns modified ip
      operationId: networking_project_ip_update
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Ip Id
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/networking_project_ip_update'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update networking/ip
      tags:
      - networking_project_ip
      x-examples:
        $ref: ./docs/networking_project_ip_update/index.json
  /networking/{locationId}/project/{projectId}/ip/{ipId}/actions/persist:
    post:
      description: action persist
      operationId: networking_project_ip_persist
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Ip Id
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Persist networking/ip
      tags:
      - networking_project_ip
      x-permissions:
      - networking/ip/persist
      x-state:
      - Allocated
  /networking/{locationId}/project/{projectId}/ip/{ipId}/actions/associate:
    post:
      description: action associate
      operationId: networking_project_ip_associate
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Ip Id
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/networking_project_ip_associate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Associate networking/ip
      tags:
      - networking_project_ip
      x-permissions:
      - networking/ip/associate
      x-state:
      - Unallocated
  /networking/{locationId}/project/{projectId}/ip/{ipId}/actions/disassociate:
    post:
      description: action disassociate
      operationId: networking_project_ip_disassociate
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Ip Id
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Disassociate networking/ip
      tags:
      - networking_project_ip
      x-permissions:
      - networking/ip/disassociate
      x-state:
      - Associated
  /networking/{locationId}/project/{projectId}/ip/{ipId}/actions/transfer:
    post:
      description: action transfer
      operationId: networking_project_ip_transfer
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Ip Id
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/networking_project_ip_transfer'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Transfer networking/ip
      tags:
      - networking_project_ip
      x-permissions:
      - networking/ip/transfer
      x-state:
      - Detached
  /networking/{locationId}/project/{projectId}/ip/{ipId}/service:
    get:
      description: List networking/ip.service
      operationId: networking_project_ip_service_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Ip Id
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/resourceService'
                title: ResourceService collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List networking/ip.service
      tags:
      - networking_project_ip
      x-permissions:
      - networking/ip.service/list
      x-examples:
        $ref: ./docs/networking_project_ip_service_list/index.json
  /networking/{locationId}/project/{projectId}/ip/{ipId}/service/{serviceId}:
    get:
      description: Get networking/ip.service
      operationId: networking_project_ip_service_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Ip Id
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceService'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get networking/ip.service
      tags:
      - networking_project_ip
      x-permissions:
      - networking/ip.service/get
      x-examples:
        $ref: ./docs/networking_project_ip_service_get/index.json
  /networking/{locationId}/project/{projectId}/ip/{ipId}/tag:
    get:
      description: List networking/ip.tag
      operationId: networking_project_ip_tag_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Ip Id
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List networking/ip.tag
      tags:
      - networking_project_ip
      x-permissions:
      - networking/ip.tag/list
      x-examples:
        $ref: ./docs/networking_project_ip_tag_list/index.json
    post:
      description: Create networking/ip.tag
      operationId: networking_project_ip_tag_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Ip Id
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create networking/ip.tag
      tags:
      - networking_project_ip
      x-permissions:
      - networking/ip.tag/create
      x-examples:
        $ref: ./docs/networking_project_ip_tag_create/index.json
    put:
      description: Replace networking/ip.tag
      operationId: networking_project_ip_tag_put
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Ip Id
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag_array'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Replace networking/ip.tag
      tags:
      - networking_project_ip
      x-permissions:
      - networking/ip.tag/create
      - networking/ip.tag/delete
  /networking/{locationId}/project/{projectId}/ip/{ipId}/tag/{tagId}:
    delete:
      description: Delete networking/ip.tag
      operationId: networking_project_ip_tag_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Ip Id
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete networking/ip.tag
      tags:
      - networking_project_ip
      x-permissions:
      - networking/ip.tag/delete
      x-examples:
        $ref: ./docs/networking_project_ip_tag_delete/index.json
    get:
      description: Get networking/ip.tag
      operationId: networking_project_ip_tag_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Ip Id
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get networking/ip.tag
      tags:
      - networking_project_ip
      x-permissions:
      - networking/ip.tag/get
      x-examples:
        $ref: ./docs/networking_project_ip_tag_get/index.json
  /networking/{locationId}/project/{projectId}/ip/{ipId}/event:
    get:
      description: List networking/ip.event
      operationId: networking_project_ip_event_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Ip Id
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: number
        style: form
      - description: $skip
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                title: Event collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List networking/ip.event
      tags:
      - networking_project_ip
      x-permissions:
      - networking/ip.event/list
      x-examples:
        $ref: ./docs/networking_project_ip_event_list/index.json
  /networking/{locationId}/project/{projectId}/ip/{ipId}/event/{eventId}:
    get:
      description: Get networking/ip.event
      operationId: networking_project_ip_event_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Ip Id
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: eventId
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get networking/ip.event
      tags:
      - networking_project_ip
      x-permissions:
      - networking/ip.event/get
      x-examples:
        $ref: ./docs/networking_project_ip_event_get/index.json
  /storage/{locationId}/project/{projectId}/iso:
    get:
      description: List iso
      operationId: storage_project_iso_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.value
        explode: true
        in: query
        name: tag.value
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.key
        explode: true
        in: query
        name: tag.key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/iso'
                title: Iso collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List storage/iso
      tags:
      - storage_project_iso
      x-permissions:
      - storage/iso/list
      x-examples:
        $ref: ./docs/storage_project_iso_list/index.json
    post:
      description: Create iso
      operationId: storage_project_iso_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage_project_iso_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iso'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iso'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create storage/iso
      tags:
      - storage_project_iso
      x-permissions:
      - storage/iso/create
      x-examples:
        $ref: ./docs/storage_project_iso_create/index.json
  /storage/{locationId}/project/{projectId}/iso/{isoId}:
    delete:
      description: Delete iso
      operationId: storage_project_iso_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Iso Id
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete storage/iso
      tags:
      - storage_project_iso
      x-permissions:
      - storage/iso/delete
      x-state:
      - Online
      x-examples:
        $ref: ./docs/storage_project_iso_delete/index.json
    get:
      description: Returns a single iso
      operationId: storage_project_iso_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Iso Id
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iso'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get storage/iso
      tags:
      - storage_project_iso
      x-permissions:
      - storage/iso/get
      x-examples:
        $ref: ./docs/storage_project_iso_get/index.json
    patch:
      description: Returns modified iso
      operationId: storage_project_iso_update
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Iso Id
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage_project_iso_update'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iso'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update storage/iso
      tags:
      - storage_project_iso
      x-examples:
        $ref: ./docs/storage_project_iso_update/index.json
  /storage/{locationId}/project/{projectId}/iso/{isoId}/actions/detach:
    post:
      description: action detach
      operationId: storage_project_iso_detach
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Iso Id
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage_project_iso_detach'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iso'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iso'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Detach storage/iso
      tags:
      - storage_project_iso
      x-permissions:
      - storage/iso/detach
      x-state:
      - Online
  /storage/{locationId}/project/{projectId}/iso/{isoId}/actions/transfer:
    post:
      description: action transfer
      operationId: storage_project_iso_transfer
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Iso Id
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage_project_iso_transfer'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iso'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iso'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Transfer storage/iso
      tags:
      - storage_project_iso
      x-permissions:
      - storage/iso/transfer
      x-state:
      - Online
  /storage/{locationId}/project/{projectId}/iso/{isoId}/service:
    get:
      description: List storage/iso.service
      operationId: storage_project_iso_service_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Iso Id
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/resourceService'
                title: ResourceService collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List storage/iso.service
      tags:
      - storage_project_iso
      x-permissions:
      - storage/iso.service/list
      x-examples:
        $ref: ./docs/storage_project_iso_service_list/index.json
  /storage/{locationId}/project/{projectId}/iso/{isoId}/service/{serviceId}:
    get:
      description: Get storage/iso.service
      operationId: storage_project_iso_service_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Iso Id
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceService'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get storage/iso.service
      tags:
      - storage_project_iso
      x-permissions:
      - storage/iso.service/get
      x-examples:
        $ref: ./docs/storage_project_iso_service_get/index.json
  /storage/{locationId}/project/{projectId}/iso/{isoId}/tag:
    get:
      description: List storage/iso.tag
      operationId: storage_project_iso_tag_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Iso Id
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List storage/iso.tag
      tags:
      - storage_project_iso
      x-permissions:
      - storage/iso.tag/list
      x-examples:
        $ref: ./docs/storage_project_iso_tag_list/index.json
    post:
      description: Create storage/iso.tag
      operationId: storage_project_iso_tag_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Iso Id
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create storage/iso.tag
      tags:
      - storage_project_iso
      x-permissions:
      - storage/iso.tag/create
      x-examples:
        $ref: ./docs/storage_project_iso_tag_create/index.json
    put:
      description: Replace storage/iso.tag
      operationId: storage_project_iso_tag_put
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Iso Id
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag_array'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Replace storage/iso.tag
      tags:
      - storage_project_iso
      x-permissions:
      - storage/iso.tag/create
      - storage/iso.tag/delete
  /storage/{locationId}/project/{projectId}/iso/{isoId}/tag/{tagId}:
    delete:
      description: Delete storage/iso.tag
      operationId: storage_project_iso_tag_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Iso Id
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete storage/iso.tag
      tags:
      - storage_project_iso
      x-permissions:
      - storage/iso.tag/delete
      x-examples:
        $ref: ./docs/storage_project_iso_tag_delete/index.json
    get:
      description: Get storage/iso.tag
      operationId: storage_project_iso_tag_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Iso Id
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get storage/iso.tag
      tags:
      - storage_project_iso
      x-permissions:
      - storage/iso.tag/get
      x-examples:
        $ref: ./docs/storage_project_iso_tag_get/index.json
  /storage/{locationId}/project/{projectId}/iso/{isoId}/event:
    get:
      description: List storage/iso.event
      operationId: storage_project_iso_event_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Iso Id
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: number
        style: form
      - description: $skip
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                title: Event collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List storage/iso.event
      tags:
      - storage_project_iso
      x-permissions:
      - storage/iso.event/list
      x-examples:
        $ref: ./docs/storage_project_iso_event_list/index.json
  /storage/{locationId}/project/{projectId}/iso/{isoId}/event/{eventId}:
    get:
      description: Get storage/iso.event
      operationId: storage_project_iso_event_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Iso Id
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: eventId
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get storage/iso.event
      tags:
      - storage_project_iso
      x-permissions:
      - storage/iso.event/get
      x-examples:
        $ref: ./docs/storage_project_iso_event_get/index.json
  /networking/{locationId}/project/{projectId}/netadp:
    get:
      description: List netadp
      operationId: networking_project_netadp_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Filter by assigned.resource
        explode: true
        in: query
        name: assigned.resource
        required: false
        schema:
          type: string
        style: form
      - description: Filter by assigned.id
        explode: true
        in: query
        name: assigned.id
        required: false
        schema:
          type: string
        style: form
      - description: Filter by network
        explode: true
        in: query
        name: network
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.value
        explode: true
        in: query
        name: tag.value
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.key
        explode: true
        in: query
        name: tag.key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/netadp'
                title: Netadp collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List networking/netadp
      tags:
      - networking_project_netadp
      x-permissions:
      - networking/netadp/list
    post:
      description: Create netadp
      operationId: networking_project_netadp_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/networking_project_netadp_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netadp'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netadp'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create networking/netadp
      tags:
      - networking_project_netadp
      x-permissions:
      - networking/netadp/create
  /networking/{locationId}/project/{projectId}/netadp/{netadpId}:
    delete:
      description: Delete netadp
      operationId: networking_project_netadp_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Netadp Id
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete networking/netadp
      tags:
      - networking_project_netadp
      x-permissions:
      - networking/netadp/delete
      x-state:
      - Online
    get:
      description: Returns a single netadp
      operationId: networking_project_netadp_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Netadp Id
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netadp'
          description: successful operation
          links:
            ip:
              operationId: networking_project_ip_list
              parameters:
                associated.netadp: $request.path.netadpId
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get networking/netadp
      tags:
      - networking_project_netadp
      x-permissions:
      - networking/netadp/get
    patch:
      description: Returns modified netadp
      operationId: networking_project_netadp_update
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Netadp Id
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/networking_project_netadp_update'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netadp'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update networking/netadp
      tags:
      - networking_project_netadp
  /networking/{locationId}/project/{projectId}/netadp/{netadpId}/metric:
    get:
      description: List networking/netadp.metric
      operationId: networking_project_netadp_metric_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Netadp Id
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/metric'
                title: Metric collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List networking/netadp.metric
      tags:
      - networking_project_netadp
      x-permissions:
      - networking/netadp.metric/list
  /networking/{locationId}/project/{projectId}/netadp/{netadpId}/metric/{metricId}:
    get:
      description: Get networking/netadp.metric
      operationId: networking_project_netadp_metric_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Netadp Id
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: metricId
        explode: false
        in: path
        name: metricId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/metric'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get networking/netadp.metric
      tags:
      - networking_project_netadp
      x-permissions:
      - networking/netadp.metric/get
  /networking/{locationId}/project/{projectId}/netadp/{netadpId}/metric/{metricId}/point:
    get:
      description: List networking/netadp.point
      operationId: networking_project_netadp_metric_point_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Netadp Id
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: metricId
        explode: false
        in: path
        name: metricId
        required: true
        schema:
          type: string
        style: simple
      - description: interval
        explode: true
        in: query
        name: interval
        required: false
        schema:
          type: string
        style: form
      - description: timespan
        explode: true
        in: query
        name: timespan
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/serie'
                title: Serie collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List networking/netadp.point
      tags:
      - networking_project_netadp
      x-permissions:
      - networking/netadp.point/list
  /networking/{locationId}/project/{projectId}/netadp/{netadpId}/service:
    get:
      description: List networking/netadp.service
      operationId: networking_project_netadp_service_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Netadp Id
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/resourceService'
                title: ResourceService collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List networking/netadp.service
      tags:
      - networking_project_netadp
      x-permissions:
      - networking/netadp.service/list
  /networking/{locationId}/project/{projectId}/netadp/{netadpId}/service/{serviceId}:
    get:
      description: Get networking/netadp.service
      operationId: networking_project_netadp_service_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Netadp Id
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceService'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get networking/netadp.service
      tags:
      - networking_project_netadp
      x-permissions:
      - networking/netadp.service/get
  /networking/{locationId}/project/{projectId}/netadp/{netadpId}/tag:
    get:
      description: List networking/netadp.tag
      operationId: networking_project_netadp_tag_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Netadp Id
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List networking/netadp.tag
      tags:
      - networking_project_netadp
      x-permissions:
      - networking/netadp.tag/list
    post:
      description: Create networking/netadp.tag
      operationId: networking_project_netadp_tag_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Netadp Id
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create networking/netadp.tag
      tags:
      - networking_project_netadp
      x-permissions:
      - networking/netadp.tag/create
    put:
      description: Replace networking/netadp.tag
      operationId: networking_project_netadp_tag_put
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Netadp Id
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag_array'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Replace networking/netadp.tag
      tags:
      - networking_project_netadp
      x-permissions:
      - networking/netadp.tag/create
      - networking/netadp.tag/delete
  /networking/{locationId}/project/{projectId}/netadp/{netadpId}/tag/{tagId}:
    delete:
      description: Delete networking/netadp.tag
      operationId: networking_project_netadp_tag_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Netadp Id
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete networking/netadp.tag
      tags:
      - networking_project_netadp
      x-permissions:
      - networking/netadp.tag/delete
    get:
      description: Get networking/netadp.tag
      operationId: networking_project_netadp_tag_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Netadp Id
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get networking/netadp.tag
      tags:
      - networking_project_netadp
      x-permissions:
      - networking/netadp.tag/get
  /networking/{locationId}/project/{projectId}/netadp/{netadpId}/event:
    get:
      description: List networking/netadp.event
      operationId: networking_project_netadp_event_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Netadp Id
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: number
        style: form
      - description: $skip
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                title: Event collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List networking/netadp.event
      tags:
      - networking_project_netadp
      x-permissions:
      - networking/netadp.event/list
  /networking/{locationId}/project/{projectId}/netadp/{netadpId}/event/{eventId}:
    get:
      description: Get networking/netadp.event
      operationId: networking_project_netadp_event_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Netadp Id
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: eventId
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get networking/netadp.event
      tags:
      - networking_project_netadp
      x-permissions:
      - networking/netadp.event/get
  /networking/{locationId}/project/{projectId}/netgw:
    get:
      description: List netgw
      operationId: networking_project_netgw_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.value
        explode: true
        in: query
        name: tag.value
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.key
        explode: true
        in: query
        name: tag.key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/netgw'
                title: Netgw collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List networking/netgw
      tags:
      - networking_project_netgw
      x-permissions:
      - networking/netgw/list
      x-examples:
        $ref: ./docs/networking_project_netgw_list/index.json
    post:
      description: Create netgw
      operationId: networking_project_netgw_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/networking_project_netgw_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create networking/netgw
      tags:
      - networking_project_netgw
      x-permissions:
      - networking/netgw/create
      x-examples:
        $ref: ./docs/networking_project_netgw_create/index.json
  /networking/{locationId}/project/{projectId}/netgw/{netgwId}:
    delete:
      description: Delete netgw
      operationId: networking_project_netgw_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Netgw Id
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete networking/netgw
      tags:
      - networking_project_netgw
      x-permissions:
      - networking/netgw/delete
      x-state:
      - Detached
      x-examples:
        $ref: ./docs/networking_project_netgw_delete/index.json
    get:
      description: Returns a single netgw
      operationId: networking_project_netgw_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Netgw Id
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get networking/netgw
      tags:
      - networking_project_netgw
      x-permissions:
      - networking/netgw/get
      x-examples:
        $ref: ./docs/networking_project_netgw_get/index.json
    patch:
      description: Returns modified netgw
      operationId: networking_project_netgw_update
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Netgw Id
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/networking_project_netgw_update'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update networking/netgw
      tags:
      - networking_project_netgw
      x-examples:
        $ref: ./docs/networking_project_netgw_update/index.json
  /networking/{locationId}/project/{projectId}/netgw/{netgwId}/actions/attach:
    post:
      description: action attach
      operationId: networking_project_netgw_attach
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Netgw Id
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/networking_project_netgw_attach'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Attach networking/netgw
      tags:
      - networking_project_netgw
      x-permissions:
      - networking/netgw/attach
      x-state:
      - Detached
  /networking/{locationId}/project/{projectId}/netgw/{netgwId}/actions/detach:
    post:
      description: action detach
      operationId: networking_project_netgw_detach
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Netgw Id
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Detach networking/netgw
      tags:
      - networking_project_netgw
      x-permissions:
      - networking/netgw/detach
      x-state:
      - Attached
  /networking/{locationId}/project/{projectId}/netgw/{netgwId}/service:
    get:
      description: List networking/netgw.service
      operationId: networking_project_netgw_service_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Netgw Id
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/resourceService'
                title: ResourceService collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List networking/netgw.service
      tags:
      - networking_project_netgw
      x-permissions:
      - networking/netgw.service/list
      x-examples:
        $ref: ./docs/networking_project_netgw_service_list/index.json
  /networking/{locationId}/project/{projectId}/netgw/{netgwId}/service/{serviceId}:
    get:
      description: Get networking/netgw.service
      operationId: networking_project_netgw_service_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Netgw Id
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceService'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get networking/netgw.service
      tags:
      - networking_project_netgw
      x-permissions:
      - networking/netgw.service/get
      x-examples:
        $ref: ./docs/networking_project_netgw_service_get/index.json
  /networking/{locationId}/project/{projectId}/netgw/{netgwId}/tag:
    get:
      description: List networking/netgw.tag
      operationId: networking_project_netgw_tag_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Netgw Id
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List networking/netgw.tag
      tags:
      - networking_project_netgw
      x-permissions:
      - networking/netgw.tag/list
      x-examples:
        $ref: ./docs/networking_project_netgw_tag_list/index.json
    post:
      description: Create networking/netgw.tag
      operationId: networking_project_netgw_tag_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Netgw Id
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create networking/netgw.tag
      tags:
      - networking_project_netgw
      x-permissions:
      - networking/netgw.tag/create
      x-examples:
        $ref: ./docs/networking_project_netgw_tag_create/index.json
    put:
      description: Replace networking/netgw.tag
      operationId: networking_project_netgw_tag_put
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Netgw Id
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag_array'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Replace networking/netgw.tag
      tags:
      - networking_project_netgw
      x-permissions:
      - networking/netgw.tag/create
      - networking/netgw.tag/delete
  /networking/{locationId}/project/{projectId}/netgw/{netgwId}/tag/{tagId}:
    delete:
      description: Delete networking/netgw.tag
      operationId: networking_project_netgw_tag_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Netgw Id
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete networking/netgw.tag
      tags:
      - networking_project_netgw
      x-permissions:
      - networking/netgw.tag/delete
      x-examples:
        $ref: ./docs/networking_project_netgw_tag_delete/index.json
    get:
      description: Get networking/netgw.tag
      operationId: networking_project_netgw_tag_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Netgw Id
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get networking/netgw.tag
      tags:
      - networking_project_netgw
      x-permissions:
      - networking/netgw.tag/get
      x-examples:
        $ref: ./docs/networking_project_netgw_tag_get/index.json
  /networking/{locationId}/project/{projectId}/netgw/{netgwId}/event:
    get:
      description: List networking/netgw.event
      operationId: networking_project_netgw_event_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Netgw Id
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: number
        style: form
      - description: $skip
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                title: Event collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List networking/netgw.event
      tags:
      - networking_project_netgw
      x-permissions:
      - networking/netgw.event/list
      x-examples:
        $ref: ./docs/networking_project_netgw_event_list/index.json
  /networking/{locationId}/project/{projectId}/netgw/{netgwId}/event/{eventId}:
    get:
      description: Get networking/netgw.event
      operationId: networking_project_netgw_event_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Netgw Id
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: eventId
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get networking/netgw.event
      tags:
      - networking_project_netgw
      x-permissions:
      - networking/netgw.event/get
      x-examples:
        $ref: ./docs/networking_project_netgw_event_get/index.json
  /networking/{locationId}/project/{projectId}/network:
    get:
      description: List network
      operationId: networking_project_network_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.value
        explode: true
        in: query
        name: tag.value
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.key
        explode: true
        in: query
        name: tag.key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/network'
                title: Network collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List networking/network
      tags:
      - networking_project_network
      x-permissions:
      - networking/network/list
      x-examples:
        $ref: ./docs/networking_project_network_list/index.json
    post:
      description: Create network
      operationId: networking_project_network_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/networking_project_network_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create networking/network
      tags:
      - networking_project_network
      x-permissions:
      - networking/network/create
      x-examples:
        $ref: ./docs/networking_project_network_create/index.json
  /networking/{locationId}/project/{projectId}/network/{networkId}:
    delete:
      description: Delete network
      operationId: networking_project_network_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Network Id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete networking/network
      tags:
      - networking_project_network
      x-permissions:
      - networking/network/delete
      x-state:
      - Online
      x-examples:
        $ref: ./docs/networking_project_network_delete/index.json
    get:
      description: Returns a single network
      operationId: networking_project_network_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Network Id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network'
          description: successful operation
          links:
            ip:
              operationId: networking_project_ip_list
              parameters:
                network: $request.path.networkId
            netadp:
              operationId: networking_project_netadp_list
              parameters:
                network: $request.path.networkId
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get networking/network
      tags:
      - networking_project_network
      x-permissions:
      - networking/network/get
      x-examples:
        $ref: ./docs/networking_project_network_get/index.json
    patch:
      description: Returns modified network
      operationId: networking_project_network_update
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Network Id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/networking_project_network_update'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update networking/network
      tags:
      - networking_project_network
      x-examples:
        $ref: ./docs/networking_project_network_update/index.json
  /networking/{locationId}/project/{projectId}/network/{networkId}/service:
    get:
      description: List networking/network.service
      operationId: networking_project_network_service_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Network Id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/resourceService'
                title: ResourceService collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List networking/network.service
      tags:
      - networking_project_network
      x-permissions:
      - networking/network.service/list
      x-examples:
        $ref: ./docs/networking_project_network_service_list/index.json
  /networking/{locationId}/project/{projectId}/network/{networkId}/service/{serviceId}:
    get:
      description: Get networking/network.service
      operationId: networking_project_network_service_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Network Id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceService'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get networking/network.service
      tags:
      - networking_project_network
      x-permissions:
      - networking/network.service/get
      x-examples:
        $ref: ./docs/networking_project_network_service_get/index.json
  /networking/{locationId}/project/{projectId}/network/{networkId}/tag:
    get:
      description: List networking/network.tag
      operationId: networking_project_network_tag_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Network Id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List networking/network.tag
      tags:
      - networking_project_network
      x-permissions:
      - networking/network.tag/list
      x-examples:
        $ref: ./docs/networking_project_network_tag_list/index.json
    post:
      description: Create networking/network.tag
      operationId: networking_project_network_tag_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Network Id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create networking/network.tag
      tags:
      - networking_project_network
      x-permissions:
      - networking/network.tag/create
      x-examples:
        $ref: ./docs/networking_project_network_tag_create/index.json
    put:
      description: Replace networking/network.tag
      operationId: networking_project_network_tag_put
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Network Id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag_array'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Replace networking/network.tag
      tags:
      - networking_project_network
      x-permissions:
      - networking/network.tag/create
      - networking/network.tag/delete
  /networking/{locationId}/project/{projectId}/network/{networkId}/tag/{tagId}:
    delete:
      description: Delete networking/network.tag
      operationId: networking_project_network_tag_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Network Id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete networking/network.tag
      tags:
      - networking_project_network
      x-permissions:
      - networking/network.tag/delete
      x-examples:
        $ref: ./docs/networking_project_network_tag_delete/index.json
    get:
      description: Get networking/network.tag
      operationId: networking_project_network_tag_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Network Id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get networking/network.tag
      tags:
      - networking_project_network
      x-permissions:
      - networking/network.tag/get
      x-examples:
        $ref: ./docs/networking_project_network_tag_get/index.json
  /networking/{locationId}/project/{projectId}/network/{networkId}/event:
    get:
      description: List networking/network.event
      operationId: networking_project_network_event_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Network Id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: number
        style: form
      - description: $skip
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                title: Event collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List networking/network.event
      tags:
      - networking_project_network
      x-permissions:
      - networking/network.event/list
      x-examples:
        $ref: ./docs/networking_project_network_event_list/index.json
  /networking/{locationId}/project/{projectId}/network/{networkId}/event/{eventId}:
    get:
      description: Get networking/network.event
      operationId: networking_project_network_event_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Network Id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: eventId
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get networking/network.event
      tags:
      - networking_project_network
      x-permissions:
      - networking/network.event/get
      x-examples:
        $ref: ./docs/networking_project_network_event_get/index.json
  /iam/project/{projectId}/policy:
    get:
      description: List policy
      operationId: iam_project_policy_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.value
        explode: true
        in: query
        name: tag.value
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.key
        explode: true
        in: query
        name: tag.key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/policy'
                title: Policy collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/policy
      tags:
      - iam_project_policy
      x-permissions:
      - iam/policy/list
    post:
      description: Create policy
      operationId: iam_project_policy_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam_project_policy_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/policy'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/policy'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create iam/policy
      tags:
      - iam_project_policy
      x-permissions:
      - iam/policy/create
  /iam/organisation/{organisationId}/policy:
    get:
      description: List policy
      operationId: iam_organisation_policy_list
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.value
        explode: true
        in: query
        name: tag.value
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.key
        explode: true
        in: query
        name: tag.key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/policy'
                title: Policy collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/policy
      tags:
      - iam_organisation_policy
      x-permissions:
      - iam/policy/list
    post:
      description: Create policy
      operationId: iam_organisation_policy_create
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam_project_policy_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/policy'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/policy'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create iam/policy
      tags:
      - iam_organisation_policy
      x-permissions:
      - iam/policy/create
  /iam/project/{projectId}/policy/{policyId}:
    delete:
      description: Delete policy
      operationId: iam_project_policy_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Policy Id
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete iam/policy
      tags:
      - iam_project_policy
      x-permissions:
      - iam/policy/delete
      x-state:
      - Online
    get:
      description: Returns a single policy
      operationId: iam_project_policy_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Policy Id
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/policy'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/policy
      tags:
      - iam_project_policy
      x-permissions:
      - iam/policy/get
    patch:
      description: Returns modified policy
      operationId: iam_project_policy_update
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Policy Id
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam_project_policy_update'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/policy'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update iam/policy
      tags:
      - iam_project_policy
  /iam/organisation/{organisationId}/policy/{policyId}:
    delete:
      description: Delete policy
      operationId: iam_organisation_policy_delete
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Policy Id
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete iam/policy
      tags:
      - iam_organisation_policy
      x-permissions:
      - iam/policy/delete
      x-state:
      - Online
    get:
      description: Returns a single policy
      operationId: iam_organisation_policy_get
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Policy Id
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/policy'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/policy
      tags:
      - iam_organisation_policy
      x-permissions:
      - iam/policy/get
    patch:
      description: Returns modified policy
      operationId: iam_organisation_policy_update
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Policy Id
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam_project_policy_update'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/policy'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update iam/policy
      tags:
      - iam_organisation_policy
  /iam/project/{projectId}/policy/{policyId}/actor:
    get:
      description: List iam/policy.actor
      operationId: iam_project_policy_actor_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Policy Id
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/iam.actor'
                title: Iam.actor collection
                type: array
          description: successful operation
          links:
            invitation:
              operationId: iam_project_invitation_list
              parameters:
                resource: $path
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/policy.actor
      tags:
      - iam_project_policy
      x-permissions:
      - iam/policy.actor/list
    post:
      description: Create iam/policy.actor
      operationId: iam_project_policy_actor_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Policy Id
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam.actor'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam.actor'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create iam/policy.actor
      tags:
      - iam_project_policy
      x-permissions:
      - iam/policy.actor/create
  /iam/organisation/{organisationId}/policy/{policyId}/actor:
    get:
      description: List iam/policy.actor
      operationId: iam_organisation_policy_actor_list
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Policy Id
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/iam.actor'
                title: Iam.actor collection
                type: array
          description: successful operation
          links:
            invitation:
              operationId: iam_organisation_invitation_list
              parameters:
                resource: $path
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/policy.actor
      tags:
      - iam_organisation_policy
      x-permissions:
      - iam/policy.actor/list
    post:
      description: Create iam/policy.actor
      operationId: iam_organisation_policy_actor_create
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Policy Id
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam.actor'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam.actor'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create iam/policy.actor
      tags:
      - iam_organisation_policy
      x-permissions:
      - iam/policy.actor/create
  /iam/project/{projectId}/policy/{policyId}/actor/{actorId}:
    delete:
      description: Delete iam/policy.actor
      operationId: iam_project_policy_actor_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Policy Id
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: actorId
        explode: false
        in: path
        name: actorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam.actor'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete iam/policy.actor
      tags:
      - iam_project_policy
      x-permissions:
      - iam/policy.actor/delete
    get:
      description: Get iam/policy.actor
      operationId: iam_project_policy_actor_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Policy Id
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: actorId
        explode: false
        in: path
        name: actorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam.actor'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/policy.actor
      tags:
      - iam_project_policy
      x-permissions:
      - iam/policy.actor/get
  /iam/organisation/{organisationId}/policy/{policyId}/actor/{actorId}:
    delete:
      description: Delete iam/policy.actor
      operationId: iam_organisation_policy_actor_delete
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Policy Id
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: actorId
        explode: false
        in: path
        name: actorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam.actor'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete iam/policy.actor
      tags:
      - iam_organisation_policy
      x-permissions:
      - iam/policy.actor/delete
    get:
      description: Get iam/policy.actor
      operationId: iam_organisation_policy_actor_get
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Policy Id
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: actorId
        explode: false
        in: path
        name: actorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam.actor'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/policy.actor
      tags:
      - iam_organisation_policy
      x-permissions:
      - iam/policy.actor/get
  /iam/project/{projectId}/policy/{policyId}/service:
    get:
      description: List iam/policy.service
      operationId: iam_project_policy_service_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Policy Id
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/resourceService'
                title: ResourceService collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/policy.service
      tags:
      - iam_project_policy
      x-permissions:
      - iam/policy.service/list
  /iam/organisation/{organisationId}/policy/{policyId}/service:
    get:
      description: List iam/policy.service
      operationId: iam_organisation_policy_service_list
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Policy Id
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/resourceService'
                title: ResourceService collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/policy.service
      tags:
      - iam_organisation_policy
      x-permissions:
      - iam/policy.service/list
  /iam/project/{projectId}/policy/{policyId}/service/{serviceId}:
    get:
      description: Get iam/policy.service
      operationId: iam_project_policy_service_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Policy Id
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceService'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/policy.service
      tags:
      - iam_project_policy
      x-permissions:
      - iam/policy.service/get
  /iam/organisation/{organisationId}/policy/{policyId}/service/{serviceId}:
    get:
      description: Get iam/policy.service
      operationId: iam_organisation_policy_service_get
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Policy Id
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceService'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/policy.service
      tags:
      - iam_organisation_policy
      x-permissions:
      - iam/policy.service/get
  /iam/project/{projectId}/policy/{policyId}/tag:
    get:
      description: List iam/policy.tag
      operationId: iam_project_policy_tag_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Policy Id
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/policy.tag
      tags:
      - iam_project_policy
      x-permissions:
      - iam/policy.tag/list
    post:
      description: Create iam/policy.tag
      operationId: iam_project_policy_tag_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Policy Id
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create iam/policy.tag
      tags:
      - iam_project_policy
      x-permissions:
      - iam/policy.tag/create
    put:
      description: Replace iam/policy.tag
      operationId: iam_project_policy_tag_put
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Policy Id
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag_array'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Replace iam/policy.tag
      tags:
      - iam_project_policy
      x-permissions:
      - iam/policy.tag/create
      - iam/policy.tag/delete
  /iam/organisation/{organisationId}/policy/{policyId}/tag:
    get:
      description: List iam/policy.tag
      operationId: iam_organisation_policy_tag_list
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Policy Id
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/policy.tag
      tags:
      - iam_organisation_policy
      x-permissions:
      - iam/policy.tag/list
    post:
      description: Create iam/policy.tag
      operationId: iam_organisation_policy_tag_create
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Policy Id
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create iam/policy.tag
      tags:
      - iam_organisation_policy
      x-permissions:
      - iam/policy.tag/create
    put:
      description: Replace iam/policy.tag
      operationId: iam_organisation_policy_tag_put
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Policy Id
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag_array'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Replace iam/policy.tag
      tags:
      - iam_organisation_policy
      x-permissions:
      - iam/policy.tag/create
      - iam/policy.tag/delete
  /iam/project/{projectId}/policy/{policyId}/tag/{tagId}:
    delete:
      description: Delete iam/policy.tag
      operationId: iam_project_policy_tag_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Policy Id
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete iam/policy.tag
      tags:
      - iam_project_policy
      x-permissions:
      - iam/policy.tag/delete
    get:
      description: Get iam/policy.tag
      operationId: iam_project_policy_tag_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Policy Id
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/policy.tag
      tags:
      - iam_project_policy
      x-permissions:
      - iam/policy.tag/get
  /iam/organisation/{organisationId}/policy/{policyId}/tag/{tagId}:
    delete:
      description: Delete iam/policy.tag
      operationId: iam_organisation_policy_tag_delete
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Policy Id
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete iam/policy.tag
      tags:
      - iam_organisation_policy
      x-permissions:
      - iam/policy.tag/delete
    get:
      description: Get iam/policy.tag
      operationId: iam_organisation_policy_tag_get
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Policy Id
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/policy.tag
      tags:
      - iam_organisation_policy
      x-permissions:
      - iam/policy.tag/get
  /iam/project/{projectId}/policy/{policyId}/event:
    get:
      description: List iam/policy.event
      operationId: iam_project_policy_event_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Policy Id
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: number
        style: form
      - description: $skip
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                title: Event collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/policy.event
      tags:
      - iam_project_policy
      x-permissions:
      - iam/policy.event/list
  /iam/organisation/{organisationId}/policy/{policyId}/event:
    get:
      description: List iam/policy.event
      operationId: iam_organisation_policy_event_list
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Policy Id
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: number
        style: form
      - description: $skip
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                title: Event collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/policy.event
      tags:
      - iam_organisation_policy
      x-permissions:
      - iam/policy.event/list
  /iam/project/{projectId}/policy/{policyId}/event/{eventId}:
    get:
      description: Get iam/policy.event
      operationId: iam_project_policy_event_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Policy Id
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: eventId
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/policy.event
      tags:
      - iam_project_policy
      x-permissions:
      - iam/policy.event/get
  /iam/organisation/{organisationId}/policy/{policyId}/event/{eventId}:
    get:
      description: Get iam/policy.event
      operationId: iam_organisation_policy_event_get
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Policy Id
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: eventId
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/policy.event
      tags:
      - iam_organisation_policy
      x-permissions:
      - iam/policy.event/get
  /compute/{locationId}/project/{projectId}/replica:
    get:
      description: List replica
      operationId: compute_project_replica_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/replica'
                title: Replica collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List compute/replica
      tags:
      - compute_project_replica
      x-permissions:
      - compute/replica/list
    post:
      description: Create replica
      operationId: compute_project_replica_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/compute_project_replica_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replica'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replica'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create compute/replica
      tags:
      - compute_project_replica
      x-permissions:
      - compute/replica/create
      x-audience: developer
  /compute/{locationId}/project/{projectId}/replica/{replicaId}:
    delete:
      description: Delete replica
      operationId: compute_project_replica_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Replica Id
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete compute/replica
      tags:
      - compute_project_replica
      x-permissions:
      - compute/replica/delete
      x-state:
      - Online
    get:
      description: Returns a single replica
      operationId: compute_project_replica_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Replica Id
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replica'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get compute/replica
      tags:
      - compute_project_replica
      x-permissions:
      - compute/replica/get
  /compute/{locationId}/project/{projectId}/replica/{replicaId}/service:
    get:
      description: List compute/replica.service
      operationId: compute_project_replica_service_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Replica Id
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/resourceService'
                title: ResourceService collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List compute/replica.service
      tags:
      - compute_project_replica
      x-permissions:
      - compute/replica.service/list
  /compute/{locationId}/project/{projectId}/replica/{replicaId}/service/{serviceId}:
    get:
      description: Get compute/replica.service
      operationId: compute_project_replica_service_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Replica Id
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceService'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get compute/replica.service
      tags:
      - compute_project_replica
      x-permissions:
      - compute/replica.service/get
  /compute/{locationId}/project/{projectId}/replica/{replicaId}/tag:
    get:
      description: List compute/replica.tag
      operationId: compute_project_replica_tag_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Replica Id
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List compute/replica.tag
      tags:
      - compute_project_replica
      x-permissions:
      - compute/replica.tag/list
    post:
      description: Create compute/replica.tag
      operationId: compute_project_replica_tag_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Replica Id
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create compute/replica.tag
      tags:
      - compute_project_replica
      x-permissions:
      - compute/replica.tag/create
    put:
      description: Replace compute/replica.tag
      operationId: compute_project_replica_tag_put
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Replica Id
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag_array'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Replace compute/replica.tag
      tags:
      - compute_project_replica
      x-permissions:
      - compute/replica.tag/create
      - compute/replica.tag/delete
  /compute/{locationId}/project/{projectId}/replica/{replicaId}/tag/{tagId}:
    delete:
      description: Delete compute/replica.tag
      operationId: compute_project_replica_tag_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Replica Id
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete compute/replica.tag
      tags:
      - compute_project_replica
      x-permissions:
      - compute/replica.tag/delete
    get:
      description: Get compute/replica.tag
      operationId: compute_project_replica_tag_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Replica Id
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get compute/replica.tag
      tags:
      - compute_project_replica
      x-permissions:
      - compute/replica.tag/get
  /compute/{locationId}/project/{projectId}/replica/{replicaId}/event:
    get:
      description: List compute/replica.event
      operationId: compute_project_replica_event_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Replica Id
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: number
        style: form
      - description: $skip
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                title: Event collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List compute/replica.event
      tags:
      - compute_project_replica
      x-permissions:
      - compute/replica.event/list
  /compute/{locationId}/project/{projectId}/replica/{replicaId}/event/{eventId}:
    get:
      description: Get compute/replica.event
      operationId: compute_project_replica_event_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Replica Id
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: eventId
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get compute/replica.event
      tags:
      - compute_project_replica
      x-permissions:
      - compute/replica.event/get
  /iam/project/{projectId}/role:
    get:
      description: List role
      operationId: iam_project_role_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.value
        explode: true
        in: query
        name: tag.value
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.key
        explode: true
        in: query
        name: tag.key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/role'
                title: Role collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/role
      tags:
      - iam_project_role
      x-permissions:
      - iam/role/list
    post:
      description: Create role
      operationId: iam_project_role_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam_project_role_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/role'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/role'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create iam/role
      tags:
      - iam_project_role
      x-permissions:
      - iam/role/create
  /iam/organisation/{organisationId}/role:
    get:
      description: List role
      operationId: iam_organisation_role_list
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.value
        explode: true
        in: query
        name: tag.value
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.key
        explode: true
        in: query
        name: tag.key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/role'
                title: Role collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/role
      tags:
      - iam_organisation_role
      x-permissions:
      - iam/role/list
    post:
      description: Create role
      operationId: iam_organisation_role_create
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam_project_role_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/role'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/role'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create iam/role
      tags:
      - iam_organisation_role
      x-permissions:
      - iam/role/create
  /iam/project/{projectId}/role/{roleId}:
    delete:
      description: Delete role
      operationId: iam_project_role_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete iam/role
      tags:
      - iam_project_role
      x-permissions:
      - iam/role/delete
      x-state:
      - Online
    get:
      description: Returns a single role
      operationId: iam_project_role_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/role'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/role
      tags:
      - iam_project_role
      x-permissions:
      - iam/role/get
    patch:
      description: Returns modified role
      operationId: iam_project_role_update
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam_project_role_update'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/role'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update iam/role
      tags:
      - iam_project_role
  /iam/organisation/{organisationId}/role/{roleId}:
    delete:
      description: Delete role
      operationId: iam_organisation_role_delete
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete iam/role
      tags:
      - iam_organisation_role
      x-permissions:
      - iam/role/delete
      x-state:
      - Online
    get:
      description: Returns a single role
      operationId: iam_organisation_role_get
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/role'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/role
      tags:
      - iam_organisation_role
      x-permissions:
      - iam/role/get
    patch:
      description: Returns modified role
      operationId: iam_organisation_role_update
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam_project_role_update'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/role'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update iam/role
      tags:
      - iam_organisation_role
  /iam/project/{projectId}/role/{roleId}/permission:
    get:
      description: List iam/role.permission
      operationId: iam_project_role_permission_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/iam.permission'
                title: Iam.permission collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/role.permission
      tags:
      - iam_project_role
      x-permissions:
      - iam/role.permission/list
    post:
      description: Create iam/role.permission
      operationId: iam_project_role_permission_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam.permission'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam.permission'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create iam/role.permission
      tags:
      - iam_project_role
      x-permissions:
      - iam/role.permission/create
    put:
      description: Replace iam/role.permission
      operationId: iam_project_role_permission_put
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam.permission_array'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/iam.permission'
                title: Iam.permission collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Replace iam/role.permission
      tags:
      - iam_project_role
      x-permissions:
      - iam/role.permission/create
      - iam/role.permission/delete
  /iam/organisation/{organisationId}/role/{roleId}/permission:
    get:
      description: List iam/role.permission
      operationId: iam_organisation_role_permission_list
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/iam.permission'
                title: Iam.permission collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/role.permission
      tags:
      - iam_organisation_role
      x-permissions:
      - iam/role.permission/list
    post:
      description: Create iam/role.permission
      operationId: iam_organisation_role_permission_create
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam.permission'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam.permission'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create iam/role.permission
      tags:
      - iam_organisation_role
      x-permissions:
      - iam/role.permission/create
    put:
      description: Replace iam/role.permission
      operationId: iam_organisation_role_permission_put
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam.permission_array'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/iam.permission'
                title: Iam.permission collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Replace iam/role.permission
      tags:
      - iam_organisation_role
      x-permissions:
      - iam/role.permission/create
      - iam/role.permission/delete
  /iam/project/{projectId}/role/{roleId}/permission/{permissionId}:
    delete:
      description: Delete iam/role.permission
      operationId: iam_project_role_permission_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: permissionId
        explode: false
        in: path
        name: permissionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam.permission'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete iam/role.permission
      tags:
      - iam_project_role
      x-permissions:
      - iam/role.permission/delete
    get:
      description: Get iam/role.permission
      operationId: iam_project_role_permission_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: permissionId
        explode: false
        in: path
        name: permissionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam.permission'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/role.permission
      tags:
      - iam_project_role
      x-permissions:
      - iam/role.permission/get
  /iam/organisation/{organisationId}/role/{roleId}/permission/{permissionId}:
    delete:
      description: Delete iam/role.permission
      operationId: iam_organisation_role_permission_delete
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: permissionId
        explode: false
        in: path
        name: permissionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam.permission'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete iam/role.permission
      tags:
      - iam_organisation_role
      x-permissions:
      - iam/role.permission/delete
    get:
      description: Get iam/role.permission
      operationId: iam_organisation_role_permission_get
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: permissionId
        explode: false
        in: path
        name: permissionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam.permission'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/role.permission
      tags:
      - iam_organisation_role
      x-permissions:
      - iam/role.permission/get
  /iam/project/{projectId}/role/{roleId}/service:
    get:
      description: List iam/role.service
      operationId: iam_project_role_service_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/resourceService'
                title: ResourceService collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/role.service
      tags:
      - iam_project_role
      x-permissions:
      - iam/role.service/list
  /iam/organisation/{organisationId}/role/{roleId}/service:
    get:
      description: List iam/role.service
      operationId: iam_organisation_role_service_list
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/resourceService'
                title: ResourceService collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/role.service
      tags:
      - iam_organisation_role
      x-permissions:
      - iam/role.service/list
  /iam/project/{projectId}/role/{roleId}/service/{serviceId}:
    get:
      description: Get iam/role.service
      operationId: iam_project_role_service_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceService'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/role.service
      tags:
      - iam_project_role
      x-permissions:
      - iam/role.service/get
  /iam/organisation/{organisationId}/role/{roleId}/service/{serviceId}:
    get:
      description: Get iam/role.service
      operationId: iam_organisation_role_service_get
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceService'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/role.service
      tags:
      - iam_organisation_role
      x-permissions:
      - iam/role.service/get
  /iam/project/{projectId}/role/{roleId}/tag:
    get:
      description: List iam/role.tag
      operationId: iam_project_role_tag_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/role.tag
      tags:
      - iam_project_role
      x-permissions:
      - iam/role.tag/list
    post:
      description: Create iam/role.tag
      operationId: iam_project_role_tag_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create iam/role.tag
      tags:
      - iam_project_role
      x-permissions:
      - iam/role.tag/create
    put:
      description: Replace iam/role.tag
      operationId: iam_project_role_tag_put
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag_array'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Replace iam/role.tag
      tags:
      - iam_project_role
      x-permissions:
      - iam/role.tag/create
      - iam/role.tag/delete
  /iam/organisation/{organisationId}/role/{roleId}/tag:
    get:
      description: List iam/role.tag
      operationId: iam_organisation_role_tag_list
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/role.tag
      tags:
      - iam_organisation_role
      x-permissions:
      - iam/role.tag/list
    post:
      description: Create iam/role.tag
      operationId: iam_organisation_role_tag_create
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create iam/role.tag
      tags:
      - iam_organisation_role
      x-permissions:
      - iam/role.tag/create
    put:
      description: Replace iam/role.tag
      operationId: iam_organisation_role_tag_put
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag_array'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Replace iam/role.tag
      tags:
      - iam_organisation_role
      x-permissions:
      - iam/role.tag/create
      - iam/role.tag/delete
  /iam/project/{projectId}/role/{roleId}/tag/{tagId}:
    delete:
      description: Delete iam/role.tag
      operationId: iam_project_role_tag_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete iam/role.tag
      tags:
      - iam_project_role
      x-permissions:
      - iam/role.tag/delete
    get:
      description: Get iam/role.tag
      operationId: iam_project_role_tag_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/role.tag
      tags:
      - iam_project_role
      x-permissions:
      - iam/role.tag/get
  /iam/organisation/{organisationId}/role/{roleId}/tag/{tagId}:
    delete:
      description: Delete iam/role.tag
      operationId: iam_organisation_role_tag_delete
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete iam/role.tag
      tags:
      - iam_organisation_role
      x-permissions:
      - iam/role.tag/delete
    get:
      description: Get iam/role.tag
      operationId: iam_organisation_role_tag_get
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/role.tag
      tags:
      - iam_organisation_role
      x-permissions:
      - iam/role.tag/get
  /iam/project/{projectId}/role/{roleId}/event:
    get:
      description: List iam/role.event
      operationId: iam_project_role_event_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: number
        style: form
      - description: $skip
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                title: Event collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/role.event
      tags:
      - iam_project_role
      x-permissions:
      - iam/role.event/list
  /iam/organisation/{organisationId}/role/{roleId}/event:
    get:
      description: List iam/role.event
      operationId: iam_organisation_role_event_list
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: number
        style: form
      - description: $skip
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                title: Event collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/role.event
      tags:
      - iam_organisation_role
      x-permissions:
      - iam/role.event/list
  /iam/project/{projectId}/role/{roleId}/event/{eventId}:
    get:
      description: Get iam/role.event
      operationId: iam_project_role_event_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: eventId
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/role.event
      tags:
      - iam_project_role
      x-permissions:
      - iam/role.event/get
  /iam/organisation/{organisationId}/role/{roleId}/event/{eventId}:
    get:
      description: Get iam/role.event
      operationId: iam_organisation_role_event_get
      parameters:
      - description: Organisation Id
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Role Id
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: eventId
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/role.event
      tags:
      - iam_organisation_role
      x-permissions:
      - iam/role.event/get
  /iam/project/{projectId}/sa:
    get:
      description: List sa
      operationId: iam_project_sa_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.value
        explode: true
        in: query
        name: tag.value
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.key
        explode: true
        in: query
        name: tag.key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/sa'
                title: Sa collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/sa
      tags:
      - iam_project_sa
      x-permissions:
      - iam/sa/list
    post:
      description: Create sa
      operationId: iam_project_sa_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam_project_sa_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sa'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sa'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create iam/sa
      tags:
      - iam_project_sa
      x-permissions:
      - iam/sa/create
  /iam/project/{projectId}/sa/{saId}:
    delete:
      description: Delete sa
      operationId: iam_project_sa_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Sa Id
        explode: false
        in: path
        name: saId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete iam/sa
      tags:
      - iam_project_sa
      x-permissions:
      - iam/sa/delete
      x-state:
      - Online
    get:
      description: Returns a single sa
      operationId: iam_project_sa_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Sa Id
        explode: false
        in: path
        name: saId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sa'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/sa
      tags:
      - iam_project_sa
      x-permissions:
      - iam/sa/get
    patch:
      description: Returns modified sa
      operationId: iam_project_sa_update
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Sa Id
        explode: false
        in: path
        name: saId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam_project_sa_update'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sa'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update iam/sa
      tags:
      - iam_project_sa
  /iam/project/{projectId}/sa/{saId}/credential:
    get:
      description: List iam/sa.credential
      operationId: iam_project_sa_credential_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Sa Id
        explode: false
        in: path
        name: saId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/sa.credential'
                title: Sa.credential collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/sa.credential
      tags:
      - iam_project_sa
      x-permissions:
      - iam/sa.credential/list
    post:
      description: Create iam/sa.credential
      operationId: iam_project_sa_credential_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Sa Id
        explode: false
        in: path
        name: saId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sa.credential'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sa.credential'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create iam/sa.credential
      tags:
      - iam_project_sa
      x-permissions:
      - iam/sa.credential/create
  /iam/project/{projectId}/sa/{saId}/credential/{credentialId}:
    delete:
      description: Delete iam/sa.credential
      operationId: iam_project_sa_credential_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Sa Id
        explode: false
        in: path
        name: saId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: credentialId
        explode: false
        in: path
        name: credentialId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sa'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sa'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete iam/sa.credential
      tags:
      - iam_project_sa
      x-permissions:
      - iam/sa.credential/delete
    get:
      description: Get iam/sa.credential
      operationId: iam_project_sa_credential_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Sa Id
        explode: false
        in: path
        name: saId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: credentialId
        explode: false
        in: path
        name: credentialId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sa.credential'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/sa.credential
      tags:
      - iam_project_sa
      x-permissions:
      - iam/sa.credential/get
    patch:
      description: Update iam/sa.credential
      operationId: iam_project_sa_credential_patch
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Sa Id
        explode: false
        in: path
        name: saId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: credentialId
        explode: false
        in: path
        name: credentialId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam_project_sa_credential_patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sa.credential'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update iam/sa.credential
      tags:
      - iam_project_sa
  /iam/project/{projectId}/sa/{saId}/service:
    get:
      description: List iam/sa.service
      operationId: iam_project_sa_service_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Sa Id
        explode: false
        in: path
        name: saId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/resourceService'
                title: ResourceService collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/sa.service
      tags:
      - iam_project_sa
      x-permissions:
      - iam/sa.service/list
  /iam/project/{projectId}/sa/{saId}/service/{serviceId}:
    get:
      description: Get iam/sa.service
      operationId: iam_project_sa_service_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Sa Id
        explode: false
        in: path
        name: saId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceService'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/sa.service
      tags:
      - iam_project_sa
      x-permissions:
      - iam/sa.service/get
  /iam/project/{projectId}/sa/{saId}/tag:
    get:
      description: List iam/sa.tag
      operationId: iam_project_sa_tag_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Sa Id
        explode: false
        in: path
        name: saId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/sa.tag
      tags:
      - iam_project_sa
      x-permissions:
      - iam/sa.tag/list
    post:
      description: Create iam/sa.tag
      operationId: iam_project_sa_tag_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Sa Id
        explode: false
        in: path
        name: saId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create iam/sa.tag
      tags:
      - iam_project_sa
      x-permissions:
      - iam/sa.tag/create
    put:
      description: Replace iam/sa.tag
      operationId: iam_project_sa_tag_put
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Sa Id
        explode: false
        in: path
        name: saId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag_array'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Replace iam/sa.tag
      tags:
      - iam_project_sa
      x-permissions:
      - iam/sa.tag/create
      - iam/sa.tag/delete
  /iam/project/{projectId}/sa/{saId}/tag/{tagId}:
    delete:
      description: Delete iam/sa.tag
      operationId: iam_project_sa_tag_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Sa Id
        explode: false
        in: path
        name: saId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete iam/sa.tag
      tags:
      - iam_project_sa
      x-permissions:
      - iam/sa.tag/delete
    get:
      description: Get iam/sa.tag
      operationId: iam_project_sa_tag_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Sa Id
        explode: false
        in: path
        name: saId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/sa.tag
      tags:
      - iam_project_sa
      x-permissions:
      - iam/sa.tag/get
  /iam/project/{projectId}/sa/{saId}/event:
    get:
      description: List iam/sa.event
      operationId: iam_project_sa_event_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Sa Id
        explode: false
        in: path
        name: saId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: number
        style: form
      - description: $skip
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                title: Event collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List iam/sa.event
      tags:
      - iam_project_sa
      x-permissions:
      - iam/sa.event/list
  /iam/project/{projectId}/sa/{saId}/event/{eventId}:
    get:
      description: Get iam/sa.event
      operationId: iam_project_sa_event_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Sa Id
        explode: false
        in: path
        name: saId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: eventId
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get iam/sa.event
      tags:
      - iam_project_sa
      x-permissions:
      - iam/sa.event/get
  /storage/{locationId}/project/{projectId}/vault:
    get:
      description: List vault
      operationId: storage_project_vault_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.value
        explode: true
        in: query
        name: tag.value
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.key
        explode: true
        in: query
        name: tag.key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/vault'
                title: Vault collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List storage/vault
      tags:
      - storage_project_vault
      x-permissions:
      - storage/vault/list
      x-examples:
        $ref: ./docs/storage_project_vault_list/index.json
    post:
      description: Create vault
      operationId: storage_project_vault_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage_project_vault_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create storage/vault
      tags:
      - storage_project_vault
      x-permissions:
      - storage/vault/create
      x-examples:
        $ref: ./docs/storage_project_vault_create/index.json
  /storage/{locationId}/project/{projectId}/vault/{vaultId}:
    delete:
      description: Delete vault
      operationId: storage_project_vault_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vault Id
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage_project_vault_delete'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete storage/vault
      tags:
      - storage_project_vault
      x-permissions:
      - storage/vault/delete
      x-state:
      - Online
      - "Off"
      x-examples:
        $ref: ./docs/storage_project_vault_delete/index.json
    get:
      description: Returns a single vault
      operationId: storage_project_vault_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vault Id
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get storage/vault
      tags:
      - storage_project_vault
      x-permissions:
      - storage/vault/get
      x-examples:
        $ref: ./docs/storage_project_vault_get/index.json
    patch:
      description: Returns modified vault
      operationId: storage_project_vault_update
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vault Id
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage_project_vault_update'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update storage/vault
      tags:
      - storage_project_vault
      x-examples:
        $ref: ./docs/storage_project_vault_update/index.json
  /storage/{locationId}/project/{projectId}/vault/{vaultId}/actions/start:
    post:
      description: action start
      operationId: storage_project_vault_start
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vault Id
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Start storage/vault
      tags:
      - storage_project_vault
      x-permissions:
      - storage/vault/start
      x-state:
      - "Off"
  /storage/{locationId}/project/{projectId}/vault/{vaultId}/actions/stop:
    post:
      description: action stop
      operationId: storage_project_vault_stop
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vault Id
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Stop storage/vault
      tags:
      - storage_project_vault
      x-permissions:
      - storage/vault/stop
      x-state:
      - Online
      x-examples:
        $ref: ./docs/storage_project_vault_stop/index.json
  /storage/{locationId}/project/{projectId}/vault/{vaultId}/actions/resize:
    post:
      description: action resize
      operationId: storage_project_vault_resize
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vault Id
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage_project_vault_resize'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Resize storage/vault
      tags:
      - storage_project_vault
      x-permissions:
      - storage/vault/resize
      x-state:
      - Online
      - "Off"
      x-examples:
        $ref: ./docs/storage_project_vault_resize/index.json
  /storage/{locationId}/project/{projectId}/vault/{vaultId}/snapshot:
    get:
      description: List storage/vault.snapshot
      operationId: storage_project_vault_snapshot_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vault Id
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/storage.snapshot'
                title: Storage.snapshot collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List storage/vault.snapshot
      tags:
      - storage_project_vault
      x-permissions:
      - storage/vault.snapshot/list
      x-examples:
        $ref: ./docs/storage_project_vault_snapshot_list/index.json
    post:
      description: Create storage/vault.snapshot
      operationId: storage_project_vault_snapshot_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vault Id
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage_project_vault_snapshot_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.snapshot'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create storage/vault.snapshot
      tags:
      - storage_project_vault
      x-permissions:
      - storage/vault.snapshot/create
      x-examples:
        $ref: ./docs/storage_project_vault_snapshot_create/index.json
  /storage/{locationId}/project/{projectId}/vault/{vaultId}/snapshot/{snapshotId}:
    delete:
      description: Delete storage/vault.snapshot
      operationId: storage_project_vault_snapshot_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vault Id
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: snapshotId
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.snapshot'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete storage/vault.snapshot
      tags:
      - storage_project_vault
      x-permissions:
      - storage/vault.snapshot/delete
      x-examples:
        $ref: ./docs/storage_project_vault_snapshot_delete/index.json
    get:
      description: Get storage/vault.snapshot
      operationId: storage_project_vault_snapshot_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vault Id
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: snapshotId
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storage.snapshot'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get storage/vault.snapshot
      tags:
      - storage_project_vault
      x-permissions:
      - storage/vault.snapshot/get
      x-examples:
        $ref: ./docs/storage_project_vault_snapshot_get/index.json
  /storage/{locationId}/project/{projectId}/vault/{vaultId}/credential:
    get:
      description: List storage/vault.credential
      operationId: storage_project_vault_credential_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vault Id
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/vault.credential'
                title: Vault.credential collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List storage/vault.credential
      tags:
      - storage_project_vault
      x-permissions:
      - storage/vault.credential/list
      x-examples:
        $ref: ./docs/storage_project_vault_credential_list/index.json
    post:
      description: Create storage/vault.credential
      operationId: storage_project_vault_credential_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vault Id
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vault.credential'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault.credential'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create storage/vault.credential
      tags:
      - storage_project_vault
      x-permissions:
      - storage/vault.credential/create
      x-examples:
        $ref: ./docs/storage_project_vault_credential_create/index.json
  /storage/{locationId}/project/{projectId}/vault/{vaultId}/credential/{credentialId}:
    delete:
      description: Delete storage/vault.credential
      operationId: storage_project_vault_credential_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vault Id
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: credentialId
        explode: false
        in: path
        name: credentialId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete storage/vault.credential
      tags:
      - storage_project_vault
      x-permissions:
      - storage/vault.credential/delete
      x-examples:
        $ref: ./docs/storage_project_vault_credential_delete/index.json
    get:
      description: Get storage/vault.credential
      operationId: storage_project_vault_credential_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vault Id
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: credentialId
        explode: false
        in: path
        name: credentialId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault.credential'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get storage/vault.credential
      tags:
      - storage_project_vault
      x-permissions:
      - storage/vault.credential/get
      x-examples:
        $ref: ./docs/storage_project_vault_credential_get/index.json
    patch:
      description: Update storage/vault.credential
      operationId: storage_project_vault_credential_patch
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vault Id
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: credentialId
        explode: false
        in: path
        name: credentialId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storage_project_vault_credential_patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault.credential'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update storage/vault.credential
      tags:
      - storage_project_vault
  /storage/{locationId}/project/{projectId}/vault/{vaultId}/service:
    get:
      description: List storage/vault.service
      operationId: storage_project_vault_service_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vault Id
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/resourceService'
                title: ResourceService collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List storage/vault.service
      tags:
      - storage_project_vault
      x-permissions:
      - storage/vault.service/list
      x-examples:
        $ref: ./docs/storage_project_vault_service_list/index.json
  /storage/{locationId}/project/{projectId}/vault/{vaultId}/service/{serviceId}:
    get:
      description: Get storage/vault.service
      operationId: storage_project_vault_service_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vault Id
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceService'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get storage/vault.service
      tags:
      - storage_project_vault
      x-permissions:
      - storage/vault.service/get
      x-examples:
        $ref: ./docs/storage_project_vault_service_get/index.json
  /storage/{locationId}/project/{projectId}/vault/{vaultId}/tag:
    get:
      description: List storage/vault.tag
      operationId: storage_project_vault_tag_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vault Id
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List storage/vault.tag
      tags:
      - storage_project_vault
      x-permissions:
      - storage/vault.tag/list
      x-examples:
        $ref: ./docs/storage_project_vault_tag_list/index.json
    post:
      description: Create storage/vault.tag
      operationId: storage_project_vault_tag_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vault Id
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create storage/vault.tag
      tags:
      - storage_project_vault
      x-permissions:
      - storage/vault.tag/create
      x-examples:
        $ref: ./docs/storage_project_vault_tag_create/index.json
    put:
      description: Replace storage/vault.tag
      operationId: storage_project_vault_tag_put
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vault Id
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag_array'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Replace storage/vault.tag
      tags:
      - storage_project_vault
      x-permissions:
      - storage/vault.tag/create
      - storage/vault.tag/delete
  /storage/{locationId}/project/{projectId}/vault/{vaultId}/tag/{tagId}:
    delete:
      description: Delete storage/vault.tag
      operationId: storage_project_vault_tag_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vault Id
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete storage/vault.tag
      tags:
      - storage_project_vault
      x-permissions:
      - storage/vault.tag/delete
      x-examples:
        $ref: ./docs/storage_project_vault_tag_delete/index.json
    get:
      description: Get storage/vault.tag
      operationId: storage_project_vault_tag_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vault Id
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get storage/vault.tag
      tags:
      - storage_project_vault
      x-permissions:
      - storage/vault.tag/get
      x-examples:
        $ref: ./docs/storage_project_vault_tag_get/index.json
  /storage/{locationId}/project/{projectId}/vault/{vaultId}/event:
    get:
      description: List storage/vault.event
      operationId: storage_project_vault_event_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vault Id
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: number
        style: form
      - description: $skip
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                title: Event collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List storage/vault.event
      tags:
      - storage_project_vault
      x-permissions:
      - storage/vault.event/list
      x-examples:
        $ref: ./docs/storage_project_vault_event_list/index.json
  /storage/{locationId}/project/{projectId}/vault/{vaultId}/event/{eventId}:
    get:
      description: Get storage/vault.event
      operationId: storage_project_vault_event_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vault Id
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: eventId
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get storage/vault.event
      tags:
      - storage_project_vault
      x-permissions:
      - storage/vault.event/get
      x-examples:
        $ref: ./docs/storage_project_vault_event_get/index.json
  /compute/{locationId}/project/{projectId}/vm:
    get:
      description: List vm
      operationId: compute_project_vm_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.value
        explode: true
        in: query
        name: tag.value
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.key
        explode: true
        in: query
        name: tag.key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/vm'
                title: Vm collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List compute/vm
      tags:
      - compute_project_vm
      x-permissions:
      - compute/vm/list
      x-examples:
        $ref: ./docs/compute_project_vm_list/index.json
    post:
      description: Create vm
      operationId: compute_project_vm_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/compute_project_vm_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create compute/vm
      tags:
      - compute_project_vm
      x-permissions:
      - compute/vm/create
      x-examples:
        $ref: ./docs/compute_project_vm_create/index.json
  /compute/{locationId}/project/{projectId}/vm/{vmId}:
    delete:
      description: Delete vm
      operationId: compute_project_vm_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vm Id
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete compute/vm
      tags:
      - compute_project_vm
      x-permissions:
      - compute/vm/delete
      x-state:
      - Running
      - "Off"
      x-examples:
        $ref: ./docs/compute_project_vm_delete/index.json
    get:
      description: Returns a single vm
      operationId: compute_project_vm_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vm Id
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: successful operation
          links:
            netadp:
              operationId: networking_project_netadp_list
              parameters:
                assigned.id: $request.path.vmId
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get compute/vm
      tags:
      - compute_project_vm
      x-permissions:
      - compute/vm/get
      x-examples:
        $ref: ./docs/compute_project_vm_get/index.json
    patch:
      description: Returns modified vm
      operationId: compute_project_vm_update
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vm Id
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/compute_project_vm_update'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update compute/vm
      tags:
      - compute_project_vm
      x-examples:
        $ref: ./docs/compute_project_vm_update/index.json
  /compute/{locationId}/project/{projectId}/vm/{vmId}/actions/start:
    post:
      description: action start
      operationId: compute_project_vm_start
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vm Id
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Start compute/vm
      tags:
      - compute_project_vm
      x-permissions:
      - compute/vm/start
      x-state:
      - "Off"
  /compute/{locationId}/project/{projectId}/vm/{vmId}/actions/restart:
    post:
      description: action restart
      operationId: compute_project_vm_restart
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vm Id
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Restart compute/vm
      tags:
      - compute_project_vm
      x-permissions:
      - compute/vm/restart
      x-state:
      - Running
  /compute/{locationId}/project/{projectId}/vm/{vmId}/actions/stop:
    post:
      description: action stop
      operationId: compute_project_vm_stop
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vm Id
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Stop compute/vm
      tags:
      - compute_project_vm
      x-permissions:
      - compute/vm/stop
      x-state:
      - Running
  /compute/{locationId}/project/{projectId}/vm/{vmId}/actions/turnoff:
    post:
      description: action turnoff
      operationId: compute_project_vm_turnoff
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vm Id
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Turnoff compute/vm
      tags:
      - compute_project_vm
      x-permissions:
      - compute/vm/turnoff
      x-state:
      - Running
  /compute/{locationId}/project/{projectId}/vm/{vmId}/actions/password_reset:
    post:
      description: action password_reset
      operationId: compute_project_vm_password_reset
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vm Id
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/compute_project_vm_password_reset'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Password reset compute/vm
      tags:
      - compute_project_vm
      x-permissions:
      - compute/vm/passwordReset
      x-state:
      - Running
  /compute/{locationId}/project/{projectId}/vm/{vmId}/actions/flavour:
    post:
      description: action flavour
      operationId: compute_project_vm_flavour
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vm Id
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/compute_project_vm_flavour'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Flavour compute/vm
      tags:
      - compute_project_vm
      x-permissions:
      - compute/vm/flavour
      x-state:
      - "Off"
  /compute/{locationId}/project/{projectId}/vm/{vmId}/actions/console:
    post:
      description: action console
      operationId: compute_project_vm_console
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vm Id
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "201":
          description: Console request accepted
          headers:
            location:
              description: Absolute URL
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Console compute/vm
      tags:
      - compute_project_vm
      x-permissions:
      - compute/vm/console
      x-state:
      - Running
  /compute/{locationId}/project/{projectId}/vm/{vmId}/actions/serialport:
    post:
      description: action serialport
      operationId: compute_project_vm_serialport
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vm Id
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/compute_project_vm_serialport'
        required: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
          description: serial port buffer
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Serialport compute/vm
      tags:
      - compute_project_vm
      x-permissions:
      - compute/vm.serialport/read
      x-state:
      - Running
  /compute/{locationId}/project/{projectId}/vm/{vmId}/disk:
    get:
      description: List compute/vm.disk
      operationId: compute_project_vm_disk_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vm Id
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/disk'
                title: Disk collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List compute/vm.disk
      tags:
      - compute_project_vm
      x-permissions:
      - storage/disk/list
    post:
      description: Create compute/vm.disk
      operationId: compute_project_vm_disk_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vm Id
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/compute_project_vm_disk_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create compute/vm.disk
      tags:
      - compute_project_vm
      x-permissions:
      - compute/vm/use
  /compute/{locationId}/project/{projectId}/vm/{vmId}/iso:
    get:
      description: List compute/vm.iso
      operationId: compute_project_vm_iso_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vm Id
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/iso'
                title: Iso collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List compute/vm.iso
      tags:
      - compute_project_vm
      x-permissions:
      - storage/iso/list
    post:
      description: Create compute/vm.iso
      operationId: compute_project_vm_iso_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vm Id
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/compute_project_vm_iso_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iso'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create compute/vm.iso
      tags:
      - compute_project_vm
      x-permissions:
      - compute/vm/use
  /compute/{locationId}/project/{projectId}/vm/{vmId}/metric:
    get:
      description: List compute/vm.metric
      operationId: compute_project_vm_metric_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vm Id
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/metric'
                title: Metric collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List compute/vm.metric
      tags:
      - compute_project_vm
      x-permissions:
      - compute/vm.metric/list
  /compute/{locationId}/project/{projectId}/vm/{vmId}/metric/{metricId}:
    get:
      description: Get compute/vm.metric
      operationId: compute_project_vm_metric_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vm Id
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: metricId
        explode: false
        in: path
        name: metricId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/metric'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get compute/vm.metric
      tags:
      - compute_project_vm
      x-permissions:
      - compute/vm.metric/get
  /compute/{locationId}/project/{projectId}/vm/{vmId}/metric/{metricId}/point:
    get:
      description: List compute/vm.point
      operationId: compute_project_vm_metric_point_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vm Id
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: metricId
        explode: false
        in: path
        name: metricId
        required: true
        schema:
          type: string
        style: simple
      - description: interval
        explode: true
        in: query
        name: interval
        required: false
        schema:
          type: string
        style: form
      - description: timespan
        explode: true
        in: query
        name: timespan
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/serie'
                title: Serie collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List compute/vm.point
      tags:
      - compute_project_vm
      x-permissions:
      - compute/vm.point/list
  /compute/{locationId}/project/{projectId}/vm/{vmId}/service:
    get:
      description: List compute/vm.service
      operationId: compute_project_vm_service_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vm Id
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/resourceService'
                title: ResourceService collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List compute/vm.service
      tags:
      - compute_project_vm
      x-permissions:
      - compute/vm.service/list
      x-examples:
        $ref: ./docs/compute_project_vm_service_list/index.json
  /compute/{locationId}/project/{projectId}/vm/{vmId}/service/{serviceId}:
    get:
      description: Get compute/vm.service
      operationId: compute_project_vm_service_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vm Id
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceService'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get compute/vm.service
      tags:
      - compute_project_vm
      x-permissions:
      - compute/vm.service/get
      x-examples:
        $ref: ./docs/compute_project_vm_service_get/index.json
  /compute/{locationId}/project/{projectId}/vm/{vmId}/tag:
    get:
      description: List compute/vm.tag
      operationId: compute_project_vm_tag_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vm Id
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List compute/vm.tag
      tags:
      - compute_project_vm
      x-permissions:
      - compute/vm.tag/list
      x-examples:
        $ref: ./docs/compute_project_vm_tag_list/index.json
    post:
      description: Create compute/vm.tag
      operationId: compute_project_vm_tag_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vm Id
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create compute/vm.tag
      tags:
      - compute_project_vm
      x-permissions:
      - compute/vm.tag/create
      x-examples:
        $ref: ./docs/compute_project_vm_tag_create/index.json
    put:
      description: Replace compute/vm.tag
      operationId: compute_project_vm_tag_put
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vm Id
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag_array'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Replace compute/vm.tag
      tags:
      - compute_project_vm
      x-permissions:
      - compute/vm.tag/create
      - compute/vm.tag/delete
  /compute/{locationId}/project/{projectId}/vm/{vmId}/tag/{tagId}:
    delete:
      description: Delete compute/vm.tag
      operationId: compute_project_vm_tag_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vm Id
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete compute/vm.tag
      tags:
      - compute_project_vm
      x-permissions:
      - compute/vm.tag/delete
      x-examples:
        $ref: ./docs/compute_project_vm_tag_delete/index.json
    get:
      description: Get compute/vm.tag
      operationId: compute_project_vm_tag_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vm Id
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get compute/vm.tag
      tags:
      - compute_project_vm
      x-permissions:
      - compute/vm.tag/get
      x-examples:
        $ref: ./docs/compute_project_vm_tag_get/index.json
  /compute/{locationId}/project/{projectId}/vm/{vmId}/event:
    get:
      description: List compute/vm.event
      operationId: compute_project_vm_event_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vm Id
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: number
        style: form
      - description: $skip
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                title: Event collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List compute/vm.event
      tags:
      - compute_project_vm
      x-permissions:
      - compute/vm.event/list
      x-examples:
        $ref: ./docs/compute_project_vm_event_list/index.json
  /compute/{locationId}/project/{projectId}/vm/{vmId}/event/{eventId}:
    get:
      description: Get compute/vm.event
      operationId: compute_project_vm_event_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Vm Id
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: eventId
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get compute/vm.event
      tags:
      - compute_project_vm
      x-permissions:
      - compute/vm.event/get
      x-examples:
        $ref: ./docs/compute_project_vm_event_get/index.json
  /billing/project/{projectId}/reservation:
    get:
      description: List reservation
      operationId: billing_project_reservation_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.value
        explode: true
        in: query
        name: tag.value
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag.key
        explode: true
        in: query
        name: tag.key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/reservation'
                title: Reservation collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List billing/reservation
      tags:
      - billing_project_reservation
      x-permissions:
      - billing/reservation/list
    post:
      description: Create reservation
      operationId: billing_project_reservation_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/billing_project_reservation_create'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create billing/reservation
      tags:
      - billing_project_reservation
      x-permissions:
      - billing/reservation/create
  /billing/project/{projectId}/reservation/{reservationId}:
    delete:
      description: Delete reservation
      operationId: billing_project_reservation_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Reservation Id
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete billing/reservation
      tags:
      - billing_project_reservation
      x-permissions:
      - billing/reservation/delete
      x-state:
      - Expired
    get:
      description: Returns a single reservation
      operationId: billing_project_reservation_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Reservation Id
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get billing/reservation
      tags:
      - billing_project_reservation
      x-permissions:
      - billing/reservation/get
    patch:
      description: Returns modified reservation
      operationId: billing_project_reservation_update
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Reservation Id
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/billing_project_reservation_update'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Update billing/reservation
      tags:
      - billing_project_reservation
  /billing/project/{projectId}/reservation/{reservationId}/actions/assign:
    post:
      description: action assign
      operationId: billing_project_reservation_assign
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Reservation Id
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/billing_project_reservation_assign'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Assign billing/reservation
      tags:
      - billing_project_reservation
      x-permissions:
      - billing/reservation/assign
      x-state:
      - Detached
  /billing/project/{projectId}/reservation/{reservationId}/actions/extend:
    post:
      description: action extend
      operationId: billing_project_reservation_extend
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Reservation Id
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Idempotency key
        explode: false
        in: header
        name: x-idempotency-key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation'
          description: successful operation
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation'
          description: operation queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Extend billing/reservation
      tags:
      - billing_project_reservation
      x-permissions:
      - billing/reservation/extend
      x-state:
      - Attached
      - Detached
  /billing/project/{projectId}/reservation/{reservationId}/service:
    get:
      description: List billing/reservation.service
      operationId: billing_project_reservation_service_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Reservation Id
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/resourceService'
                title: ResourceService collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List billing/reservation.service
      tags:
      - billing_project_reservation
      x-permissions:
      - billing/reservation.service/list
  /billing/project/{projectId}/reservation/{reservationId}/service/{serviceId}:
    get:
      description: Get billing/reservation.service
      operationId: billing_project_reservation_service_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Reservation Id
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceService'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get billing/reservation.service
      tags:
      - billing_project_reservation
      x-permissions:
      - billing/reservation.service/get
  /billing/project/{projectId}/reservation/{reservationId}/tag:
    get:
      description: List billing/reservation.tag
      operationId: billing_project_reservation_tag_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Reservation Id
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List billing/reservation.tag
      tags:
      - billing_project_reservation
      x-permissions:
      - billing/reservation.tag/list
    post:
      description: Create billing/reservation.tag
      operationId: billing_project_reservation_tag_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Reservation Id
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create billing/reservation.tag
      tags:
      - billing_project_reservation
      x-permissions:
      - billing/reservation.tag/create
    put:
      description: Replace billing/reservation.tag
      operationId: billing_project_reservation_tag_put
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Reservation Id
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag_array'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Replace billing/reservation.tag
      tags:
      - billing_project_reservation
      x-permissions:
      - billing/reservation.tag/create
      - billing/reservation.tag/delete
  /billing/project/{projectId}/reservation/{reservationId}/tag/{tagId}:
    delete:
      description: Delete billing/reservation.tag
      operationId: billing_project_reservation_tag_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Reservation Id
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete billing/reservation.tag
      tags:
      - billing_project_reservation
      x-permissions:
      - billing/reservation.tag/delete
    get:
      description: Get billing/reservation.tag
      operationId: billing_project_reservation_tag_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Reservation Id
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get billing/reservation.tag
      tags:
      - billing_project_reservation
      x-permissions:
      - billing/reservation.tag/get
  /billing/project/{projectId}/reservation/{reservationId}/event:
    get:
      description: List billing/reservation.event
      operationId: billing_project_reservation_event_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Reservation Id
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: number
        style: form
      - description: $skip
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                title: Event collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List billing/reservation.event
      tags:
      - billing_project_reservation
      x-permissions:
      - billing/reservation.event/list
  /billing/project/{projectId}/reservation/{reservationId}/event/{eventId}:
    get:
      description: Get billing/reservation.event
      operationId: billing_project_reservation_event_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Reservation Id
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: eventId
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get billing/reservation.event
      tags:
      - billing_project_reservation
      x-permissions:
      - billing/reservation.event/get
  /vmhost/{locationId}/project/{projectId}/instance:
    get:
      description: List instance
      operationId: vmhost_project_instance_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Filter by enabledServices
        explode: true
        in: query
        name: enabledServices
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/vmhost'
                title: Vmhost collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List vmhost/instance
      tags:
      - vmhost_project_instance
      x-permissions:
      - vmhost/instance/list
  /vmhost/{locationId}/project/{projectId}/instance/{instanceId}:
    get:
      description: Returns a single instance
      operationId: vmhost_project_instance_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vmhost'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get vmhost/instance
      tags:
      - vmhost_project_instance
      x-permissions:
      - vmhost/instance/get
  /vmhost/{locationId}/project/{projectId}/instance/{instanceId}/service:
    get:
      description: List vmhost/instance.service
      operationId: vmhost_project_instance_service_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/resourceService'
                title: ResourceService collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List vmhost/instance.service
      tags:
      - vmhost_project_instance
      x-permissions:
      - vmhost/instance.service/list
  /vmhost/{locationId}/project/{projectId}/instance/{instanceId}/service/{serviceId}:
    get:
      description: Get vmhost/instance.service
      operationId: vmhost_project_instance_service_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceService'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get vmhost/instance.service
      tags:
      - vmhost_project_instance
      x-permissions:
      - vmhost/instance.service/get
  /vmhost/{locationId}/project/{projectId}/instance/{instanceId}/tag:
    get:
      description: List vmhost/instance.tag
      operationId: vmhost_project_instance_tag_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List vmhost/instance.tag
      tags:
      - vmhost_project_instance
      x-permissions:
      - vmhost/instance.tag/list
    post:
      description: Create vmhost/instance.tag
      operationId: vmhost_project_instance_tag_create
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Create vmhost/instance.tag
      tags:
      - vmhost_project_instance
      x-permissions:
      - vmhost/instance.tag/create
    put:
      description: Replace vmhost/instance.tag
      operationId: vmhost_project_instance_tag_put
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag_array'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tag'
                title: Tag collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Replace vmhost/instance.tag
      tags:
      - vmhost_project_instance
      x-permissions:
      - vmhost/instance.tag/create
      - vmhost/instance.tag/delete
  /vmhost/{locationId}/project/{projectId}/instance/{instanceId}/tag/{tagId}:
    delete:
      description: Delete vmhost/instance.tag
      operationId: vmhost_project_instance_tag_delete
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Delete vmhost/instance.tag
      tags:
      - vmhost_project_instance
      x-permissions:
      - vmhost/instance.tag/delete
    get:
      description: Get vmhost/instance.tag
      operationId: vmhost_project_instance_tag_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: tagId
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get vmhost/instance.tag
      tags:
      - vmhost_project_instance
      x-permissions:
      - vmhost/instance.tag/get
  /vmhost/{locationId}/project/{projectId}/instance/{instanceId}/event:
    get:
      description: List vmhost/instance.event
      operationId: vmhost_project_instance_event_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: number
        style: form
      - description: $skip
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                title: Event collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List vmhost/instance.event
      tags:
      - vmhost_project_instance
      x-permissions:
      - vmhost/instance.event/list
  /vmhost/{locationId}/project/{projectId}/instance/{instanceId}/event/{eventId}:
    get:
      description: Get vmhost/instance.event
      operationId: vmhost_project_instance_event_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Location Id
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: string
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: eventId
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get vmhost/instance.event
      tags:
      - vmhost_project_instance
      x-permissions:
      - vmhost/instance.event/get
  /billing/project/{projectId}/service:
    get:
      description: List service
      operationId: billing_project_service_list
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Filter by kind
        explode: true
        in: query
        name: kind
        required: false
        schema:
          pattern: /^[a-z]+\/[a-z]+$/
          type: string
        style: form
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by type
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/service'
                title: Service collection
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: List billing/service
      tags:
      - billing_project_service
      x-permissions:
      - billing/service/list
  /billing/project/{projectId}/service/{serviceId}:
    get:
      description: Returns a single service
      operationId: billing_project_service_get
      parameters:
      - description: Project Id
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      - description: Service Id
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          format: ObjectId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        "401":
          description: Access token is missing or invalid
      summary: Get billing/service
      tags:
      - billing_project_service
      x-permissions:
      - billing/service/get
components:
  parameters:
    locationId:
      description: Location Id
      explode: false
      in: path
      name: locationId
      required: true
      schema:
        type: string
      style: simple
    projectId:
      description: Project Id
      explode: false
      in: path
      name: projectId
      required: true
      schema:
        format: ObjectId
        type: string
      style: simple
    organisationId:
      description: Organisation Id
      explode: false
      in: path
      name: organisationId
      required: true
      schema:
        format: ObjectId
        type: string
      style: simple
    x-idempotency-key:
      description: Idempotency key
      explode: false
      in: header
      name: x-idempotency-key
      required: false
      schema:
        type: string
      style: simple
    userId:
      description: User Id
      explode: false
      in: path
      name: userId
      required: true
      schema:
        format: ObjectId
        type: string
      style: simple
    tag.value:
      description: Filter by tag.value
      explode: true
      in: query
      name: tag.value
      required: false
      schema:
        type: string
      style: form
    tag.key:
      description: Filter by tag.key
      explode: true
      in: query
      name: tag.key
      required: false
      schema:
        type: string
      style: form
    ticketId:
      description: Ticket Id
      explode: false
      in: path
      name: ticketId
      required: true
      schema:
        format: ObjectId
        type: string
      style: simple
    agentId:
      description: Agent Id
      explode: false
      in: path
      name: agentId
      required: true
      schema:
        format: ObjectId
        type: string
      style: simple
    instanceId:
      description: Instance Id
      explode: false
      in: path
      name: instanceId
      required: true
      schema:
        format: ObjectId
        type: string
      style: simple
    journalId:
      description: Journal Id
      explode: false
      in: path
      name: journalId
      required: true
      schema:
        format: ObjectId
        type: string
      style: simple
    registryId:
      description: Registry Id
      explode: false
      in: path
      name: registryId
      required: true
      schema:
        format: ObjectId
        type: string
      style: simple
    zoneId:
      description: Zone Id
      explode: false
      in: path
      name: zoneId
      required: true
      schema:
        format: ObjectId
        type: string
      style: simple
    diskId:
      description: Disk Id
      explode: false
      in: path
      name: diskId
      required: true
      schema:
        format: ObjectId
        type: string
      style: simple
    firewallId:
      description: Firewall Id
      explode: false
      in: path
      name: firewallId
      required: true
      schema:
        format: ObjectId
        type: string
      style: simple
    imageId:
      description: Image Id
      explode: false
      in: path
      name: imageId
      required: true
      schema:
        format: ObjectId
        type: string
      style: simple
    ipId:
      description: Ip Id
      explode: false
      in: path
      name: ipId
      required: true
      schema:
        format: ObjectId
        type: string
      style: simple
    isoId:
      description: Iso Id
      explode: false
      in: path
      name: isoId
      required: true
      schema:
        format: ObjectId
        type: string
      style: simple
    netadpId:
      description: Netadp Id
      explode: false
      in: path
      name: netadpId
      required: true
      schema:
        format: ObjectId
        type: string
      style: simple
    netgwId:
      description: Netgw Id
      explode: false
      in: path
      name: netgwId
      required: true
      schema:
        format: ObjectId
        type: string
      style: simple
    networkId:
      description: Network Id
      explode: false
      in: path
      name: networkId
      required: true
      schema:
        format: ObjectId
        type: string
      style: simple
    policyId:
      description: Policy Id
      explode: false
      in: path
      name: policyId
      required: true
      schema:
        format: ObjectId
        type: string
      style: simple
    replicaId:
      description: Replica Id
      explode: false
      in: path
      name: replicaId
      required: true
      schema:
        format: ObjectId
        type: string
      style: simple
    roleId:
      description: Role Id
      explode: false
      in: path
      name: roleId
      required: true
      schema:
        format: ObjectId
        type: string
      style: simple
    saId:
      description: Sa Id
      explode: false
      in: path
      name: saId
      required: true
      schema:
        format: ObjectId
        type: string
      style: simple
    vaultId:
      description: Vault Id
      explode: false
      in: path
      name: vaultId
      required: true
      schema:
        format: ObjectId
        type: string
      style: simple
    vmId:
      description: Vm Id
      explode: false
      in: path
      name: vmId
      required: true
      schema:
        format: ObjectId
        type: string
      style: simple
    reservationId:
      description: Reservation Id
      explode: false
      in: path
      name: reservationId
      required: true
      schema:
        format: ObjectId
        type: string
      style: simple
    serviceId:
      description: Service Id
      explode: false
      in: path
      name: serviceId
      required: true
      schema:
        format: ObjectId
        type: string
      style: simple
  requestBodies: {}
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
    BadRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_400'
      description: Bad Request
  schemas:
    user.credential:
      example:
        createdBy: createdBy
        name: name
        fingerprint: fingerprint
        id: id
        type: ssh
        createdOn: 2000-01-23T04:56:07.000+00:00
        value: value
        token: token
      format: credential
      properties:
        id:
          readOnly: true
          title: Credential id
          type: string
        name:
          title: Credential name
          type: string
        createdBy:
          readOnly: true
          title: Credential createdBy
          type: string
        createdOn:
          format: date-time
          readOnly: true
          title: Credential createdOn
          type: string
        type:
          enum:
          - ssh
          - sha512
          - totp
          - otac
          - plain
          title: Credential type
          type: string
        value:
          title: Credential value
          type: string
          writeOnly: true
        fingerprint:
          readOnly: true
          title: Credential fingerprint
          type: string
        token:
          title: Credential token
          type: string
      required:
      - name
      - type
      - value
      type: object
    event:
      example:
        stage: stage
        createdBy: createdBy
        resource: resource
        name: name
        id: id
        state: pending
        createdOn: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        name:
          type: string
        createdBy:
          type: string
        createdOn:
          format: date-time
          type: string
        state:
          enum:
          - pending
          - processing
          - finished
          - error
          type: string
        stage:
          type: string
        resource:
          type: string
      type: object
    hdd:
      properties:
        maximumIOPS:
          type: number
        controllerType:
          type: string
        controllerNumber:
          type: string
        controllerLocation:
          type: number
        disk:
          format: uri
          type: string
          x-resource:
            kind: storage/disk
        id:
          type: string
      type: object
    billing:
      example:
        period: period
        charges:
        - quantity: 5.637376656633329
          price: 5.962133916683182
          start: start
          paidFrom: paidFrom
          end: end
          id: id
          value: 1.4658129805029452
          paidOn: paidOn
        - quantity: 5.637376656633329
          price: 5.962133916683182
          start: start
          paidFrom: paidFrom
          end: end
          id: id
          value: 1.4658129805029452
          paidOn: paidOn
        quantity: 6.027456183070403
        resource:
          deleted: true
          name: name
          id: id
          type: type
        price: 0.8008281904610115
        service:
          name: name
          id: id
          type: type
        project: project
        id: id
        oneTime: true
      properties:
        id:
          type: string
        period:
          type: string
        price:
          type: number
        quantity:
          type: number
        project:
          type: string
        oneTime:
          type: boolean
        service:
          $ref: '#/components/schemas/billing_service'
        resource:
          $ref: '#/components/schemas/billing_resource'
        charges:
          items:
            $ref: '#/components/schemas/billing_charges'
          type: array
      type: object
    payment:
      example:
        amount: 1.4658129805029452
        channel: bank
        project: https://openapi-generator.tech
        createdOn: 2000-01-23T04:56:07.000+00:00
        uri: uri
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: https://openapi-generator.tech
        credits: 6.027456183070403
        creditsFree: 0.8008281904610115
        name: name
        modifiedBy: https://openapi-generator.tech
        id: id
        state: Unallocated
      properties:
        id:
          type: string
        name:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        createdOn:
          format: date-time
          type: string
        createdBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        state:
          enum:
          - Unallocated
          - Allocated
          - Expired
          type: string
        project:
          format: uri
          type: string
          x-resource:
            kind: iam/project
        uri:
          type: string
        creditsFree:
          type: number
        credits:
          type: number
        channel:
          enum:
          - bank
          - dotpay
          - promo
          - paypal
          - ecard
          - przelewy24
          type: string
        amount:
          type: number
      type: object
    invoice:
      example:
        seller:
          address:
            zipcode: zipcode
            country: country
            city: city
            street: street
          nip: nip
          company: company
        summary: summary
        invoiceInfo: invoiceInfo
        payments:
        - payments
        - payments
        project: project
        duplicate:
          id: id
          createdOn: createdOn
        type: vat
        uri: uri
        buyer:
          address:
            zipcode: zipcode
            country: country
            city: city
            street: street
          nip: nip
          company: company
          email: email
        corrections:
        - corrections
        - corrections
        __array__: __array__
        additionalInfo: additionalInfo
        id: id
        invoiceNo: invoiceNo
        issueDate: 2000-01-23T04:56:07.000+00:00
        items:
        - brutto: brutto
          quantity: 0.8008281904610115
          netto: netto
          price: price
          vatRate: vatRate
          name: name
          vatAmount: vatAmount
        - brutto: brutto
          quantity: 0.8008281904610115
          netto: netto
          price: price
          vatRate: vatRate
          name: name
          vatAmount: vatAmount
      properties:
        id:
          type: string
        additionalInfo:
          type: string
        corrections:
          items:
            format: ObjectId
            type: string
          type: array
        invoiceInfo:
          type: string
        invoiceNo:
          type: string
        issueDate:
          format: date-time
          type: string
        payments:
          items:
            format: ObjectId
            type: string
          type: array
        seller:
          $ref: '#/components/schemas/invoice_seller'
        items:
          items:
            $ref: '#/components/schemas/invoice_items'
          type: array
        buyer:
          $ref: '#/components/schemas/invoice_buyer'
        type:
          enum:
          - vat
          - correction
          type: string
        summary:
          type: string
        project:
          format: ObjectId
          type: string
        duplicate:
          $ref: '#/components/schemas/invoice_duplicate'
        uri:
          type: string
        __array__:
          type: string
      type: object
    proforma:
      example:
        seller:
          address:
            zipcode: zipcode
            country: country
            city: city
            street: street
          nip: nip
          iban: iban
          company: company
        summary: summary
        __array__:
          summary: summary
          project: project
          id: id
          invoiceNo: invoiceNo
          issueDate: 2000-01-23T04:56:07.000+00:00
          uri: uri
        project: project
        id: id
        invoiceNo: invoiceNo
        issueDate: 2000-01-23T04:56:07.000+00:00
        items:
        - brutto: brutto
          quantity: 0.8008281904610115
          netto: netto
          price: price
          vatRate: vatRate
          name: name
          vatAmount: vatAmount
        - brutto: brutto
          quantity: 0.8008281904610115
          netto: netto
          price: price
          vatRate: vatRate
          name: name
          vatAmount: vatAmount
        uri: uri
        buyer:
          address:
            zipcode: zipcode
            country: country
            city: city
            street: street
          nip: nip
          company: company
          email: email
      properties:
        id:
          type: string
        invoiceNo:
          type: string
        seller:
          $ref: '#/components/schemas/proforma_seller'
        buyer:
          $ref: '#/components/schemas/invoice_buyer'
        issueDate:
          format: date-time
          type: string
        items:
          items:
            $ref: '#/components/schemas/invoice_items'
          type: array
        summary:
          type: string
        project:
          format: ObjectId
          type: string
        uri:
          type: string
        __array__:
          $ref: '#/components/schemas/proforma___array__'
      type: object
    project.billing:
      properties:
        credits:
          type: number
        creditsBonus:
          type: number
        creditLimit:
          type: number
      type: object
    organisation.billing:
      properties:
        currency:
          type: string
        company:
          type: string
        email:
          type: string
        address:
          $ref: '#/components/schemas/invoice_seller_address'
        nip:
          type: string
      type: object
    agentResource:
      example:
        name: name
        project: project
        id: id
        state: state
        createdOn: createdOn
      properties:
        id:
          type: string
        name:
          type: string
        state:
          type: string
        createdOn:
          type: string
        project:
          type: string
      type: object
    agentResourceEvent:
      example:
        name: name
        project: project
        id: id
        state: state
        createdOn: createdOn
      properties:
        id:
          type: string
        name:
          type: string
        state:
          type: string
        createdOn:
          type: string
        project:
          type: string
      type: object
    authToken:
      example:
        access:
        - path: path
          method: ALL
        - path: path
          method: ALL
        createdBy: createdBy
        clientIp: clientIp
        name: name
        userAgent: userAgent
        id: id
        expiry: 2000-01-23T04:56:07.000+00:00
        createdOn: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        expiry:
          format: date-time
          type: string
        createdBy:
          type: string
        createdOn:
          format: date-time
          type: string
        access:
          items:
            $ref: '#/components/schemas/authToken_access'
          type: array
        name:
          type: string
        clientIp:
          type: string
        userAgent:
          type: string
      type: object
    iam_user_update:
      format: patch user
      properties:
        phone:
          title: User phone
          type: string
          x-permissions:
          - iam/user.phone/update
        lang:
          enum:
          - en
          - pl
          title: User lang
          type: string
          x-permissions:
          - iam/user.lang/update
      type: object
    resourceService:
      example:
        data:
          key: data
        name: name
        id: id
        type: type
        sourceService: https://openapi-generator.tech
        billing: https://openapi-generator.tech
      properties:
        id:
          title: ResourceService id
          type: string
        name:
          title: ResourceService name
          type: string
        type:
          title: ResourceService type
          type: string
        sourceService:
          format: uri
          title: ResourceService sourceService
          type: string
          x-resource:
            kind: billing/service
        billing:
          format: uri
          title: ResourceService billing
          type: string
          x-resource:
            kind: billing/instance
        data:
          additionalProperties:
            type: string
          title: ResourceService data
          type: object
      type: object
    tag:
      example:
        id: id
        value: value
        key: key
      properties:
        id:
          readOnly: true
          title: Tag id
          type: string
        key:
          title: Tag key
          type: string
        value:
          title: Tag value
          type: string
      required:
      - id
      - key
      - value
      type: object
    tag_array:
      items:
        $ref: '#/components/schemas/tag'
      title: Tag collection
      type: array
    iam_user_credential_patch:
      properties:
        name:
          title: Credential name
          type: string
          x-permissions:
          - iam/user.credential.name/update
      required:
      - name
      type: object
    user:
      example:
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        phone: phone
        name: name
        limit:
          organisation:
            count: 0.8008281904610115
        id: id
        tag:
        - id: id
          value: value
          key: key
        - id: id
          value: value
          key: key
        lang: en
        createdOn: 2000-01-23T04:56:07.000+00:00
        uri: uri
      properties:
        id:
          type: string
        name:
          type: string
        createdOn:
          format: date-time
          type: string
        modifiedOn:
          format: date-time
          type: string
        lang:
          default: en
          enum:
          - en
          - pl
          type: string
        phone:
          type: string
        limit:
          $ref: '#/components/schemas/user_limit'
        uri:
          type: string
        tag:
          items:
            $ref: '#/components/schemas/tag'
          type: array
          x-permissions:
          - iam/user.tag/list
      type: object
    project.feature:
      properties:
        earlyAdopter:
          default: false
          title: Feature earlyAdopter
          type: boolean
      type: object
    project.threshold:
      example:
        name: name
        id: id
        type: type
        value: 0.8008281904610115
        uri: uri
      properties:
        id:
          readOnly: true
          title: Threshold id
          type: string
        name:
          readOnly: true
          title: Threshold name
          type: string
        type:
          readOnly: true
          title: Threshold type
          type: string
        value:
          title: Threshold value
          type: number
        uri:
          readOnly: true
          title: Threshold uri
          type: string
      type: object
    project.credential:
      example:
        createdBy: createdBy
        name: name
        fingerprint: fingerprint
        id: id
        type: ssh
        createdOn: 2000-01-23T04:56:07.000+00:00
        value: value
        token: token
      format: credential
      properties:
        id:
          readOnly: true
          title: Credential id
          type: string
        name:
          title: Credential name
          type: string
        createdBy:
          readOnly: true
          title: Credential createdBy
          type: string
        createdOn:
          format: date-time
          readOnly: true
          title: Credential createdOn
          type: string
        type:
          enum:
          - ssh
          title: Credential type
          type: string
        value:
          title: Credential value
          type: string
          writeOnly: true
        fingerprint:
          readOnly: true
          title: Credential fingerprint
          type: string
        token:
          title: Credential token
          type: string
      required:
      - name
      - type
      - value
      type: object
    quota:
      example:
        metric:
          unit: unit
          key: key
        usage: 0.8008281904610115
        name: name
        limit:
          effective: 5.962133916683182
          user: 1.4658129805029452
          platform: 6.027456183070403
        id: id
      properties:
        id:
          title: Quota id
          type: string
        name:
          title: Quota name
          type: string
        metric:
          $ref: '#/components/schemas/Quota_metric'
        usage:
          title: Quota usage
          type: number
        limit:
          $ref: '#/components/schemas/Quota_limit'
      type: object
    quotaLimit:
      example:
        effective: 6.027456183070403
        user: 0.8008281904610115
      properties:
        user:
          title: QuotaLimit user
          type: number
        effective:
          readOnly: true
          title: QuotaLimit effective
          type: number
      type: object
    invitation:
      example:
        resource: resource
        id: id
        email: email
      properties:
        id:
          readOnly: true
          title: Invitation id
          type: string
        email:
          title: Invitation email
          type: string
        resource:
          title: Invitation resource
          type: string
      required:
      - email
      - id
      - resource
      type: object
    ownership:
      example:
        id: id
        user: user
      properties:
        id:
          title: Ownership id
          type: string
        user:
          title: Ownership user
          type: string
      required:
      - id
      - user
      type: object
    iam_project_create:
      format: create project
      properties:
        name:
          title: Project name
          type: string
        organisation:
          format: uri
          title: Project organisation
          type: string
          x-resource:
            kind: iam/organisation
          x-permissions:
          - iam/project/create
        tag:
          items:
            $ref: '#/components/schemas/tag'
          title: Tag collection
          type: array
      required:
      - name
      - organisation
      type: object
    iam_project_update:
      format: patch project
      properties:
        name:
          title: Project name
          type: string
          x-permissions:
          - iam/project.name/update
      type: object
    attempt:
      properties:
        id:
          title: Attempt id
          type: string
        status:
          title: Attempt status
          type: number
        error:
          default: false
          title: Attempt error
          type: boolean
        stdout:
          additionalProperties:
            type: string
          title: Attempt stdout
          type: object
        stderr:
          additionalProperties:
            type: string
          title: Attempt stderr
          type: object
        createdOn:
          format: date-time
          title: Attempt createdOn
          type: string
        agent:
          format: uri
          title: Attempt agent
          type: string
          x-resource:
            kind: provider/agent
      type: object
    iam_project_threshold_create:
      properties:
        id:
          readOnly: true
          title: Threshold id
          type: string
        name:
          readOnly: true
          title: Threshold name
          type: string
        type:
          readOnly: true
          title: Threshold type
          type: string
        value:
          title: Threshold value
          type: number
        uri:
          readOnly: true
          title: Threshold uri
          type: string
      type: object
    iam_project_credentialStore_patch:
      properties:
        name:
          title: CredentialStore name
          type: string
          x-permissions:
          - iam/project.credentialStore.name/update
      required:
      - name
      type: object
    iam_project_quota_limit_patch:
      properties:
        user:
          title: Limit user
          type: number
          x-permissions:
          - iam/project.quota.user/update
        effective:
          readOnly: true
          title: Limit effective
          type: number
          x-permissions:
          - iam/project.quota.effective/update
      type: object
    iam_project_invitation_accept:
      properties:
        token:
          title: Invitation token
          type: string
      required:
      - token
      type: object
    iam_project_ownership_create:
      properties:
        email:
          format: email
          pattern: /^[\w\+\.-]+@([\w-]+\.)+[\w-]+$/
          title: Ownership email
          type: string
      required:
      - email
      type: object
    project:
      example:
        bankAccount: bankAccount
        networkAcl:
        - name: name
          id: id
          type: subnet
          value: value
        - name: name
          id: id
          type: subnet
          value: value
        flavour: flavour
        organisation: https://openapi-generator.tech
        createdOn: 2000-01-23T04:56:07.000+00:00
        uri: uri
        billing:
          creditsBonus: 6.027456183070403
          credits: 0.8008281904610115
          creditLimit: 1.4658129805029452
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        transfer:
          organisation: organisation
        createdBy: https://openapi-generator.tech
        compliance:
          journal: journal
        name: name
        modifiedBy: https://openapi-generator.tech
        id: id
        state: Active
        tag:
        - id: id
          value: value
          key: key
        - id: id
          value: value
          key: key
      properties:
        id:
          type: string
        name:
          type: string
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        createdOn:
          format: date-time
          type: string
        createdBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        state:
          enum:
          - Active
          - Inactive
          - Limited
          type: string
        organisation:
          format: uri
          type: string
          x-resource:
            kind: iam/organisation
        uri:
          type: string
        bankAccount:
          type: string
        billing:
          $ref: '#/components/schemas/project_billing'
        networkAcl:
          items:
            $ref: '#/components/schemas/project_networkAcl'
          type: array
        compliance:
          $ref: '#/components/schemas/project_compliance'
        transfer:
          $ref: '#/components/schemas/project_transfer'
        tag:
          items:
            $ref: '#/components/schemas/tag'
          type: array
          x-permissions:
          - iam/project.tag/list
      type: object
    support.message:
      example:
        date: 2000-01-23T04:56:07.000+00:00
        data:
          mime: text/plain
          body: body
          url: url
        origin: origin
        id: id
        type: text
        user: user
      properties:
        id:
          readOnly: true
          title: Message id
          type: string
        type:
          enum:
          - text
          - attachment
          title: Message type
          type: string
        user:
          readOnly: true
          title: Message user
          type: string
        data:
          $ref: '#/components/schemas/Message_data'
        origin:
          readOnly: true
          title: Message origin
          type: string
        date:
          format: date-time
          readOnly: true
          title: Message date
          type: string
      required:
      - type
      type: object
    support_project_ticket_create:
      format: create ticket
      properties:
        type:
          enum:
          - sales
          - billing
          - service support
          title: Ticket type
          type: string
        subject:
          title: Ticket subject
          type: string
        message:
          format: text
          title: Ticket message
          type: string
      required:
      - message
      - subject
      - type
      type: object
    ticket:
      example:
        modifiedOn: modifiedOn
        createdBy: createdBy
        subject: subject
        project: project
        modifiedBy: modifiedBy
        id: id
        state: open
        type: type
        createdOn: createdOn
      properties:
        id:
          type: string
        type:
          type: string
        state:
          enum:
          - open
          - closed
          type: string
        subject:
          type: string
        project:
          type: string
        createdOn:
          type: string
        createdBy:
          type: string
        modifiedOn:
          type: string
        modifiedBy:
          type: string
      type: object
    iam_organisation_create:
      format: create organisation
      properties:
        name:
          title: Organisation name
          type: string
        billing:
          $ref: '#/components/schemas/Organisation_billing'
      required:
      - name
      type: object
    iam_organisation_update:
      format: patch organisation
      properties:
        name:
          title: Organisation name
          type: string
          x-permissions:
          - iam/organisation.name/update
        billing:
          $ref: '#/components/schemas/Organisation_billing_1'
      type: object
    iam_organisation_transfer_accept:
      format: Action transfer_accept
      properties:
        payment:
          title: Organisation payment
          type: string
        project:
          title: Organisation project
          type: string
      required:
      - payment
      - project
      type: object
    iam_organisation_payment_allocate:
      properties:
        project:
          format: uri
          title: Payment project
          type: string
          x-resource:
            kind: iam/project
            filter:
              organisation: $request.path.organisationId
          x-permissions:
          - iam/project/get
      required:
      - project
      type: object
    iam_organisation_proforma_create:
      properties:
        amount:
          minimum: 1
          title: Proforma amount
          type: number
        project:
          format: uri
          title: Proforma project
          type: string
          x-resource:
            kind: iam/project
          x-permissions:
          - iam/project/get
      required:
      - amount
      - project
      type: object
    iam_organisation_invitation_accept:
      properties:
        token:
          title: Invitation token
          type: string
      required:
      - token
      type: object
    iam_organisation_ownership_create:
      properties:
        email:
          format: email
          pattern: /^[\w\+\.-]+@([\w-]+\.)+[\w-]+$/
          title: Ownership email
          type: string
      required:
      - email
      type: object
    organisation:
      example:
        bankAccount: bankAccount
        flavour: flavour
        createdOn: 2000-01-23T04:56:07.000+00:00
        uri: uri
        billing:
          address:
            zipcode: zipcode
            country: country
            city: city
            street: street
          nip: nip
          currency: currency
          company: company
          email: email
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        transfer:
          name: name
          id: id
        createdBy: https://openapi-generator.tech
        name: name
        modifiedBy: https://openapi-generator.tech
        id: id
        state: Active
        tag:
        - id: id
          value: value
          key: key
        - id: id
          value: value
          key: key
      properties:
        id:
          type: string
        name:
          type: string
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        createdOn:
          format: date-time
          type: string
        createdBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        state:
          enum:
          - Active
          - Inactive
          - Limited
          type: string
        uri:
          type: string
        billing:
          $ref: '#/components/schemas/organisation_billing'
        transfer:
          $ref: '#/components/schemas/organisation_transfer'
        bankAccount:
          type: string
        tag:
          items:
            $ref: '#/components/schemas/tag'
          type: array
          x-permissions:
          - iam/organisation.tag/list
      type: object
    agent.credential:
      example:
        createdBy: createdBy
        name: name
        fingerprint: fingerprint
        id: id
        type: ssh
        createdOn: 2000-01-23T04:56:07.000+00:00
        value: value
        token: token
      format: credential
      properties:
        id:
          readOnly: true
          title: Credential id
          type: string
        name:
          title: Credential name
          type: string
        createdBy:
          readOnly: true
          title: Credential createdBy
          type: string
        createdOn:
          format: date-time
          readOnly: true
          title: Credential createdOn
          type: string
        type:
          enum:
          - ssh
          title: Credential type
          type: string
        value:
          title: Credential value
          type: string
          writeOnly: true
        fingerprint:
          readOnly: true
          title: Credential fingerprint
          type: string
        token:
          title: Credential token
          type: string
      required:
      - name
      - type
      - value
      type: object
    enabledService:
      example:
        service: https://openapi-generator.tech
        name: name
        id: id
      properties:
        id:
          readOnly: true
          title: EnabledService id
          type: string
        name:
          readOnly: true
          title: EnabledService name
          type: string
        service:
          format: uri
          title: EnabledService service
          type: string
          x-resource:
            kind: billing/service
      required:
      - id
      - name
      type: object
    provider_project_agent_create:
      format: create agent
      properties:
        name:
          title: Agent name
          type: string
        service:
          format: uri
          title: Agent service
          type: string
          x-resource:
            kind: billing/service
            filter:
              kind: provider/agent
              type: flavour
        tag:
          items:
            $ref: '#/components/schemas/tag'
          title: Tag collection
          type: array
      required:
      - name
      - service
      type: object
    provider_project_agent_update:
      format: patch agent
      properties:
        name:
          title: Agent name
          type: string
          x-permissions:
          - provider/agent.name/update
      type: object
    provider_project_agent_transfer:
      format: Action transfer
      properties:
        project:
          format: uri
          title: Agent project
          type: string
          x-resource:
            kind: iam/project
          x-permissions:
          - provider/agent/create
      required:
      - project
      type: object
    provider_project_agent_credential_patch:
      properties:
        name:
          title: Credential name
          type: string
          x-permissions:
          - provider/agent.credential.name/update
      required:
      - name
      type: object
    agent:
      example:
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        flavour: flavour
        createdBy: https://openapi-generator.tech
        name: name
        project: https://openapi-generator.tech
        modifiedBy: https://openapi-generator.tech
        id: id
        state: Online
        tag:
        - id: id
          value: value
          key: key
        - id: id
          value: value
          key: key
        type: type
        createdOn: 2000-01-23T04:56:07.000+00:00
        uri: https://openapi-generator.tech
      properties:
        id:
          type: string
        name:
          type: string
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        createdOn:
          format: date-time
          type: string
        createdBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        state:
          enum:
          - Online
          - Suspended
          - Unknown
          - Processing
          - NotCreated
          type: string
        project:
          format: uri
          type: string
          x-resource:
            kind: iam/project
        uri:
          format: uri
          type: string
          x-resource:
            kind: provider/agent
        type:
          type: string
        tag:
          items:
            $ref: '#/components/schemas/tag'
          type: array
          x-permissions:
          - provider/agent.tag/list
      type: object
    database.credential:
      example:
        createdBy: createdBy
        name: name
        fingerprint: fingerprint
        id: id
        type: mysql
        createdOn: 2000-01-23T04:56:07.000+00:00
        value: value
        token: token
      format: credential
      properties:
        id:
          readOnly: true
          title: Credential id
          type: string
        name:
          title: Credential name
          type: string
        createdBy:
          readOnly: true
          title: Credential createdBy
          type: string
        createdOn:
          format: date-time
          readOnly: true
          title: Credential createdOn
          type: string
        type:
          enum:
          - mysql
          - plain
          - postgres
          title: Credential type
          type: string
        value:
          title: Credential value
          type: string
          writeOnly: true
        fingerprint:
          readOnly: true
          title: Credential fingerprint
          type: string
        token:
          title: Credential token
          type: string
      required:
      - name
      - type
      - value
      type: object
    database_project_instance_create:
      format: create instance
      properties:
        name:
          title: Instance name
          type: string
        service:
          format: uri
          title: Instance service
          type: string
          x-resource:
            kind: billing/service
            filter:
              kind: database/instance
              type: flavour
        tag:
          items:
            $ref: '#/components/schemas/tag'
          title: Tag collection
          type: array
      required:
      - name
      - service
      type: object
    database_project_instance_update:
      format: patch instance
      properties:
        name:
          title: Instance name
          type: string
          x-permissions:
          - database/instance.name/update
      type: object
    database_project_instance_transfer:
      format: Action transfer
      properties:
        project:
          format: uri
          title: Instance project
          type: string
          x-resource:
            kind: iam/project
          x-permissions:
          - database/instance/create
      required:
      - project
      type: object
    database_project_instance_credential_patch:
      properties:
        name:
          title: Credential name
          type: string
          x-permissions:
          - database/instance.credential.name/update
      required:
      - name
      type: object
    database:
      example:
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        flavour: flavour
        createdBy: https://openapi-generator.tech
        fqdn: fqdn
        name: name
        project: https://openapi-generator.tech
        modifiedBy: https://openapi-generator.tech
        id: id
        state: Running
        tag:
        - id: id
          value: value
          key: key
        - id: id
          value: value
          key: key
        createdOn: 2000-01-23T04:56:07.000+00:00
        uri: https://openapi-generator.tech
      properties:
        id:
          type: string
        name:
          type: string
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        createdOn:
          format: date-time
          type: string
        createdBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        state:
          enum:
          - Running
          - "Off"
          - Unknown
          - Processing
          - NotCreated
          type: string
        project:
          format: uri
          type: string
          x-resource:
            kind: iam/project
        uri:
          format: uri
          type: string
          x-resource:
            kind: database/instance
        fqdn:
          type: string
        tag:
          items:
            $ref: '#/components/schemas/tag'
          type: array
          x-permissions:
          - database/instance.tag/list
      type: object
    journal.credential:
      example:
        createdBy: createdBy
        name: name
        fingerprint: fingerprint
        id: id
        type: sha512
        createdOn: 2000-01-23T04:56:07.000+00:00
        value: value
        token: token
      format: credential
      properties:
        id:
          readOnly: true
          title: Credential id
          type: string
        name:
          title: Credential name
          type: string
        createdBy:
          readOnly: true
          title: Credential createdBy
          type: string
        createdOn:
          format: date-time
          readOnly: true
          title: Credential createdOn
          type: string
        type:
          enum:
          - sha512
          - plain
          title: Credential type
          type: string
        value:
          title: Credential value
          type: string
          writeOnly: true
        fingerprint:
          readOnly: true
          title: Credential fingerprint
          type: string
        token:
          title: Credential token
          type: string
      required:
      - name
      - type
      - value
      type: object
    insight_project_journal_create:
      format: create journal
      properties:
        name:
          title: Journal name
          type: string
        service:
          default: 5c9cc2d0255c16c3e899a4ea
          format: uri
          title: Journal service
          type: string
          x-resource:
            kind: billing/service
            filter:
              kind: insight/journal
              type: flavour
        retention:
          title: Journal retention
          type: number
        tag:
          items:
            $ref: '#/components/schemas/tag'
          title: Tag collection
          type: array
      required:
      - name
      type: object
    insight_project_journal_update:
      format: patch journal
      properties:
        name:
          title: Journal name
          type: string
          x-permissions:
          - insight/journal.name/update
        retention:
          title: Journal retention
          type: number
          x-permissions:
          - insight/journal.retention/update
      type: object
    insight_project_journal_transfer:
      format: Action transfer
      properties:
        project:
          format: uri
          title: Journal project
          type: string
          x-resource:
            kind: iam/project
          x-permissions:
          - insight/journal/create
      required:
      - project
      type: object
    insight_project_journal_credential_patch:
      properties:
        name:
          title: Credential name
          type: string
          x-permissions:
          - insight/journal.credential.name/update
      required:
      - name
      type: object
    journal:
      example:
        sizeUsed: 0.8008281904610115
        flavour: flavour
        fqdn: fqdn
        project: https://openapi-generator.tech
        createdOn: 2000-01-23T04:56:07.000+00:00
        uri: https://openapi-generator.tech
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: https://openapi-generator.tech
        name: name
        modifiedBy: https://openapi-generator.tech
        id: id
        state: Online
        tag:
        - id: id
          value: value
          key: key
        - id: id
          value: value
          key: key
        retention: 6.027456183070403
      properties:
        id:
          type: string
        name:
          type: string
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        createdOn:
          format: date-time
          type: string
        createdBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        state:
          enum:
          - Online
          - Unknown
          - Processing
          - NotCreated
          type: string
        project:
          format: uri
          type: string
          x-resource:
            kind: iam/project
        uri:
          format: uri
          type: string
          x-resource:
            kind: insight/journal
        sizeUsed:
          type: number
        retention:
          type: number
        fqdn:
          type: string
        tag:
          items:
            $ref: '#/components/schemas/tag'
          type: array
          x-permissions:
          - insight/journal.tag/list
      type: object
    container.repository:
      example:
        name: name
        id: id
      properties:
        id:
          readOnly: true
          title: Repository id
          type: string
        name:
          title: Repository name
          type: string
      required:
      - name
      type: object
    container.image:
      example:
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        name: name
        digest: digest
        id: id
        createdOn: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          readOnly: true
          title: Image id
          type: string
        name:
          title: Image name
          type: string
        digest:
          title: Image digest
          type: string
        createdOn:
          format: date-time
          title: Image createdOn
          type: string
        modifiedOn:
          format: date-time
          title: Image modifiedOn
          type: string
      required:
      - createdOn
      - digest
      - modifiedOn
      - name
      type: object
    registry.credential:
      example:
        createdBy: createdBy
        name: name
        fingerprint: fingerprint
        id: id
        type: sha512
        createdOn: 2000-01-23T04:56:07.000+00:00
        value: value
        token: token
      format: credential
      properties:
        id:
          readOnly: true
          title: Credential id
          type: string
        name:
          title: Credential name
          type: string
        createdBy:
          readOnly: true
          title: Credential createdBy
          type: string
        createdOn:
          format: date-time
          readOnly: true
          title: Credential createdOn
          type: string
        type:
          enum:
          - sha512
          - plain
          title: Credential type
          type: string
        value:
          title: Credential value
          type: string
          writeOnly: true
        fingerprint:
          readOnly: true
          title: Credential fingerprint
          type: string
        token:
          title: Credential token
          type: string
      required:
      - name
      - type
      - value
      type: object
    domain:
      example:
        id: id
        value: value
      properties:
        id:
          readOnly: true
          title: Domain id
          type: string
        value:
          title: Domain value
          type: string
      required:
      - value
      type: object
    container_project_registry_create:
      format: create registry
      properties:
        name:
          title: Registry name
          type: string
        service:
          format: uri
          title: Registry service
          type: string
          x-resource:
            kind: billing/service
            filter:
              kind: container/registry
              type: flavour
        tag:
          items:
            $ref: '#/components/schemas/tag'
          title: Tag collection
          type: array
      required:
      - name
      - service
      type: object
    container_project_registry_update:
      format: patch registry
      properties:
        name:
          title: Registry name
          type: string
          x-permissions:
          - container/registry.name/update
      type: object
    container_project_registry_transfer:
      format: Action transfer
      properties:
        project:
          format: uri
          title: Registry project
          type: string
          x-resource:
            kind: iam/project
          x-permissions:
          - container/registry/create
      required:
      - project
      type: object
    container_project_registry_credential_patch:
      properties:
        name:
          title: Credential name
          type: string
          x-permissions:
          - container/registry.credential.name/update
      required:
      - name
      type: object
    registry:
      example:
        sizeUsed: 0.8008281904610115
        flavour: flavour
        fqdn: fqdn
        project: https://openapi-generator.tech
        createdOn: 2000-01-23T04:56:07.000+00:00
        uri: https://openapi-generator.tech
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: https://openapi-generator.tech
        name: name
        modifiedBy: https://openapi-generator.tech
        id: id
        state: Running
        tag:
        - id: id
          value: value
          key: key
        - id: id
          value: value
          key: key
      properties:
        id:
          type: string
        name:
          type: string
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        createdOn:
          format: date-time
          type: string
        createdBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        state:
          enum:
          - Running
          - "Off"
          - Unknown
          - Processing
          - NotCreated
          type: string
        project:
          format: uri
          type: string
          x-resource:
            kind: iam/project
        uri:
          format: uri
          type: string
          x-resource:
            kind: container/registry
        sizeUsed:
          type: number
        fqdn:
          type: string
        tag:
          items:
            $ref: '#/components/schemas/tag'
          type: array
          x-permissions:
          - container/registry.tag/list
      type: object
    website.snapshot:
      example:
        name: name
        id: id
        used: 0.8008281904610115
        creation: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          readOnly: true
          title: Snapshot id
          type: string
        name:
          pattern: /^[\w-]+$/
          title: Snapshot name
          type: string
        creation:
          format: date-time
          readOnly: true
          title: Snapshot creation
          type: string
        used:
          readOnly: true
          title: Snapshot used
          type: number
      required:
      - name
      type: object
    website.env:
      example:
        name: name
        id: id
        value: value
      properties:
        id:
          readOnly: true
          title: Env id
          type: string
        name:
          title: Env name
          type: string
        value:
          title: Env value
          type: string
      required:
      - name
      - value
      type: object
    website.link:
      example:
        actor: https://openapi-generator.tech
        purpose: logs
        resource: https://openapi-generator.tech
        id: id
      properties:
        id:
          readOnly: true
          title: Link id
          type: string
        actor:
          format: uri
          title: Link actor
          type: string
          x-resource:
            kind: iam/sa
          x-permissions:
          - iam/sa/use
        purpose:
          enum:
          - logs
          title: Link purpose
          type: string
        resource:
          format: uri
          title: Link resource
          type: string
          x-resource:
            kind: insight/journal
          x-permissions:
          - insight/journal/use
      required:
      - actor
      - purpose
      - resource
      type: object
    website.sideapp:
      example:
        flavour: flavour
        id: id
        url: url
      properties:
        id:
          readOnly: true
          title: Sideapp id
          type: string
        flavour:
          title: Sideapp flavour
          type: string
        url:
          description: Only available on the creation response
          readOnly: true
          title: Sideapp url
          type: string
      required:
      - flavour
      type: object
    website.credential:
      example:
        createdBy: createdBy
        name: name
        fingerprint: fingerprint
        id: id
        type: ssh
        createdOn: 2000-01-23T04:56:07.000+00:00
        value: value
        token: token
      format: credential
      properties:
        id:
          readOnly: true
          title: Credential id
          type: string
        name:
          title: Credential name
          type: string
        createdBy:
          readOnly: true
          title: Credential createdBy
          type: string
        createdOn:
          format: date-time
          readOnly: true
          title: Credential createdOn
          type: string
        type:
          enum:
          - ssh
          - sha512
          - plain
          title: Credential type
          type: string
        value:
          title: Credential value
          type: string
          writeOnly: true
        fingerprint:
          readOnly: true
          title: Credential fingerprint
          type: string
        token:
          title: Credential token
          type: string
      required:
      - name
      - type
      - value
      type: object
    metric:
      example:
        unit: unit
        name: name
        id: id
        dimension:
        - name: name
          description: description
        - name: name
          description: description
      properties:
        id:
          title: Metric id
          type: string
        name:
          title: Metric name
          type: string
        unit:
          title: Metric unit
          type: string
        dimension:
          items:
            $ref: '#/components/schemas/metric_dimension'
          title: Dimension collection
          type: array
      required:
      - id
      - name
      - unit
      type: object
    serie:
      example:
        time: 2000-01-23T04:56:07.000+00:00
        value: 0.8008281904610115
      properties:
        time:
          format: date-time
          title: Serie time
          type: string
        value:
          title: Serie value
          type: number
      required:
      - time
      - value
      type: object
    website_project_instance_create:
      format: create instance
      properties:
        name:
          title: Instance name
          type: string
        service:
          format: uri
          title: Instance service
          type: string
          x-resource:
            kind: billing/service
            filter:
              kind: website/instance
              type: flavour
        image:
          format: uri
          title: Instance image
          type: string
          x-resource:
            kind: website/image
        source:
          format: uri
          title: Instance source
          type: string
          x-resource:
            kind: website/instance.snapshot
          x-permissions:
          - website/instance.snapshot/use
        env:
          items:
            $ref: '#/components/schemas/website.env'
          title: Env collection
          type: array
        tag:
          items:
            $ref: '#/components/schemas/tag'
          title: Tag collection
          type: array
      required:
      - image
      - name
      - service
      type: object
    website_project_instance_update:
      format: patch instance
      properties:
        name:
          title: Instance name
          type: string
          x-permissions:
          - website/instance.name/update
        image:
          format: uri
          title: Instance image
          type: string
          x-resource:
            kind: website/image
          x-permissions:
          - website/instance.image/update
      type: object
    website_project_instance_transfer:
      format: Action transfer
      properties:
        project:
          format: uri
          title: Instance project
          type: string
          x-resource:
            kind: iam/project
          x-permissions:
          - website/instance/create
      required:
      - project
      type: object
    website_project_instance_snapshot_download:
      properties:
        incremental:
          pattern: /^[\w-]+$/
          title: Snapshot incremental
          type: string
      type: object
    website_project_instance_credential_patch:
      properties:
        name:
          title: Credential name
          type: string
          x-permissions:
          - website/instance.credential.name/update
      required:
      - name
      type: object
    website:
      example:
        image: image
        flavour: flavour
        fqdn: fqdn
        project: https://openapi-generator.tech
        createdOn: 2000-01-23T04:56:07.000+00:00
        uri: https://openapi-generator.tech
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: https://openapi-generator.tech
        name: name
        modifiedBy: https://openapi-generator.tech
        id: id
        state: Running
        tag:
        - id: id
          value: value
          key: key
        - id: id
          value: value
          key: key
      properties:
        id:
          type: string
        name:
          type: string
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        createdOn:
          format: date-time
          type: string
        createdBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        state:
          enum:
          - Running
          - Restarting
          - "Off"
          - Unknown
          - Processing
          - NotCreated
          type: string
        project:
          format: uri
          type: string
          x-resource:
            kind: iam/project
        uri:
          format: uri
          type: string
          x-resource:
            kind: website/instance
        image:
          type: string
        fqdn:
          type: string
        tag:
          items:
            $ref: '#/components/schemas/tag'
          type: array
          x-permissions:
          - website/instance.tag/list
      type: object
    dns.record:
      example:
        id: id
        content: content
        enabled: true
      properties:
        id:
          readOnly: true
          title: Record id
          type: string
        content:
          description: |-
            Template string:
            - {{REQUEST_IP}} is replaced by the requester ip address.
          title: Record content
          type: string
        enabled:
          default: true
          title: Record enabled
          type: boolean
      required:
      - content
      type: object
    dns.record_array:
      items:
        $ref: '#/components/schemas/dns.record'
      title: Record collection
      type: array
    dns.recordset:
      example:
        record:
        - id: id
          content: content
          enabled: true
        - id: id
          content: content
          enabled: true
        name: name
        id: id
        type: A
        ttl: 0.8008281904610115
      properties:
        id:
          readOnly: true
          title: Recordset id
          type: string
        name:
          title: Recordset name
          type: string
        type:
          enum:
          - A
          - AAAA
          - CAA
          - CNAME
          - MX
          - NS
          - PTR
          - SOA
          - SRV
          - TXT
          title: Recordset type
          type: string
        ttl:
          default: 3600
          title: Recordset ttl
          type: number
        record:
          items:
            $ref: '#/components/schemas/dns.record'
          title: Record collection
          type: array
      required:
      - name
      - type
      type: object
    dns_project_zone_create:
      format: create zone
      properties:
        name:
          title: Zone name
          type: string
        service:
          format: uri
          title: Zone service
          type: string
          x-resource:
            kind: billing/service
            filter:
              kind: dns/zone
              type: flavour
        dnsName:
          title: Zone dnsName
          type: string
        source:
          $ref: '#/components/schemas/Zone_source'
        tag:
          items:
            $ref: '#/components/schemas/tag'
          title: Tag collection
          type: array
      required:
      - dnsName
      - name
      - service
      type: object
    dns_project_zone_update:
      format: patch zone
      properties:
        name:
          title: Zone name
          type: string
          x-permissions:
          - dns/zone.name/update
      type: object
    dns_project_zone_recordset_patch:
      properties:
        ttl:
          default: 3600
          title: Recordset ttl
          type: number
          x-permissions:
          - dns/zone.recordset.ttl/update
      type: object
    zone:
      example:
        flavour: flavour
        fqdn: fqdn
        project: https://openapi-generator.tech
        dnsName: dnsName
        createdOn: 2000-01-23T04:56:07.000+00:00
        uri: https://openapi-generator.tech
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: https://openapi-generator.tech
        rrsets:
        - records: records
          name: name
          type: type
          ttl: 0.8008281904610115
        - records: records
          name: name
          type: type
          ttl: 0.8008281904610115
        name: name
        modifiedBy: https://openapi-generator.tech
        nameserver:
        - nameserver
        - nameserver
        id: id
        state: Online
        tag:
        - id: id
          value: value
          key: key
        - id: id
          value: value
          key: key
      properties:
        id:
          type: string
        name:
          type: string
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        createdOn:
          format: date-time
          type: string
        createdBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        state:
          enum:
          - Online
          - Offline
          - Unknown
          - Processing
          - NotCreated
          type: string
        project:
          format: uri
          type: string
          x-resource:
            kind: iam/project
        uri:
          format: uri
          type: string
          x-resource:
            kind: dns/zone
        rrsets:
          items:
            $ref: '#/components/schemas/zone_rrsets'
          type: array
        dnsName:
          type: string
        nameserver:
          items:
            type: string
          type: array
        fqdn:
          type: string
        tag:
          items:
            $ref: '#/components/schemas/tag'
          type: array
          x-permissions:
          - dns/zone.tag/list
      type: object
    storage_project_disk_create:
      format: create disk
      properties:
        name:
          title: Disk name
          type: string
        service:
          format: uri
          title: Disk service
          type: string
          x-resource:
            kind: billing/service
            filter:
              kind: storage/disk
              type: flavour
        size:
          minimum: 1
          title: Disk size
          type: number
        source:
          oneOf:
          - format: uri
            pattern: ^/
            title: disk
            x-resource:
              kind: storage/disk
            x-permission:
            - storage/disk/use
          - format: uri-upload
            pattern: ^http
            title: file
            x-file:
              accept: .vhdx
          title: Disk source
          type: string
        vm:
          format: uri
          title: Disk vm
          type: string
          x-resource:
            kind: compute/vm
          x-permissions:
          - compute/vm/use
        tag:
          items:
            $ref: '#/components/schemas/tag'
          title: Tag collection
          type: array
      required:
      - name
      - service
      - size
      type: object
    storage_project_disk_update:
      format: patch disk
      properties:
        name:
          title: Disk name
          type: string
          x-permissions:
          - storage/disk.name/update
      type: object
    storage_project_disk_resize:
      format: Action resize
      properties:
        size:
          title: Disk size
          type: number
      required:
      - size
      type: object
    storage_project_disk_attach:
      format: Action attach
      properties:
        vm:
          format: uri
          title: Disk vm
          type: string
          x-resource:
            kind: compute/vm
          x-permissions:
          - compute/vm/use
      required:
      - vm
      type: object
    storage_project_disk_transfer:
      format: Action transfer
      properties:
        project:
          format: uri
          title: Disk project
          type: string
          x-resource:
            kind: iam/project
          x-permissions:
          - storage/disk/create
      required:
      - project
      type: object
    disk:
      example:
        metadata:
          source: source
        flavour: flavour
        project: https://openapi-generator.tech
        createdOn: 2000-01-23T04:56:07.000+00:00
        uri: https://openapi-generator.tech
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        size: 0.8008281904610115
        createdBy: https://openapi-generator.tech
        vm: https://openapi-generator.tech
        name: name
        modifiedBy: https://openapi-generator.tech
        id: id
        state: Uploading
        tag:
        - id: id
          value: value
          key: key
        - id: id
          value: value
          key: key
        persistent: true
      properties:
        id:
          type: string
        name:
          type: string
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        createdOn:
          format: date-time
          type: string
        createdBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        state:
          enum:
          - Uploading
          - Online
          - Attached
          - Detached
          - Unknown
          - Processing
          - NotCreated
          type: string
        project:
          format: uri
          type: string
          x-resource:
            kind: iam/project
        uri:
          format: uri
          type: string
          x-resource:
            kind: storage/disk
        size:
          type: number
        vm:
          format: uri
          type: string
          x-resource:
            kind: compute/vm
        persistent:
          type: boolean
        metadata:
          $ref: '#/components/schemas/disk_metadata'
        tag:
          items:
            $ref: '#/components/schemas/tag'
          type: array
          x-permissions:
          - storage/disk.tag/list
      type: object
    networking.rule:
      example:
        filter:
        - filter
        - filter
        external:
        - external
        - external
        internal:
        - internal
        - internal
        name: name
        action: allow
        id: id
        priority: 0.8008281904610115
      properties:
        id:
          readOnly: true
          title: Rule id
          type: string
        name:
          title: Rule name
          type: string
        action:
          enum:
          - allow
          - deny
          title: Rule action
          type: string
        priority:
          title: Rule priority
          type: number
        filter:
          items:
            type: string
          minItems: 1
          title: Filter collection
          type: array
        external:
          items:
            type: string
          minItems: 1
          title: External collection
          type: array
        internal:
          items:
            type: string
          title: Internal collection
          type: array
      required:
      - action
      - external
      - filter
      - name
      - priority
      type: object
    networking.rule_array:
      items:
        $ref: '#/components/schemas/networking.rule'
      title: Rule collection
      type: array
    networking_project_firewall_create:
      format: create firewall
      properties:
        name:
          title: Firewall name
          type: string
        service:
          default: 5bacaf7202deee0c100eda3b
          format: uri
          title: Firewall service
          type: string
          x-resource:
            kind: billing/service
            filter:
              kind: networking/firewall
              type: flavour
        ingress:
          items:
            $ref: '#/components/schemas/networking.rule'
          title: Rule collection
          type: array
        egress:
          items:
            $ref: '#/components/schemas/networking.rule'
          title: Rule collection
          type: array
        tag:
          items:
            $ref: '#/components/schemas/tag'
          title: Tag collection
          type: array
      required:
      - name
      type: object
    networking_project_firewall_update:
      format: patch firewall
      properties:
        name:
          title: Firewall name
          type: string
          x-permissions:
          - networking/firewall.name/update
      type: object
    networking_project_firewall_transfer:
      format: Action transfer
      properties:
        project:
          format: uri
          title: Firewall project
          type: string
          x-resource:
            kind: iam/project
          x-permissions:
          - networking/firewall/create
      required:
      - project
      type: object
    firewall:
      example:
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        flavour: flavour
        createdBy: https://openapi-generator.tech
        name: name
        project: https://openapi-generator.tech
        modifiedBy: https://openapi-generator.tech
        id: id
        state: Attached
        tag:
        - id: id
          value: value
          key: key
        - id: id
          value: value
          key: key
        createdOn: 2000-01-23T04:56:07.000+00:00
        uri: https://openapi-generator.tech
      properties:
        id:
          type: string
        name:
          type: string
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        createdOn:
          format: date-time
          type: string
        createdBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        state:
          enum:
          - Attached
          - Detached
          - Unknown
          - Processing
          - NotCreated
          type: string
        project:
          format: uri
          type: string
          x-resource:
            kind: iam/project
        uri:
          format: uri
          type: string
          x-resource:
            kind: networking/firewall
        tag:
          items:
            $ref: '#/components/schemas/tag'
          type: array
          x-permissions:
          - networking/firewall.tag/list
      type: object
    storage_project_image_create:
      format: create image
      properties:
        name:
          title: Image name
          type: string
        service:
          default: 564639bc052c084e2f2e3266
          format: uri
          title: Image service
          type: string
          x-resource:
            kind: billing/service
            filter:
              kind: storage/image
              type: flavour
        vm:
          format: uri
          title: Image vm
          type: string
          x-resource:
            kind: compute/vm
          x-permissions:
          - compute/vm/use
        replica:
          format: uri
          title: Image replica
          type: string
          x-resource:
            kind: compute/replica
          x-permissions:
          - compute/replica/use
        description:
          title: Image description
          type: string
        tag:
          items:
            $ref: '#/components/schemas/tag'
          title: Tag collection
          type: array
      required:
      - name
      type: object
    storage_project_image_update:
      format: patch image
      properties:
        name:
          title: Image name
          type: string
          x-permissions:
          - storage/image.name/update
        description:
          title: Image description
          type: string
          x-permissions:
          - storage/image.description/update
      type: object
    storage_project_image_transfer:
      format: Action transfer
      properties:
        project:
          format: uri
          title: Image project
          type: string
          x-resource:
            kind: iam/project
          x-permissions:
          - storage/image/create
      required:
      - project
      type: object
    image:
      example:
        flavour: flavour
        disks: 0.8008281904610115
        project: https://openapi-generator.tech
        description: description
        createdOn: 2000-01-23T04:56:07.000+00:00
        uri: https://openapi-generator.tech
        license:
        - license
        - license
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: https://openapi-generator.tech
        fileSize: 6.027456183070403
        name: name
        modifiedBy: https://openapi-generator.tech
        id: id
        state: Online
        tag:
        - id: id
          value: value
          key: key
        - id: id
          value: value
          key: key
      properties:
        id:
          type: string
        name:
          type: string
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        createdOn:
          format: date-time
          type: string
        createdBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        state:
          enum:
          - Online
          - Unknown
          - Processing
          - NotCreated
          type: string
        project:
          format: uri
          type: string
          x-resource:
            kind: iam/project
        uri:
          format: uri
          type: string
          x-resource:
            kind: storage/image
        description:
          type: string
        disks:
          type: number
        fileSize:
          type: number
        license:
          items:
            type: string
          type: array
        tag:
          items:
            $ref: '#/components/schemas/tag'
          type: array
          x-permissions:
          - storage/image.tag/list
      type: object
    networking_project_ip_create:
      format: create ip
      properties:
        network:
          format: uri
          title: Ip network
          type: string
          x-resource:
            kind: networking/network
          x-permissions:
          - networking/network/use
        ptrRecord:
          title: Ip ptrRecord
          type: string
        address:
          pattern: /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/
          title: Ip address
          type: string
        tag:
          items:
            $ref: '#/components/schemas/tag'
          title: Tag collection
          type: array
      type: object
    networking_project_ip_update:
      format: patch ip
      properties:
        ptrRecord:
          title: Ip ptrRecord
          type: string
          x-permissions:
          - networking/ip.ptrRecord/update
      type: object
    networking_project_ip_associate:
      format: Action associate
      properties:
        ip:
          format: uri
          title: Ip ip
          type: string
          x-resource:
            kind: networking/ip
          x-permissions:
          - networking/ip/use
      required:
      - ip
      type: object
    networking_project_ip_transfer:
      format: Action transfer
      properties:
        project:
          format: uri
          title: Ip project
          type: string
          x-resource:
            kind: iam/project
          x-permissions:
          - networking/ip/create
      required:
      - project
      type: object
    ip:
      example:
        address: address
        flavour: flavour
        fqdn: fqdn
        project: https://openapi-generator.tech
        createdOn: 2000-01-23T04:56:07.000+00:00
        uri: https://openapi-generator.tech
        network: https://openapi-generator.tech
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: https://openapi-generator.tech
        ptrRecord: ptrRecord
        associated:
          ip: https://openapi-generator.tech
          netadp: https://openapi-generator.tech
          fip: https://openapi-generator.tech
        name: name
        modifiedBy: https://openapi-generator.tech
        id: id
        state: Associated
        tag:
        - id: id
          value: value
          key: key
        - id: id
          value: value
          key: key
        persistent: true
      properties:
        id:
          type: string
        name:
          type: string
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        createdOn:
          format: date-time
          type: string
        createdBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        state:
          enum:
          - Associated
          - Allocated
          - Unallocated
          type: string
        project:
          format: uri
          type: string
          x-resource:
            kind: iam/project
        uri:
          format: uri
          type: string
          x-resource:
            kind: networking/ip
        address:
          type: string
        fqdn:
          type: string
        network:
          format: uri
          type: string
          x-resource:
            kind: networking/network
        ptrRecord:
          type: string
        persistent:
          type: boolean
        associated:
          $ref: '#/components/schemas/ip_associated'
        tag:
          items:
            $ref: '#/components/schemas/tag'
          type: array
          x-permissions:
          - networking/ip.tag/list
      type: object
    storage_project_iso_create:
      format: create iso
      properties:
        name:
          title: Iso name
          type: string
        source:
          format: uri-upload
          title: Iso source
          type: string
          x-file:
            accept: .iso
        tag:
          items:
            $ref: '#/components/schemas/tag'
          title: Tag collection
          type: array
      required:
      - name
      - source
      type: object
    storage_project_iso_update:
      format: patch iso
      properties:
        name:
          title: Iso name
          type: string
          x-permissions:
          - storage/iso.name/update
      type: object
    storage_project_iso_detach:
      format: Action detach
      properties:
        vm:
          format: uri
          title: Iso vm
          type: string
          x-resource:
            kind: compute/vm
          x-permissions:
          - compute/vm/use
      required:
      - vm
      type: object
    storage_project_iso_transfer:
      format: Action transfer
      properties:
        project:
          format: uri
          title: Iso project
          type: string
          x-resource:
            kind: iam/project
          x-permissions:
          - storage/iso/create
      required:
      - project
      type: object
    iso:
      example:
        metadata:
          source:
            filename: filename
            size: 6.027456183070403
        flavour: flavour
        project: https://openapi-generator.tech
        createdOn: 2000-01-23T04:56:07.000+00:00
        uri: https://openapi-generator.tech
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        size: 0.8008281904610115
        createdBy: https://openapi-generator.tech
        name: name
        modifiedBy: https://openapi-generator.tech
        id: id
        state: Uploading
        tag:
        - id: id
          value: value
          key: key
        - id: id
          value: value
          key: key
      properties:
        id:
          type: string
        name:
          type: string
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        createdOn:
          format: date-time
          type: string
        createdBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        state:
          enum:
          - Uploading
          - Online
          - Unknown
          - Processing
          - NotCreated
          type: string
        project:
          format: uri
          type: string
          x-resource:
            kind: iam/project
        uri:
          format: uri
          type: string
          x-resource:
            kind: storage/iso
        size:
          type: number
        metadata:
          $ref: '#/components/schemas/iso_metadata'
        tag:
          items:
            $ref: '#/components/schemas/tag'
          type: array
          x-permissions:
          - storage/iso.tag/list
      type: object
    networking_project_netadp_create:
      format: create netadp
      properties:
        vm:
          format: uri
          title: Netadp vm
          type: string
          x-resource:
            kind: compute/vm
            state:
            - "Off"
          x-permissions:
          - compute/vm/use
        network:
          format: uri
          title: Netadp network
          type: string
          x-resource:
            kind: networking/network
            state:
            - Online
          x-permissions:
          - networking/network/use
        firewall:
          format: uri
          title: Netadp firewall
          type: string
          x-resource:
            kind: networking/firewall
          x-permissions:
          - networking/firewall/use
        ip:
          items:
            format: uri
            type: string
            x-resource:
              kind: networking/ip
              state:
              - Unallocated
              filter:
                network: $request.body#/network
            x-permissions:
            - networking/ip/use
          title: Ip collection
          type: array
        tag:
          items:
            $ref: '#/components/schemas/tag'
          title: Tag collection
          type: array
      required:
      - network
      - vm
      type: object
    networking_project_netadp_update:
      format: patch netadp
      properties:
        firewall:
          format: uri
          title: Netadp firewall
          type: string
          x-resource:
            kind: networking/firewall
          x-permissions:
          - networking/firewall/use
          - networking/netadp.firewall/update
      type: object
    netadp:
      example:
        flavour: flavour
        fqdn: fqdn
        project: https://openapi-generator.tech
        createdOn: 2000-01-23T04:56:07.000+00:00
        uri: uri
        speed: 0.8008281904610115
        network: https://openapi-generator.tech
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: https://openapi-generator.tech
        firewall: https://openapi-generator.tech
        name: name
        modifiedBy: https://openapi-generator.tech
        macaddress: macaddress
        assigned: assigned
        id: id
        state: Online
        tag:
        - id: id
          value: value
          key: key
        - id: id
          value: value
          key: key
      properties:
        id:
          type: string
        name:
          type: string
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        createdOn:
          format: date-time
          type: string
        createdBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        state:
          enum:
          - Online
          - Deallocated
          - Unknown
          - Processing
          - NotCreated
          type: string
        project:
          format: uri
          type: string
          x-resource:
            kind: iam/project
        uri:
          type: string
        macaddress:
          type: string
        speed:
          type: number
        fqdn:
          type: string
        network:
          format: uri
          type: string
          x-resource:
            kind: networking/network
        firewall:
          format: uri
          type: string
          x-resource:
            kind: networking/firewall
        assigned:
          type: string
        tag:
          items:
            $ref: '#/components/schemas/tag'
          type: array
          x-permissions:
          - networking/netadp.tag/list
      type: object
    networking_project_netgw_create:
      format: create netgw
      properties:
        name:
          title: Netgw name
          type: string
        public:
          $ref: '#/components/schemas/Netgw_public'
        tag:
          items:
            $ref: '#/components/schemas/tag'
          title: Tag collection
          type: array
      type: object
    networking_project_netgw_update:
      format: patch netgw
      properties:
        name:
          title: Netgw name
          type: string
          x-permissions:
          - networking/netgw.name/update
      type: object
    networking_project_netgw_attach:
      format: Action attach
      properties:
        private:
          $ref: '#/components/schemas/Netgw_private'
      type: object
    netgw:
      example:
        flavour: flavour
        project: https://openapi-generator.tech
        createdOn: 2000-01-23T04:56:07.000+00:00
        uri: https://openapi-generator.tech
        network: https://openapi-generator.tech
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: https://openapi-generator.tech
        name: name
        primaryIP: https://openapi-generator.tech
        modifiedBy: https://openapi-generator.tech
        id: id
        state: Attached
        tag:
        - id: id
          value: value
          key: key
        - id: id
          value: value
          key: key
      properties:
        id:
          type: string
        name:
          type: string
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        createdOn:
          format: date-time
          type: string
        createdBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        state:
          enum:
          - Attached
          - Detached
          - Unknown
          - Processing
          - NotCreated
          type: string
        project:
          format: uri
          type: string
          x-resource:
            kind: iam/project
        uri:
          format: uri
          type: string
          x-resource:
            kind: networking/netgw
        primaryIP:
          format: uri
          type: string
          x-resource:
            kind: networking/ip
        network:
          format: uri
          type: string
          x-resource:
            kind: networking/network
        tag:
          items:
            $ref: '#/components/schemas/tag'
          type: array
          x-permissions:
          - networking/netgw.tag/list
      type: object
    networking_project_network_create:
      format: create network
      properties:
        name:
          title: Network name
          type: string
        address:
          title: Network address
          type: string
        gateway:
          title: Network gateway
          type: string
        tag:
          items:
            $ref: '#/components/schemas/tag'
          title: Tag collection
          type: array
      required:
      - name
      type: object
    networking_project_network_update:
      format: patch network
      properties:
        name:
          title: Network name
          type: string
          x-permissions:
          - networking/network.name/update
        gateway:
          title: Network gateway
          type: string
          x-permissions:
          - networking/network.gateway/update
        firewall:
          format: uri
          title: Network firewall
          type: string
          x-resource:
            kind: networking/firewall
          x-permissions:
          - networking/firewall/use
          - networking/network.firewall/update
      type: object
    network:
      example:
        address: address
        flavour: flavour
        dns:
          nameservers:
          - nameservers
          - nameservers
        project: https://openapi-generator.tech
        type: public
        createdOn: 2000-01-23T04:56:07.000+00:00
        uri: https://openapi-generator.tech
        netgw: https://openapi-generator.tech
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: https://openapi-generator.tech
        firewall: https://openapi-generator.tech
        name: name
        modifiedBy: https://openapi-generator.tech
        id: id
        state: Online
        tag:
        - id: id
          value: value
          key: key
        - id: id
          value: value
          key: key
        gateway: gateway
      properties:
        id:
          type: string
        name:
          type: string
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        createdOn:
          format: date-time
          type: string
        createdBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        state:
          enum:
          - Online
          - Unknown
          - Processing
          - NotCreated
          type: string
        project:
          format: uri
          type: string
          x-resource:
            kind: iam/project
        uri:
          format: uri
          type: string
          x-resource:
            kind: networking/network
        address:
          type: string
        gateway:
          type: string
        type:
          enum:
          - public
          - private
          type: string
        dns:
          $ref: '#/components/schemas/network_dns'
        netgw:
          format: uri
          type: string
          x-resource:
            kind: networking/netgw
        firewall:
          format: uri
          type: string
          x-resource:
            kind: networking/firewall
        tag:
          items:
            $ref: '#/components/schemas/tag'
          type: array
          x-permissions:
          - networking/network.tag/list
      type: object
    iam.actor:
      example:
        id: id
        value: value
      properties:
        id:
          readOnly: true
          title: Actor id
          type: string
        value:
          description: Email, User URI or ServiceAccount URI
          title: Actor value
          type: string
      required:
      - value
      type: object
    iam_project_policy_create:
      format: create policy
      properties:
        name:
          title: Policy name
          type: string
        role:
          format: uri
          title: Policy role
          type: string
          x-resource:
            kind: iam/role
          x-permissions:
          - iam/role/use
        resource:
          pattern: /^\/(?<namespace>[a-z]+)(\/(?<location>[a-z0-9-]+))?\/(?<parent>(project|organisation))\/(?<parentId>[a-f0-9]{24})(\/(?<type>[a-z]+))?(\/(?<resource>[a-f0-9]{24}))?(?<subresource>(\/[a-z0-9]+)+)?$/
          title: Policy resource
          type: string
        tag:
          items:
            $ref: '#/components/schemas/tag'
          title: Tag collection
          type: array
      required:
      - name
      - resource
      - role
      type: object
    iam_project_policy_update:
      format: patch policy
      properties:
        name:
          title: Policy name
          type: string
          x-permissions:
          - iam/policy.name/update
      type: object
    policy:
      example:
        role: https://openapi-generator.tech
        flavour: flavour
        resource: resource
        project: https://openapi-generator.tech
        organisation: https://openapi-generator.tech
        createdOn: 2000-01-23T04:56:07.000+00:00
        uri: uri
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: https://openapi-generator.tech
        name: name
        modifiedBy: https://openapi-generator.tech
        id: id
        state: Online
        tag:
        - id: id
          value: value
          key: key
        - id: id
          value: value
          key: key
      properties:
        id:
          type: string
        name:
          type: string
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        createdOn:
          format: date-time
          type: string
        createdBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        state:
          enum:
          - Online
          type: string
        project:
          format: uri
          type: string
          x-resource:
            kind: iam/project
        organisation:
          format: uri
          type: string
          x-resource:
            kind: iam/organisation
        uri:
          type: string
        role:
          format: uri
          type: string
          x-resource:
            kind: iam/role
        resource:
          type: string
        tag:
          items:
            $ref: '#/components/schemas/tag'
          type: array
          x-permissions:
          - iam/policy.tag/list
      type: object
    compute_project_replica_create:
      format: create replica
      properties:
        hostname:
          title: Replica hostname
          type: string
        secret:
          title: Replica secret
          type: string
      required:
      - hostname
      - secret
      type: object
    replica:
      example:
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        flavour: flavour
        createdBy: https://openapi-generator.tech
        name: name
        project: https://openapi-generator.tech
        modifiedBy: https://openapi-generator.tech
        id: id
        state: Error
        tag:
        - id: id
          value: value
          key: key
        - id: id
          value: value
          key: key
        createdOn: 2000-01-23T04:56:07.000+00:00
        uri: https://openapi-generator.tech
      properties:
        id:
          type: string
        name:
          type: string
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        createdOn:
          format: date-time
          type: string
        createdBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        state:
          enum:
          - Error
          - FailOverWaitingCompletion
          - FailedOver
          - NotApplicable
          - ReadyForInitialReplication
          - Replicating
          - Resynchronizing
          - ResynchronizeSuspended
          - Suspended
          - SyncedReplicationComplete
          - WaitingForInitialReplication
          - WaitingForStartResynchronize
          - Unknown
          - Processing
          - NotCreated
          type: string
        project:
          format: uri
          type: string
          x-resource:
            kind: iam/project
        uri:
          format: uri
          type: string
          x-resource:
            kind: compute/replica
        tag:
          items:
            $ref: '#/components/schemas/tag'
          type: array
          x-permissions:
          - compute/replica.tag/list
      type: object
    iam.permission:
      example:
        id: id
        value: value
      properties:
        id:
          readOnly: true
          title: Permission id
          type: string
        value:
          title: Permission value
          type: string
      required:
      - value
      type: object
    iam.permission_array:
      items:
        $ref: '#/components/schemas/iam.permission'
      title: Permission collection
      type: array
    iam_project_role_create:
      format: create role
      properties:
        name:
          title: Role name
          type: string
        service:
          default: 5e679c282b39c4353cd86f34
          format: uri
          title: Role service
          type: string
          x-resource:
            kind: billing/service
            filter:
              kind: iam/role
              type: flavour
        description:
          title: Role description
          type: string
        permission:
          items:
            $ref: '#/components/schemas/iam.permission'
          title: Permission collection
          type: array
        tag:
          items:
            $ref: '#/components/schemas/tag'
          title: Tag collection
          type: array
      required:
      - name
      type: object
    iam_project_role_update:
      format: patch role
      properties:
        name:
          title: Role name
          type: string
          x-permissions:
          - iam/role.name/update
        description:
          title: Role description
          type: string
          x-permissions:
          - iam/role.description/update
      type: object
    role:
      example:
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        flavour: flavour
        createdBy: https://openapi-generator.tech
        name: name
        project: https://openapi-generator.tech
        organisation: https://openapi-generator.tech
        modifiedBy: https://openapi-generator.tech
        id: id
        state: Online
        tag:
        - id: id
          value: value
          key: key
        - id: id
          value: value
          key: key
        createdOn: 2000-01-23T04:56:07.000+00:00
        uri: uri
      properties:
        id:
          type: string
        name:
          type: string
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        createdOn:
          format: date-time
          type: string
        createdBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        state:
          enum:
          - Online
          type: string
        project:
          format: uri
          type: string
          x-resource:
            kind: iam/project
        organisation:
          format: uri
          type: string
          x-resource:
            kind: iam/organisation
        uri:
          type: string
        tag:
          items:
            $ref: '#/components/schemas/tag'
          type: array
          x-permissions:
          - iam/role.tag/list
      type: object
    sa.credential:
      example:
        createdBy: createdBy
        name: name
        fingerprint: fingerprint
        id: id
        type: ssh
        createdOn: 2000-01-23T04:56:07.000+00:00
        value: value
        token: token
      format: credential
      properties:
        id:
          readOnly: true
          title: Credential id
          type: string
        name:
          title: Credential name
          type: string
        createdBy:
          readOnly: true
          title: Credential createdBy
          type: string
        createdOn:
          format: date-time
          readOnly: true
          title: Credential createdOn
          type: string
        type:
          enum:
          - ssh
          title: Credential type
          type: string
        value:
          title: Credential value
          type: string
          writeOnly: true
        fingerprint:
          readOnly: true
          title: Credential fingerprint
          type: string
        token:
          title: Credential token
          type: string
      required:
      - name
      - type
      - value
      type: object
    iam_project_sa_create:
      format: create sa
      properties:
        name:
          title: Sa name
          type: string
        service:
          default: 5e5fc76ff1fb3efe1842336a
          format: uri
          title: Sa service
          type: string
          x-resource:
            kind: billing/service
            filter:
              kind: iam/sa
              type: flavour
        tag:
          items:
            $ref: '#/components/schemas/tag'
          title: Tag collection
          type: array
      required:
      - name
      type: object
    iam_project_sa_update:
      format: patch sa
      properties:
        name:
          title: Sa name
          type: string
          x-permissions:
          - iam/sa.name/update
      type: object
    iam_project_sa_credential_patch:
      properties:
        name:
          title: Credential name
          type: string
          x-permissions:
          - iam/sa.credential.name/update
      required:
      - name
      type: object
    sa:
      example:
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        flavour: flavour
        createdBy: https://openapi-generator.tech
        name: name
        project: https://openapi-generator.tech
        modifiedBy: https://openapi-generator.tech
        id: id
        state: Online
        tag:
        - id: id
          value: value
          key: key
        - id: id
          value: value
          key: key
        createdOn: 2000-01-23T04:56:07.000+00:00
        uri: uri
      properties:
        id:
          type: string
        name:
          type: string
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        createdOn:
          format: date-time
          type: string
        createdBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        state:
          enum:
          - Online
          type: string
        project:
          format: uri
          type: string
          x-resource:
            kind: iam/project
        uri:
          type: string
        tag:
          items:
            $ref: '#/components/schemas/tag'
          type: array
          x-permissions:
          - iam/sa.tag/list
      type: object
    vault.credential:
      example:
        createdBy: createdBy
        name: name
        fingerprint: fingerprint
        id: id
        type: ssh
        createdOn: 2000-01-23T04:56:07.000+00:00
        value: value
        token: token
      format: credential
      properties:
        id:
          readOnly: true
          title: Credential id
          type: string
        name:
          title: Credential name
          type: string
        createdBy:
          readOnly: true
          title: Credential createdBy
          type: string
        createdOn:
          format: date-time
          readOnly: true
          title: Credential createdOn
          type: string
        type:
          enum:
          - ssh
          - sha512
          - plain
          title: Credential type
          type: string
        value:
          title: Credential value
          type: string
          writeOnly: true
        fingerprint:
          readOnly: true
          title: Credential fingerprint
          type: string
        token:
          title: Credential token
          type: string
      required:
      - name
      - type
      - value
      type: object
    storage.snapshot:
      example:
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        sizeUsed: 0.8008281904610115
        flavour: flavour
        createdBy: https://openapi-generator.tech
        name: name
        project: https://openapi-generator.tech
        organisation: https://openapi-generator.tech
        modifiedBy: https://openapi-generator.tech
        id: id
        state: state
        createdOn: 2000-01-23T04:56:07.000+00:00
        uri: uri
      properties:
        id:
          title: Snapshot id
          type: string
        name:
          title: Snapshot name
          type: string
        flavour:
          title: Snapshot flavour
          type: string
        modifiedOn:
          format: date-time
          title: Snapshot modifiedOn
          type: string
        modifiedBy:
          format: uri
          title: Snapshot modifiedBy
          type: string
          x-resource:
            kind: iam/user
        createdOn:
          format: date-time
          title: Snapshot createdOn
          type: string
        createdBy:
          format: uri
          title: Snapshot createdBy
          type: string
          x-resource:
            kind: iam/user
        state:
          title: Snapshot state
          type: string
        project:
          format: uri
          title: Snapshot project
          type: string
          x-resource:
            kind: iam/project
        organisation:
          format: uri
          title: Snapshot organisation
          type: string
          x-resource:
            kind: iam/organisation
        uri:
          title: Snapshot uri
          type: string
        sizeUsed:
          title: Snapshot sizeUsed
          type: number
      type: object
    storage_project_vault_create:
      format: create vault
      properties:
        name:
          title: Vault name
          type: string
        service:
          default: 5a0332c4eb8f4ed95c206a12
          format: uri
          title: Vault service
          type: string
          x-resource:
            kind: billing/service
            filter:
              kind: storage/vault
              type: flavour
        size:
          minimum: 1
          title: Vault size
          type: number
        source:
          format: uri
          title: Vault source
          type: string
          x-resource:
            kind: storage/vault.snapshot
          x-permissions:
          - storage/vault.snapshot/use
        tag:
          items:
            $ref: '#/components/schemas/tag'
          title: Tag collection
          type: array
      required:
      - name
      - size
      type: object
    storage_project_vault_update:
      format: patch vault
      properties:
        name:
          title: Vault name
          type: string
          x-permissions:
          - storage/vault.name/update
      type: object
    storage_project_vault_delete:
      format: Delete vault
      properties:
        removeAllSnapshots:
          default: false
          title: Vault removeAllSnapshots
          type: boolean
      type: object
    storage_project_vault_resize:
      format: Action resize
      properties:
        size:
          title: Vault size
          type: number
      required:
      - size
      type: object
    storage_project_vault_snapshot_create:
      properties:
        name:
          title: Snapshot name
          type: string
      required:
      - name
      type: object
    storage_project_vault_credential_patch:
      properties:
        name:
          title: Credential name
          type: string
          x-permissions:
          - storage/vault.credential.name/update
      required:
      - name
      type: object
    vault:
      example:
        sizeUsed: 0.8008281904610115
        flavour: flavour
        fqdn: fqdn
        project: https://openapi-generator.tech
        createdOn: 2000-01-23T04:56:07.000+00:00
        uri: https://openapi-generator.tech
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        size: 6.027456183070403
        createdBy: https://openapi-generator.tech
        name: name
        modifiedBy: https://openapi-generator.tech
        id: id
        state: Online
        tag:
        - id: id
          value: value
          key: key
        - id: id
          value: value
          key: key
      properties:
        id:
          type: string
        name:
          type: string
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        createdOn:
          format: date-time
          type: string
        createdBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        state:
          enum:
          - Online
          - "Off"
          - Unknown
          - Processing
          - NotCreated
          type: string
        project:
          format: uri
          type: string
          x-resource:
            kind: iam/project
        uri:
          format: uri
          type: string
          x-resource:
            kind: storage/vault
        sizeUsed:
          type: number
        size:
          type: number
        fqdn:
          type: string
        tag:
          items:
            $ref: '#/components/schemas/tag'
          type: array
          x-permissions:
          - storage/vault.tag/list
      type: object
    compute_project_vm_create:
      format: create vm
      properties:
        name:
          title: Vm name
          type: string
        service:
          format: uri
          title: Vm service
          type: string
          x-resource:
            kind: billing/service
            filter:
              kind: compute/vm
              type: flavour
        image:
          format: uri
          title: Vm image
          type: string
          x-resource:
            kind: storage/image
          x-permissions:
          - storage/image/use
        iso:
          format: uri
          title: Vm iso
          type: string
          x-resource:
            kind: storage/iso
          x-permissions:
          - storage/iso/use
        username:
          title: Vm username
          type: string
        userMetadata:
          format: base64
          title: Vm userMetadata
          type: string
        start:
          default: true
          title: Vm start
          type: boolean
        credential:
          items:
            $ref: '#/components/schemas/compute_project_vm_create_credential'
          minItems: 1
          title: Credential collection
          type: array
        disk:
          items:
            $ref: '#/components/schemas/compute_project_vm_create_disk'
          title: Disk collection
          type: array
        netadp:
          items:
            $ref: '#/components/schemas/compute_project_vm_create_netadp'
          title: Netadp collection
          type: array
        tag:
          items:
            $ref: '#/components/schemas/tag'
          title: Tag collection
          type: array
      required:
      - name
      - service
      type: object
    compute_project_vm_update:
      format: patch vm
      properties:
        userMetadata:
          title: Vm userMetadata
          type: string
          x-permissions:
          - compute/vm.userMetadata/update
        name:
          title: Vm name
          type: string
          x-permissions:
          - compute/vm.name/update
      type: object
    compute_project_vm_password_reset:
      format: Action password_reset
      properties:
        userName:
          title: Vm userName
          type: string
        modulus:
          title: Vm modulus
          type: string
        exponent:
          title: Vm exponent
          type: string
      required:
      - exponent
      - modulus
      - userName
      type: object
    compute_project_vm_flavour:
      format: Action flavour
      properties:
        service:
          format: uri
          title: Vm service
          type: string
          x-resource:
            kind: billing/service
            filter:
              kind: compute/vm
              type: flavour
      required:
      - service
      type: object
    compute_project_vm_serialport:
      format: Action serialport
      properties:
        number:
          default: "1"
          enum:
          - "1"
          - "2"
          title: Vm number
          type: string
      type: object
    compute_project_vm_disk_create:
      properties:
        disk:
          format: uri
          title: Disk disk
          type: string
          x-resource:
            kind: storage/disk
            state:
            - Detached
          x-permissions:
          - storage/disk/attach
      required:
      - disk
      type: object
    compute_project_vm_iso_create:
      properties:
        iso:
          format: uri
          title: Iso iso
          type: string
          x-resource:
            kind: storage/iso
          x-permissions:
          - storage/iso/attach
      type: object
    vm:
      example:
        memory: 6.027456183070403
        flavour: flavour
        fqdn: fqdn
        project: https://openapi-generator.tech
        cpu: 0.8008281904610115
        createdOn: 2000-01-23T04:56:07.000+00:00
        uri: https://openapi-generator.tech
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: https://openapi-generator.tech
        name: name
        modifiedBy: https://openapi-generator.tech
        id: id
        state: Other
        tag:
        - id: id
          value: value
          key: key
        - id: id
          value: value
          key: key
        userMetadata: userMetadata
      properties:
        id:
          type: string
        name:
          type: string
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        createdOn:
          format: date-time
          type: string
        createdBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        state:
          enum:
          - Other
          - Running
          - "Off"
          - Stopping
          - Saved
          - Paused
          - Starting
          - Reset
          - Saving
          - Pausing
          - Resuming
          - FastSaved
          - FastSaving
          - RunningCritical
          - OffCritical
          - StoppingCritical
          - SavedCritical
          - PausedCritical
          - StartingCritical
          - ResetCritical
          - SavingCritical
          - PausingCritical
          - ResumingCritical
          - FastSavedCritical
          - FastSavingCritical
          - Unknown
          - Processing
          - NotCreated
          type: string
        project:
          format: uri
          type: string
          x-resource:
            kind: iam/project
        uri:
          format: uri
          type: string
          x-resource:
            kind: compute/vm
        userMetadata:
          format: base64
          type: string
        cpu:
          type: number
        memory:
          type: number
        fqdn:
          type: string
        tag:
          items:
            $ref: '#/components/schemas/tag'
          type: array
          x-permissions:
          - compute/vm.tag/list
      type: object
    billing_project_reservation_create:
      format: create reservation
      properties:
        name:
          title: Reservation name
          type: string
        service:
          format: uri
          title: Reservation service
          type: string
          x-resource:
            kind: billing/service
            filter:
              kind: billing/reservation
              type: flavour
        tag:
          items:
            $ref: '#/components/schemas/tag'
          title: Tag collection
          type: array
      required:
      - name
      - service
      type: object
    billing_project_reservation_update:
      format: patch reservation
      properties:
        name:
          title: Reservation name
          type: string
          x-permissions:
          - billing/reservation.name/update
      type: object
    billing_project_reservation_assign:
      format: Action assign
      properties:
        resource:
          format: uri
          title: Reservation resource
          type: string
          x-resource:
            kind: compute/vm
          x-permissions:
          - compute/vm/use
      type: object
    reservation:
      example:
        flavour: flavour
        kind: kind
        project: https://openapi-generator.tech
        createdOn: 2000-01-23T04:56:07.000+00:00
        uri: uri
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: https://openapi-generator.tech
        name: name
        modifiedBy: https://openapi-generator.tech
        assigned: assigned
        id: id
        state: Detached
        tag:
        - id: id
          value: value
          key: key
        - id: id
          value: value
          key: key
        sourceService: https://openapi-generator.tech
      properties:
        id:
          type: string
        name:
          type: string
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        createdOn:
          format: date-time
          type: string
        createdBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        state:
          enum:
          - Detached
          - Attached
          - Expired
          - Billing
          - Unknown
          type: string
        project:
          format: uri
          type: string
          x-resource:
            kind: iam/project
        uri:
          type: string
        kind:
          type: string
        assigned:
          type: string
        sourceService:
          format: uri
          type: string
          x-resource:
            kind: billing/service
        tag:
          items:
            $ref: '#/components/schemas/tag'
          type: array
          x-permissions:
          - billing/reservation.tag/list
      type: object
    vmhost:
      example:
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        flavour: flavour
        createdBy: https://openapi-generator.tech
        name: name
        project: https://openapi-generator.tech
        modifiedBy: https://openapi-generator.tech
        id: id
        state: Running
        tag:
        - id: id
          value: value
          key: key
        - id: id
          value: value
          key: key
        type: compute
        createdOn: 2000-01-23T04:56:07.000+00:00
        uri: https://openapi-generator.tech
      properties:
        id:
          type: string
        name:
          type: string
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        createdOn:
          format: date-time
          type: string
        createdBy:
          format: uri
          type: string
          x-resource:
            kind: iam/user
        state:
          enum:
          - Running
          - Unknown
          - Processing
          - NotCreated
          type: string
        project:
          format: uri
          type: string
          x-resource:
            kind: iam/project
        uri:
          format: uri
          type: string
          x-resource:
            kind: vmhost/instance
        type:
          enum:
          - compute
          - network
          - vault
          - container
          type: string
        tag:
          items:
            $ref: '#/components/schemas/tag'
          type: array
          x-permissions:
          - vmhost/instance.tag/list
      type: object
    service:
      example:
        data:
          key: data
        resource: resource
        availableServices:
        - availableServices
        - availableServices
        display:
          unit:
            usage: usage
            billing: billing
        name: name
        id: id
        type: type
        uri: uri
        billing:
          period: period
          quantity: 5.637376656633329
          reservations:
            period: period
            resourcePrice:
              PLN: 0.8008281904610115
              EUR: 6.027456183070403
              GBP: 5.962133916683182
              USD: 1.4658129805029452
            price:
              PLN: 0.8008281904610115
              EUR: 6.027456183070403
              GBP: 5.962133916683182
              USD: 1.4658129805029452
            id: id
          price:
            PLN: 0.8008281904610115
            EUR: 6.027456183070403
            GBP: 5.962133916683182
            USD: 1.4658129805029452
          oneTime: true
      properties:
        id:
          type: string
        resource:
          type: string
        type:
          type: string
        billing:
          $ref: '#/components/schemas/service_billing'
        display:
          $ref: '#/components/schemas/service_display'
        data:
          additionalProperties:
            type: string
          type: object
        name:
          type: string
        availableServices:
          items:
            type: string
          type: array
        uri:
          type: string
      type: object
    inline_response_400:
      properties:
        message:
          description: error description
          type: string
    billing_service:
      example:
        name: name
        id: id
        type: type
      properties:
        id:
          type: string
        type:
          type: string
        name:
          type: string
    billing_resource:
      example:
        deleted: true
        name: name
        id: id
        type: type
      properties:
        id:
          type: string
        type:
          type: string
        name:
          type: string
        deleted:
          type: boolean
    billing_charges:
      example:
        quantity: 5.637376656633329
        price: 5.962133916683182
        start: start
        paidFrom: paidFrom
        end: end
        id: id
        value: 1.4658129805029452
        paidOn: paidOn
      properties:
        id:
          type: string
        value:
          type: number
        start:
          type: string
        end:
          type: string
        price:
          type: number
        quantity:
          type: number
        paidFrom:
          type: string
        paidOn:
          type: string
    invoice_seller_address:
      example:
        zipcode: zipcode
        country: country
        city: city
        street: street
      properties:
        street:
          type: string
        zipcode:
          type: string
        city:
          type: string
        country:
          type: string
      required:
      - city
      - country
      - street
      - zipcode
    invoice_seller:
      example:
        address:
          zipcode: zipcode
          country: country
          city: city
          street: street
        nip: nip
        company: company
      properties:
        company:
          type: string
        address:
          $ref: '#/components/schemas/invoice_seller_address'
        nip:
          type: string
      required:
      - company
      - nip
    invoice_items:
      example:
        brutto: brutto
        quantity: 0.8008281904610115
        netto: netto
        price: price
        vatRate: vatRate
        name: name
        vatAmount: vatAmount
      properties:
        name:
          type: string
        price:
          type: string
        netto:
          type: string
        brutto:
          type: string
        vatAmount:
          type: string
        vatRate:
          type: string
        quantity:
          type: number
      required:
      - brutto
      - name
      - netto
      - price
      - quantity
      - vatAmount
      - vatRate
    invoice_buyer_address:
      example:
        zipcode: zipcode
        country: country
        city: city
        street: street
      properties:
        street:
          type: string
        zipcode:
          type: string
        city:
          type: string
        country:
          type: string
      required:
      - city
      - country
      - street
    invoice_buyer:
      example:
        address:
          zipcode: zipcode
          country: country
          city: city
          street: street
        nip: nip
        company: company
        email: email
      properties:
        company:
          type: string
        address:
          $ref: '#/components/schemas/invoice_buyer_address'
        nip:
          type: string
        email:
          type: string
      required:
      - company
    invoice_duplicate:
      example:
        id: id
        createdOn: createdOn
      properties:
        createdOn:
          type: string
        id:
          type: string
    proforma_seller:
      example:
        address:
          zipcode: zipcode
          country: country
          city: city
          street: street
        nip: nip
        iban: iban
        company: company
      properties:
        company:
          type: string
        address:
          $ref: '#/components/schemas/invoice_seller_address'
        nip:
          type: string
        iban:
          type: string
      required:
      - company
      - iban
      - nip
    proforma___array__:
      example:
        summary: summary
        project: project
        id: id
        invoiceNo: invoiceNo
        issueDate: 2000-01-23T04:56:07.000+00:00
        uri: uri
      properties:
        id:
          type: string
        invoiceNo:
          type: string
        issueDate:
          format: date-time
          type: string
        summary:
          type: string
        project:
          type: string
        uri:
          type: string
    authToken_access:
      example:
        path: path
        method: ALL
      properties:
        method:
          enum:
          - ALL
          - GET
          - POST
          - PATCH
          - DELETE
          type: string
        path:
          type: string
      required:
      - method
      - path
    user_limit_organisation:
      example:
        count: 0.8008281904610115
      properties:
        count:
          default: 3
          type: number
      required:
      - count
    user_limit:
      example:
        organisation:
          count: 0.8008281904610115
      properties:
        organisation:
          $ref: '#/components/schemas/user_limit_organisation'
    Quota_metric:
      example:
        unit: unit
        key: key
      properties:
        key:
          title: Metric key
          type: string
        unit:
          title: Metric unit
          type: string
    Quota_limit:
      example:
        effective: 5.962133916683182
        user: 1.4658129805029452
        platform: 6.027456183070403
      properties:
        platform:
          title: Limit platform
          type: number
        user:
          title: Limit user
          type: number
        effective:
          readOnly: true
          title: Limit effective
          type: number
    project_billing:
      example:
        creditsBonus: 6.027456183070403
        credits: 0.8008281904610115
        creditLimit: 1.4658129805029452
      properties:
        credits:
          type: number
        creditsBonus:
          type: number
        creditLimit:
          type: number
    project_networkAcl:
      example:
        name: name
        id: id
        type: subnet
        value: value
      properties:
        type:
          enum:
          - subnet
          - geo
          type: string
        value:
          type: string
        name:
          type: string
        id:
          type: string
    project_compliance:
      example:
        journal: journal
      properties:
        journal:
          format: ObjectId
          type: string
    project_transfer:
      example:
        organisation: organisation
      properties:
        organisation:
          format: ObjectId
          type: string
    Message_data:
      example:
        mime: text/plain
        body: body
        url: url
      properties:
        mime:
          enum:
          - text/plain
          - image/png
          - image/jpeg
          title: Data mime
          type: string
        url:
          readOnly: true
          title: Data url
          type: string
        body:
          title: Data body
          type: string
      required:
      - mime
    Billing_address:
      properties:
        country:
          default: PL
          enum:
          - AD
          - BE
          - HR
          - CY
          - CZ
          - DK
          - EE
          - FI
          - FR
          - DE
          - GR
          - HU
          - IE
          - IT
          - LV
          - LT
          - LU
          - MT
          - NL
          - PL
          - PT
          - RO
          - SK
          - SI
          - ES
          - GB
          title: Address country
          type: string
        city:
          title: Address city
          type: string
        zipcode:
          title: Address zipcode
          type: string
        street:
          title: Address street
          type: string
      required:
      - city
      - street
      - zipcode
    Organisation_billing:
      properties:
        nip:
          title: Billing nip
          type: string
        email:
          title: Billing email
          type: string
        company:
          title: Billing company
          type: string
        currency:
          default: PLN
          enum:
          - PLN
          title: Billing currency
          type: string
        address:
          $ref: '#/components/schemas/Billing_address'
      required:
      - company
    Billing_address_1:
      properties:
        city:
          title: Address city
          type: string
        zipcode:
          title: Address zipcode
          type: string
        street:
          title: Address street
          type: string
    Organisation_billing_1:
      properties:
        email:
          title: Billing email
          type: string
        company:
          title: Billing company
          type: string
        address:
          $ref: '#/components/schemas/Billing_address_1'
    organisation_billing:
      example:
        address:
          zipcode: zipcode
          country: country
          city: city
          street: street
        nip: nip
        currency: currency
        company: company
        email: email
      properties:
        currency:
          type: string
        company:
          type: string
        email:
          type: string
        address:
          $ref: '#/components/schemas/invoice_seller_address'
        nip:
          type: string
    organisation_transfer:
      example:
        name: name
        id: id
      properties:
        name:
          type: string
        id:
          type: string
    metric_dimension:
      example:
        name: name
        description: description
      properties:
        name:
          title: Dimension name
          type: string
        description:
          title: Dimension description
          type: string
      required:
      - description
      - name
    Zone_source:
      properties:
        dnsProbing:
          default: false
          title: Source dnsProbing
          type: boolean
    zone_rrsets:
      example:
        records: records
        name: name
        type: type
        ttl: 0.8008281904610115
      properties:
        records:
          type: string
        name:
          type: string
        type:
          type: string
        ttl:
          type: number
    disk_metadata:
      example:
        source: source
      properties:
        source:
          type: string
    ip_associated:
      example:
        ip: https://openapi-generator.tech
        netadp: https://openapi-generator.tech
        fip: https://openapi-generator.tech
      properties:
        ip:
          format: uri
          type: string
          x-resource:
            kind: networking/ip
        fip:
          format: uri
          type: string
          x-resource:
            kind: networking/ip
        netadp:
          format: uri
          type: string
          x-resource:
            kind: networking/netadp
    iso_metadata_source:
      example:
        filename: filename
        size: 6.027456183070403
      properties:
        filename:
          type: string
        size:
          type: number
    iso_metadata:
      example:
        source:
          filename: filename
          size: 6.027456183070403
      properties:
        source:
          $ref: '#/components/schemas/iso_metadata_source'
    Netgw_public:
      properties:
        ip:
          format: uri
          title: Public ip
          type: string
          x-resource:
            kind: networking/ip
          x-permissions:
          - networking/ip/use
      required:
      - ip
    Netgw_private:
      properties:
        network:
          format: uri
          title: Private network
          type: string
          x-resource:
            kind: networking/network
          x-permissions:
          - networking/network/use
      required:
      - network
    network_dns:
      example:
        nameservers:
        - nameservers
        - nameservers
      properties:
        nameservers:
          items:
            type: string
          type: array
    compute_project_vm_create_credential:
      properties:
        type:
          enum:
          - ssh
          - plain
          - unix
          title: Credential type
          type: string
        value:
          description: |-
            - user credential (by id or name)
            - project credential (by id or name)
            - raw openssh public key (starting with `ssh-rsa/ssh-ed25519`)
            - defaults to user keys
          title: Credential value
          type: string
      required:
      - type
      - value
    compute_project_vm_create_disk:
      properties:
        name:
          title: Disk name
          type: string
        service:
          format: uri
          title: Disk service
          type: string
          x-resource:
            kind: billing/service
            filter:
              kind: storage/disk
              type: flavour
        size:
          title: Disk size
          type: number
      required:
      - name
      - service
      - size
    compute_project_vm_create_netadp:
      properties:
        network:
          format: uri
          title: Netadp network
          type: string
          x-resource:
            kind: networking/network
          x-permissions:
          - networking/network/use
        firewall:
          format: uri
          title: Netadp firewall
          type: string
          x-resource:
            kind: networking/firewall
          x-permissions:
          - networking/firewall/use
        ip:
          items:
            format: uri
            type: string
            x-resource:
              kind: networking/ip
              state:
              - Unallocated
              filter:
                network: $request.body#/network
            x-permissions:
            - networking/ip/use
          title: Ip collection
          type: array
      required:
      - network
    service_billing_price:
      example:
        PLN: 0.8008281904610115
        EUR: 6.027456183070403
        GBP: 5.962133916683182
        USD: 1.4658129805029452
      properties:
        PLN:
          type: number
        EUR:
          type: number
        USD:
          type: number
        GBP:
          type: number
    service_billing_reservations:
      example:
        period: period
        resourcePrice:
          PLN: 0.8008281904610115
          EUR: 6.027456183070403
          GBP: 5.962133916683182
          USD: 1.4658129805029452
        price:
          PLN: 0.8008281904610115
          EUR: 6.027456183070403
          GBP: 5.962133916683182
          USD: 1.4658129805029452
        id: id
      properties:
        id:
          type: string
        period:
          type: string
        price:
          $ref: '#/components/schemas/service_billing_price'
        resourcePrice:
          $ref: '#/components/schemas/service_billing_price'
    service_billing:
      example:
        period: period
        quantity: 5.637376656633329
        reservations:
          period: period
          resourcePrice:
            PLN: 0.8008281904610115
            EUR: 6.027456183070403
            GBP: 5.962133916683182
            USD: 1.4658129805029452
          price:
            PLN: 0.8008281904610115
            EUR: 6.027456183070403
            GBP: 5.962133916683182
            USD: 1.4658129805029452
          id: id
        price:
          PLN: 0.8008281904610115
          EUR: 6.027456183070403
          GBP: 5.962133916683182
          USD: 1.4658129805029452
        oneTime: true
      properties:
        price:
          $ref: '#/components/schemas/service_billing_price'
        period:
          type: string
        quantity:
          type: number
        oneTime:
          type: boolean
        reservations:
          $ref: '#/components/schemas/service_billing_reservations'
    service_display_unit:
      example:
        usage: usage
        billing: billing
      properties:
        usage:
          type: string
        billing:
          type: string
    service_display:
      example:
        unit:
          usage: usage
          billing: billing
      properties:
        unit:
          $ref: '#/components/schemas/service_display_unit'
  securitySchemes:
    BearerAuth:
      bearerFormat: JWT
      openIdConnectUrl: .well-known/openid-configuration
      scheme: bearer
      type: http
    iam:
      flows:
        implicit:
          authorizationUrl: http://example.org/api/oauth/dialog
          scopes:
            iam/user/get: ""
            iam/user.phone/update: ""
            iam/user.lang/update: ""
            iam/user.credential/list: ""
            iam/user.credential/get: ""
            iam/user.credential/delete: ""
            iam/user.credential/create: ""
            iam/user.credential.name/update: ""
            iam/user.service/list: ""
            iam/user.service/get: ""
            iam/project/create: ""
            iam/project/get: ""
            iam/project.name/update: ""
            iam/project/delete: ""
            iam/project.billing/list: ""
            iam/project.payment/list: ""
            iam/project.invoice/list: ""
            iam/project.proforma/list: ""
            iam/project.threshold/list: ""
            iam/project.threshold/create: ""
            iam/project.threshold/get: ""
            iam/project.threshold/delete: ""
            iam/project.credentialStore/list: ""
            iam/project.credentialStore/create: ""
            iam/project.credentialStore/get: ""
            iam/project.credentialStore.name/update: ""
            iam/project.credentialStore/delete: ""
            iam/project.quota/list: ""
            iam/project.quota/get: ""
            iam/project.quota.user/update: ""
            iam/project.quota.effective/update: ""
            iam/project.invitation/list: ""
            iam/project.invitation/get: ""
            iam/project.invitation/delete: ""
            iam/project.ownership/create: ""
            iam/project.ownership/list: ""
            iam/project.ownership/get: ""
            iam/project.ownership/delete: ""
            iam/project.service/list: ""
            iam/project.service/get: ""
            iam/project.tag/list: ""
            iam/project.tag/create: ""
            iam/project.tag/delete: ""
            iam/project.tag/get: ""
            iam/project.event/list: ""
            iam/project.event/get: ""
            support/ticket/create: ""
            support/ticket/list: ""
            support/ticket/get: ""
            support/ticket/close: ""
            support/ticket.message/list: ""
            support/ticket.message/create: ""
            support/ticket.message/get: ""
            iam/organisation/get: ""
            iam/organisation.name/update: ""
            iam/organisation.billing/update: ""
            iam/organisation/delete: ""
            iam/organisation.transfer/accept: ""
            iam/organisation.billing/list: ""
            iam/organisation.payment/list: ""
            iam/organisation.payment/get: ""
            iam/organisation.payment/allocate: ""
            iam/organisation.invoice/list: ""
            iam/organisation.invoice/get: ""
            iam/organisation.invoice/download: ""
            iam/organisation.proforma/create: ""
            iam/organisation.proforma/list: ""
            iam/organisation.proforma/get: ""
            iam/organisation.proforma/download: ""
            iam/organisation.invitation/list: ""
            iam/organisation.invitation/get: ""
            iam/organisation.invitation/delete: ""
            iam/organisation.ownership/create: ""
            iam/organisation.ownership/list: ""
            iam/organisation.ownership/get: ""
            iam/organisation.ownership/delete: ""
            iam/organisation.event/list: ""
            iam/organisation.event/get: ""
            provider/agent/create: ""
            provider/agent/list: ""
            provider/agent/get: ""
            provider/agent.name/update: ""
            provider/agent/delete: ""
            provider/agent/start: ""
            provider/agent/suspend: ""
            provider/agent/inspect: ""
            provider/agent/transfer: ""
            provider/agent.resource/list: ""
            provider/agent.resource/recreate: ""
            provider/agent.resource/inspect: ""
            provider/agent.resource.event/list: ""
            provider/agent.credential/list: ""
            provider/agent.credential/create: ""
            provider/agent.credential/get: ""
            provider/agent.credential.name/update: ""
            provider/agent.credential/delete: ""
            provider/agent.enabledService/list: ""
            provider/agent.enabledService/create: ""
            provider/agent.enabledService/get: ""
            provider/agent.enabledService/delete: ""
            provider/agent.service/list: ""
            provider/agent.service/get: ""
            provider/agent.tag/list: ""
            provider/agent.tag/create: ""
            provider/agent.tag/delete: ""
            provider/agent.tag/get: ""
            provider/agent.event/list: ""
            provider/agent.event/get: ""
            database/instance/create: ""
            database/instance/list: ""
            database/instance/get: ""
            database/instance.name/update: ""
            database/instance/delete: ""
            database/instance/start: ""
            database/instance/stop: ""
            database/instance/transfer: ""
            database/instance.credential/list: ""
            database/instance.credential/create: ""
            database/instance.credential/get: ""
            database/instance.credential.name/update: ""
            database/instance.credential/delete: ""
            database/instance.service/list: ""
            database/instance.service/get: ""
            database/instance.tag/list: ""
            database/instance.tag/create: ""
            database/instance.tag/delete: ""
            database/instance.tag/get: ""
            database/instance.event/list: ""
            database/instance.event/get: ""
            insight/journal/create: ""
            insight/journal/list: ""
            insight/journal/get: ""
            insight/journal.name/update: ""
            insight/journal.retention/update: ""
            insight/journal/delete: ""
            insight/journal/transfer: ""
            insight/journal.log/get: ""
            insight/journal.credential/list: ""
            insight/journal.credential/create: ""
            insight/journal.credential/get: ""
            insight/journal.credential.name/update: ""
            insight/journal.credential/delete: ""
            insight/journal.service/list: ""
            insight/journal.service/get: ""
            insight/journal.tag/list: ""
            insight/journal.tag/create: ""
            insight/journal.tag/delete: ""
            insight/journal.tag/get: ""
            insight/journal.event/list: ""
            insight/journal.event/get: ""
            insight/journal/read: ""
            insight/journal/write: ""
            container/registry/create: ""
            container/registry/list: ""
            container/registry/get: ""
            container/registry.name/update: ""
            container/registry/delete: ""
            container/registry/start: ""
            container/registry/stop: ""
            container/registry/transfer: ""
            container/registry.repository/list: ""
            container/registry.repository/get: ""
            container/registry.image/list: ""
            container/registry.image/get: ""
            container/registry.image/delete: ""
            container/registry.credential/list: ""
            container/registry.credential/create: ""
            container/registry.credential/get: ""
            container/registry.credential.name/update: ""
            container/registry.credential/delete: ""
            container/registry.domain/list: ""
            container/registry.domain/create: ""
            container/registry.domain/get: ""
            container/registry.domain/delete: ""
            container/registry.service/list: ""
            container/registry.service/get: ""
            container/registry.tag/list: ""
            container/registry.tag/create: ""
            container/registry.tag/delete: ""
            container/registry.tag/get: ""
            container/registry.event/list: ""
            container/registry.event/get: ""
            container/registry.repository/create: push image
            container/registry.repository/read: pull image
            iam/sa/use: ""
            insight/journal/use: ""
            website/instance.snapshot/use: ""
            website/instance/create: ""
            website/instance/list: ""
            website/instance/get: ""
            website/instance.name/update: ""
            website/instance.image/update: ""
            website/instance/delete: ""
            website/instance/start: ""
            website/instance/stop: ""
            website/instance/restart: ""
            website/instance/transfer: ""
            website/instance.snapshot/list: ""
            website/instance.snapshot/create: ""
            website/instance.snapshot/delete: ""
            website/instance.snapshot/get: ""
            website/instance.snapshot/read: ""
            website/instance.env/list: ""
            website/instance.env/create: ""
            website/instance.env/get: ""
            website/instance.env/delete: ""
            website/instance.link/list: ""
            website/instance.link/create: ""
            website/instance.link/get: ""
            website/instance.link/delete: ""
            website/instance.sideapp/list: ""
            website/instance.sideapp/create: ""
            website/instance.sideapp/get: ""
            website/instance.sideapp/delete: ""
            website/instance.credential/list: ""
            website/instance.credential/create: ""
            website/instance.credential/get: ""
            website/instance.credential.name/update: ""
            website/instance.credential/delete: ""
            website/instance.domain/list: ""
            website/instance.domain/create: ""
            website/instance.domain/get: ""
            website/instance.domain/delete: ""
            website/instance.metric/list: ""
            website/instance.metric/get: ""
            website/instance.point/list: ""
            website/instance.service/list: ""
            website/instance.service/get: ""
            website/instance.tag/list: ""
            website/instance.tag/create: ""
            website/instance.tag/delete: ""
            website/instance.tag/get: ""
            website/instance.event/list: ""
            website/instance.event/get: ""
            dns/zone/create: ""
            dns/zone/list: ""
            dns/zone/get: ""
            dns/zone.name/update: ""
            dns/zone/delete: ""
            dns/zone.recordset/create: ""
            dns/zone.recordset/list: ""
            dns/zone.recordset/delete: ""
            dns/zone.recordset/get: ""
            dns/zone.recordset.ttl/update: ""
            dns/zone.record/create: ""
            dns/zone.record/delete: ""
            dns/zone.record/list: ""
            dns/zone.record/get: ""
            dns/zone.service/list: ""
            dns/zone.service/get: ""
            dns/zone.tag/list: ""
            dns/zone.tag/create: ""
            dns/zone.tag/delete: ""
            dns/zone.tag/get: ""
            dns/zone.event/list: ""
            dns/zone.event/get: ""
            compute/vm/use: ""
            storage/disk/create: ""
            storage/disk/list: ""
            storage/disk/get: ""
            storage/disk.name/update: ""
            storage/disk/delete: ""
            storage/disk.size/update: ""
            storage/disk/attach: ""
            storage/disk/detach: ""
            storage/disk/read: ""
            storage/disk/transfer: ""
            storage/disk.metric/list: ""
            storage/disk.metric/get: ""
            storage/disk.point/list: ""
            storage/disk.service/list: ""
            storage/disk.service/get: ""
            storage/disk.tag/list: ""
            storage/disk.tag/create: ""
            storage/disk.tag/delete: ""
            storage/disk.tag/get: ""
            storage/disk.event/list: ""
            storage/disk.event/get: ""
            networking/firewall/create: ""
            networking/firewall/list: ""
            networking/firewall/get: ""
            networking/firewall.name/update: ""
            networking/firewall/delete: ""
            networking/firewall/transfer: ""
            networking/firewall.ingress/list: ""
            networking/firewall.ingress/create: ""
            networking/firewall.ingress/delete: ""
            networking/firewall.ingress/get: ""
            networking/firewall.egress/list: ""
            networking/firewall.egress/create: ""
            networking/firewall.egress/delete: ""
            networking/firewall.egress/get: ""
            networking/firewall.service/list: ""
            networking/firewall.service/get: ""
            networking/firewall.tag/list: ""
            networking/firewall.tag/create: ""
            networking/firewall.tag/delete: ""
            networking/firewall.tag/get: ""
            networking/firewall.event/list: ""
            networking/firewall.event/get: ""
            compute/replica/use: ""
            storage/image/create: ""
            storage/image/list: ""
            storage/image/get: ""
            storage/image.name/update: ""
            storage/image.description/update: ""
            storage/image/delete: ""
            storage/image/transfer: ""
            storage/image.disk/list: ""
            storage/image.service/list: ""
            storage/image.service/get: ""
            storage/image.tag/list: ""
            storage/image.tag/create: ""
            storage/image.tag/delete: ""
            storage/image.tag/get: ""
            storage/image.event/list: ""
            storage/image.event/get: ""
            networking/network/use: ""
            networking/ip/create: ""
            networking/ip/list: ""
            networking/ip/get: ""
            networking/ip.ptrRecord/update: ""
            networking/ip/delete: ""
            networking/ip/persist: ""
            networking/ip/use: ""
            networking/ip/associate: ""
            networking/ip/disassociate: ""
            networking/ip/transfer: ""
            networking/ip.service/list: ""
            networking/ip.service/get: ""
            networking/ip.tag/list: ""
            networking/ip.tag/create: ""
            networking/ip.tag/delete: ""
            networking/ip.tag/get: ""
            networking/ip.event/list: ""
            networking/ip.event/get: ""
            storage/iso/create: ""
            storage/iso/list: ""
            storage/iso/get: ""
            storage/iso.name/update: ""
            storage/iso/delete: ""
            storage/iso/detach: ""
            storage/iso/transfer: ""
            storage/iso.service/list: ""
            storage/iso.service/get: ""
            storage/iso.tag/list: ""
            storage/iso.tag/create: ""
            storage/iso.tag/delete: ""
            storage/iso.tag/get: ""
            storage/iso.event/list: ""
            storage/iso.event/get: ""
            networking/firewall/use: ""
            networking/netadp/create: ""
            networking/netadp/list: ""
            networking/netadp/get: ""
            networking/netadp.firewall/update: ""
            networking/netadp/delete: ""
            networking/netadp.metric/list: ""
            networking/netadp.metric/get: ""
            networking/netadp.point/list: ""
            networking/netadp.service/list: ""
            networking/netadp.service/get: ""
            networking/netadp.tag/list: ""
            networking/netadp.tag/create: ""
            networking/netadp.tag/delete: ""
            networking/netadp.tag/get: ""
            networking/netadp.event/list: ""
            networking/netadp.event/get: ""
            networking/netgw/create: ""
            networking/netgw/list: ""
            networking/netgw/get: ""
            networking/netgw.name/update: ""
            networking/netgw/delete: ""
            networking/netgw/attach: ""
            networking/netgw/detach: ""
            networking/netgw.service/list: ""
            networking/netgw.service/get: ""
            networking/netgw.tag/list: ""
            networking/netgw.tag/create: ""
            networking/netgw.tag/delete: ""
            networking/netgw.tag/get: ""
            networking/netgw.event/list: ""
            networking/netgw.event/get: ""
            networking/network/create: ""
            networking/network/list: ""
            networking/network/get: ""
            networking/network.name/update: ""
            networking/network.gateway/update: ""
            networking/network.firewall/update: ""
            networking/network/delete: ""
            networking/network.service/list: ""
            networking/network.service/get: ""
            networking/network.tag/list: ""
            networking/network.tag/create: ""
            networking/network.tag/delete: ""
            networking/network.tag/get: ""
            networking/network.event/list: ""
            networking/network.event/get: ""
            iam/role/use: ""
            iam/policy/create: ""
            iam/policy/list: ""
            iam/policy/get: ""
            iam/policy.name/update: ""
            iam/policy/delete: ""
            iam/policy.actor/list: ""
            iam/policy.actor/create: ""
            iam/policy.actor/get: ""
            iam/policy.actor/delete: ""
            iam/policy.service/list: ""
            iam/policy.service/get: ""
            iam/policy.tag/list: ""
            iam/policy.tag/create: ""
            iam/policy.tag/delete: ""
            iam/policy.tag/get: ""
            iam/policy.event/list: ""
            iam/policy.event/get: ""
            compute/replica/create: ""
            compute/replica/list: ""
            compute/replica/get: ""
            compute/replica/delete: ""
            compute/replica.service/list: ""
            compute/replica.service/get: ""
            compute/replica.tag/list: ""
            compute/replica.tag/create: ""
            compute/replica.tag/delete: ""
            compute/replica.tag/get: ""
            compute/replica.event/list: ""
            compute/replica.event/get: ""
            iam/role/create: ""
            iam/role/list: ""
            iam/role/get: ""
            iam/role.name/update: ""
            iam/role.description/update: ""
            iam/role/delete: ""
            iam/role.permission/list: ""
            iam/role.permission/create: ""
            iam/role.permission/delete: ""
            iam/role.permission/get: ""
            iam/role.service/list: ""
            iam/role.service/get: ""
            iam/role.tag/list: ""
            iam/role.tag/create: ""
            iam/role.tag/delete: ""
            iam/role.tag/get: ""
            iam/role.event/list: ""
            iam/role.event/get: ""
            iam/sa/create: ""
            iam/sa/list: ""
            iam/sa/get: ""
            iam/sa.name/update: ""
            iam/sa/delete: ""
            iam/sa.credential/list: ""
            iam/sa.credential/create: ""
            iam/sa.credential/get: ""
            iam/sa.credential.name/update: ""
            iam/sa.credential/delete: ""
            iam/sa.service/list: ""
            iam/sa.service/get: ""
            iam/sa.tag/list: ""
            iam/sa.tag/create: ""
            iam/sa.tag/delete: ""
            iam/sa.tag/get: ""
            iam/sa.event/list: ""
            iam/sa.event/get: ""
            iam/sa/delegate: ""
            storage/vault.snapshot/use: ""
            storage/vault/create: ""
            storage/vault/list: ""
            storage/vault/get: ""
            storage/vault.name/update: ""
            storage/vault/delete: ""
            storage/vault/start: ""
            storage/vault/stop: ""
            storage/vault/resize: ""
            storage/vault.snapshot/list: ""
            storage/vault.snapshot/create: ""
            storage/vault.snapshot/get: ""
            storage/vault.snapshot/delete: ""
            storage/vault.credential/list: ""
            storage/vault.credential/create: ""
            storage/vault.credential/get: ""
            storage/vault.credential.name/update: ""
            storage/vault.credential/delete: ""
            storage/vault.service/list: ""
            storage/vault.service/get: ""
            storage/vault.tag/list: ""
            storage/vault.tag/create: ""
            storage/vault.tag/delete: ""
            storage/vault.tag/get: ""
            storage/vault.event/list: ""
            storage/vault.event/get: ""
            storage/image/use: ""
            storage/iso/use: ""
            compute/vm/create: ""
            compute/vm/list: ""
            compute/vm/get: ""
            compute/vm.userMetadata/update: ""
            compute/vm.name/update: ""
            compute/vm/delete: ""
            compute/vm/start: ""
            compute/vm/restart: ""
            compute/vm/stop: ""
            compute/vm/turnoff: ""
            compute/vm/passwordReset: ""
            compute/vm/flavour: ""
            compute/vm/console: ""
            compute/vm.serialport/read: ""
            storage/iso/attach: ""
            compute/vm.metric/list: ""
            compute/vm.metric/get: ""
            compute/vm.point/list: ""
            compute/vm.service/list: ""
            compute/vm.service/get: ""
            compute/vm.tag/list: ""
            compute/vm.tag/create: ""
            compute/vm.tag/delete: ""
            compute/vm.tag/get: ""
            compute/vm.event/list: ""
            compute/vm.event/get: ""
            billing/reservation/create: ""
            billing/reservation/list: ""
            billing/reservation/get: ""
            billing/reservation.name/update: ""
            billing/reservation/delete: ""
            billing/reservation/assign: ""
            billing/reservation/extend: ""
            billing/reservation.service/list: ""
            billing/reservation.service/get: ""
            billing/reservation.tag/list: ""
            billing/reservation.tag/create: ""
            billing/reservation.tag/delete: ""
            billing/reservation.tag/get: ""
            billing/reservation.event/list: ""
            billing/reservation.event/get: ""
            vmhost/instance/list: ""
            vmhost/instance/get: ""
            vmhost/instance.service/list: ""
            vmhost/instance.service/get: ""
            vmhost/instance.tag/list: ""
            vmhost/instance.tag/create: ""
            vmhost/instance.tag/delete: ""
            vmhost/instance.tag/get: ""
            vmhost/instance.event/list: ""
            vmhost/instance.event/get: ""
            billing/service/list: ""
            billing/service/get: ""
      type: oauth2
x-tagGroups:
- name: iam
  tags:
  - iam_organisation
  - iam_organisation_policy
  - iam_organisation_role
  - iam_project
  - iam_project_policy
  - iam_project_role
  - iam_project_sa
  - iam_user
- name: support
  tags:
  - support_project_ticket
- name: provider
  tags:
  - provider_project_agent
- name: database
  tags:
  - database_project_instance
- name: insight
  tags:
  - insight_project_journal
- name: container
  tags:
  - container_project_registry
- name: website
  tags:
  - website_project_instance
- name: dns
  tags:
  - dns_project_zone
- name: storage
  tags:
  - storage_project_disk
  - storage_project_image
  - storage_project_iso
  - storage_project_vault
- name: networking
  tags:
  - networking_project_firewall
  - networking_project_ip
  - networking_project_netadp
  - networking_project_netgw
  - networking_project_network
- name: compute
  tags:
  - compute_project_replica
  - compute_project_vm
- name: billing
  tags:
  - billing_project_reservation
  - billing_project_service
- name: vmhost
  tags:
  - vmhost_project_instance
