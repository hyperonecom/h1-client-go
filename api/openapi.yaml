openapi: 3.0.0
info:
  title: HyperOne API
  version: 1.0.0
servers:
- description: HyperOne API
  url: https://api.hyperone.com/v1
security:
- Session: []
  Project: []
- ServiceAccount: []
paths:
  /project:
    get:
      description: List project
      operationId: list_project
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          type: string
        style: form
      - description: Filter by active
        explode: true
        in: query
        name: active
        required: false
        schema:
          type: string
        style: form
      - description: Filter by organisation
        explode: true
        in: query
        name: organisation
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/project'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: List
      tags:
      - project
    post:
      description: Create project
      operationId: create_project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/projectCreate'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Create
      tags:
      - project
  /project/{projectId}:
    get:
      description: Returns a single project
      operationId: show_project
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Get
      tags:
      - project
    patch:
      description: Returns modified project
      operationId: update_project
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Update
      tags:
      - project
  /project/{projectId}/accessrights/:
    get:
      operationId: operation_project_list_/accessrights/
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/project.accessRights'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - project
    post:
      operationId: operation_project_post_/accessrights/
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_1'
        content:
          application/json:
            schema:
              properties:
                identity:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project.accessRights'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - project
  /project/{projectId}/accessrights/{identity}:
    delete:
      operationId: operation_project_delete_/accessrights/:identity
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/:identity
      tags:
      - project
  /project/{projectId}/services/:
    get:
      operationId: operation_project_list_/services/
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/project.services'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/
      tags:
      - project
  /project/{projectId}/services/{serviceId}:
    get:
      operationId: operation_project_get_/services/:serviceId
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project.services'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/:serviceId
      tags:
      - project
  /project/{projectId}/tag/:
    get:
      operationId: operation_project_get_/tag/
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - project
    patch:
      operationId: operation_project_patch_/tag/
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - project
  /project/{projectId}/tag/{key}:
    delete:
      operationId: operation_project_delete_/tag/:key
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/:key
      tags:
      - project
  /project/{projectId}/queue/:
    get:
      operationId: operation_project_list_/queue/
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /queue/
      tags:
      - project
  /organisation:
    get:
      description: List organisation
      operationId: list_organisation
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by billing.company
        explode: true
        in: query
        name: billing.company
        required: false
        schema:
          type: string
        style: form
      - description: Filter by $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          type: string
        style: form
      - description: Filter by active
        explode: true
        in: query
        name: active
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/organisation'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: List
      tags:
      - organisation
    post:
      description: Create organisation
      operationId: create_organisation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organisationCreate'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organisation'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Create
      tags:
      - organisation
  /organisation/{organisationId}:
    get:
      description: Returns a single organisation
      operationId: show_organisation
      parameters:
      - description: ID of organisation
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organisation'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Get
      tags:
      - organisation
    patch:
      description: Returns modified organisation
      operationId: update_organisation
      parameters:
      - description: ID of organisation
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_2'
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                billing:
                  $ref: '#/components/schemas/organisationorganisationId_billing'
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organisation'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Update
      tags:
      - organisation
  /organisation/{organisationId}/actions/transfer_accept:
    post:
      description: Action transfer_accept
      operationId: action_organisation_transfer_accept
      parameters:
      - description: ID of organisation
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_3'
        content:
          application/json:
            schema:
              properties:
                payment:
                  type: string
                project:
                  type: string
              required:
              - payment
              - project
              type: object
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organisation'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/transfer_accept
      tags:
      - organisation
  /organisation/{organisationId}/accessrights/:
    get:
      operationId: operation_organisation_list_/accessrights/
      parameters:
      - description: ID of organisation
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/organisation.accessRights'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - organisation
    post:
      operationId: operation_organisation_post_/accessrights/
      parameters:
      - description: ID of organisation
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_4'
        content:
          application/json:
            schema:
              properties:
                identity:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organisation.accessRights'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - organisation
  /organisation/{organisationId}/accessrights/{identity}:
    delete:
      operationId: operation_organisation_delete_/accessrights/:identity
      parameters:
      - description: ID of organisation
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organisation'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organisation'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/:identity
      tags:
      - organisation
  /organisation/{organisationId}/tag/:
    get:
      operationId: operation_organisation_get_/tag/
      parameters:
      - description: ID of organisation
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organisation.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - organisation
    patch:
      operationId: operation_organisation_patch_/tag/
      parameters:
      - description: ID of organisation
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organisation.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - organisation
  /organisation/{organisationId}/tag/{key}:
    delete:
      operationId: operation_organisation_delete_/tag/:key
      parameters:
      - description: ID of organisation
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organisation.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/:key
      tags:
      - organisation
  /organisation/{organisationId}/queue/:
    get:
      operationId: operation_organisation_list_/queue/
      parameters:
      - description: ID of organisation
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /queue/
      tags:
      - organisation
  /container:
    get:
      description: List container
      operationId: list_container
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/container'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: List
      tags:
      - container
    post:
      description: Create container
      operationId: create_container
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/containerCreate'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Create
      tags:
      - container
  /container/{containerId}:
    delete:
      operationId: delete_container
      parameters:
      - description: ID of container
        explode: false
        in: path
        name: containerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Delete
      tags:
      - container
    get:
      description: Returns a single container
      operationId: show_container
      parameters:
      - description: ID of container
        explode: false
        in: path
        name: containerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Get
      tags:
      - container
    patch:
      description: Returns modified container
      operationId: update_container
      parameters:
      - description: ID of container
        explode: false
        in: path
        name: containerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_5'
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Update
      tags:
      - container
  /container/{containerId}/actions/start:
    post:
      description: Action start
      operationId: action_container_start
      parameters:
      - description: ID of container
        explode: false
        in: path
        name: containerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/start
      tags:
      - container
  /container/{containerId}/actions/stop:
    post:
      description: Action stop
      operationId: action_container_stop
      parameters:
      - description: ID of container
        explode: false
        in: path
        name: containerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/stop
      tags:
      - container
  /container/{containerId}/actions/restart:
    post:
      description: Action restart
      operationId: action_container_restart
      parameters:
      - description: ID of container
        explode: false
        in: path
        name: containerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/restart
      tags:
      - container
  /container/{containerId}/accessrights/:
    get:
      operationId: operation_container_list_/accessrights/
      parameters:
      - description: ID of container
        explode: false
        in: path
        name: containerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/container.accessRights'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - container
    post:
      operationId: operation_container_post_/accessrights/
      parameters:
      - description: ID of container
        explode: false
        in: path
        name: containerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_6'
        content:
          application/json:
            schema:
              properties:
                identity:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container.accessRights'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - container
  /container/{containerId}/accessrights/{identity}:
    delete:
      operationId: operation_container_delete_/accessrights/:identity
      parameters:
      - description: ID of container
        explode: false
        in: path
        name: containerId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/:identity
      tags:
      - container
  /container/{containerId}/services/:
    get:
      operationId: operation_container_list_/services/
      parameters:
      - description: ID of container
        explode: false
        in: path
        name: containerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/container.services'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/
      tags:
      - container
  /container/{containerId}/services/{serviceId}:
    get:
      operationId: operation_container_get_/services/:serviceId
      parameters:
      - description: ID of container
        explode: false
        in: path
        name: containerId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container.services'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/:serviceId
      tags:
      - container
  /container/{containerId}/tag/:
    get:
      operationId: operation_container_get_/tag/
      parameters:
      - description: ID of container
        explode: false
        in: path
        name: containerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - container
    patch:
      operationId: operation_container_patch_/tag/
      parameters:
      - description: ID of container
        explode: false
        in: path
        name: containerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - container
  /container/{containerId}/tag/{key}:
    delete:
      operationId: operation_container_delete_/tag/:key
      parameters:
      - description: ID of container
        explode: false
        in: path
        name: containerId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/:key
      tags:
      - container
  /container/{containerId}/queue/:
    get:
      operationId: operation_container_list_/queue/
      parameters:
      - description: ID of container
        explode: false
        in: path
        name: containerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /queue/
      tags:
      - container
  /firewall:
    get:
      description: List firewall
      operationId: list_firewall
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/firewall'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: List
      tags:
      - firewall
    post:
      description: Create firewall
      operationId: create_firewall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/firewallCreate'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Create
      tags:
      - firewall
  /firewall/{firewallId}:
    delete:
      operationId: delete_firewall
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      responses:
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Delete
      tags:
      - firewall
    get:
      description: Returns a single firewall
      operationId: show_firewall
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Get
      tags:
      - firewall
    patch:
      description: Returns modified firewall
      operationId: update_firewall
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_7'
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Update
      tags:
      - firewall
  /firewall/{firewallId}/actions/attach:
    post:
      description: Action attach
      operationId: action_firewall_attach
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/attach
      tags:
      - firewall
  /firewall/{firewallId}/actions/detach:
    post:
      description: Action detach
      operationId: action_firewall_detach
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/detach
      tags:
      - firewall
  /firewall/{firewallId}/actions/transfer:
    post:
      description: Action transfer
      operationId: action_firewall_transfer
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_8'
        content:
          application/json:
            schema:
              properties:
                project:
                  type: string
              required:
              - project
              type: object
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/transfer
      tags:
      - firewall
  /firewall/{firewallId}/ingress:
    get:
      operationId: operation_firewall_list_/ingress
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /ingress
      tags:
      - firewall
    post:
      operationId: operation_firewall_post_/ingress
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_9'
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                action:
                  type: string
                priority:
                  type: number
                filter:
                  items:
                    type: string
                  type: array
                external:
                  items:
                    type: string
                  type: array
                internal:
                  items:
                    type: string
                  type: array
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /ingress
      tags:
      - firewall
  /firewall/{firewallId}/ingress/{ruleId}:
    delete:
      operationId: operation_firewall_delete_/ingress/:ruleId
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      - description: ruleId
        explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /ingress/:ruleId
      tags:
      - firewall
    get:
      operationId: operation_firewall_get_/ingress/:ruleId
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      - description: ruleId
        explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /ingress/:ruleId
      tags:
      - firewall
  /firewall/{firewallId}/egress:
    get:
      operationId: operation_firewall_list_/egress
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /egress
      tags:
      - firewall
    post:
      operationId: operation_firewall_post_/egress
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_10'
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                action:
                  type: string
                priority:
                  type: number
                filter:
                  items:
                    type: string
                  type: array
                external:
                  items:
                    type: string
                  type: array
                internal:
                  items:
                    type: string
                  type: array
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /egress
      tags:
      - firewall
  /firewall/{firewallId}/egress/{ruleId}:
    delete:
      operationId: operation_firewall_delete_/egress/:ruleId
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      - description: ruleId
        explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /egress/:ruleId
      tags:
      - firewall
    get:
      operationId: operation_firewall_get_/egress/:ruleId
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      - description: ruleId
        explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /egress/:ruleId
      tags:
      - firewall
  /firewall/{firewallId}/accessrights/:
    get:
      operationId: operation_firewall_list_/accessrights/
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/firewall.accessRights'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - firewall
    post:
      operationId: operation_firewall_post_/accessrights/
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_11'
        content:
          application/json:
            schema:
              properties:
                identity:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall.accessRights'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - firewall
  /firewall/{firewallId}/accessrights/{identity}:
    delete:
      operationId: operation_firewall_delete_/accessrights/:identity
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/:identity
      tags:
      - firewall
  /firewall/{firewallId}/services/:
    get:
      operationId: operation_firewall_list_/services/
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/firewall.services'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/
      tags:
      - firewall
  /firewall/{firewallId}/services/{serviceId}:
    get:
      operationId: operation_firewall_get_/services/:serviceId
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall.services'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/:serviceId
      tags:
      - firewall
  /firewall/{firewallId}/tag/:
    get:
      operationId: operation_firewall_get_/tag/
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - firewall
    patch:
      operationId: operation_firewall_patch_/tag/
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - firewall
  /firewall/{firewallId}/tag/{key}:
    delete:
      operationId: operation_firewall_delete_/tag/:key
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/:key
      tags:
      - firewall
  /firewall/{firewallId}/queue/:
    get:
      operationId: operation_firewall_list_/queue/
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /queue/
      tags:
      - firewall
  /network:
    get:
      description: List network
      operationId: list_network
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/network'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: List
      tags:
      - network
    post:
      description: Create network
      operationId: create_network
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/networkCreate'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Create
      tags:
      - network
  /network/{networkId}:
    delete:
      operationId: delete_network
      parameters:
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      responses:
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Delete
      tags:
      - network
    get:
      description: Returns a single network
      operationId: show_network
      parameters:
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Get
      tags:
      - network
    patch:
      description: Returns modified network
      operationId: update_network
      parameters:
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_12'
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                gateway:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Update
      tags:
      - network
  /network/{networkId}/ip:
    get:
      operationId: operation_network_list_/ip
      parameters:
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ip'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /ip
      tags:
      - network
    post:
      operationId: operation_network_post_/ip
      parameters:
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_13'
        content:
          application/json:
            schema:
              properties:
                address:
                  type: string
                tag:
                  type: object
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /ip
      tags:
      - network
  /network/{networkId}/ip/:ipId:
    delete:
      operationId: operation_network_delete_/ip/:ipId
      parameters:
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /ip/:ipId
      tags:
      - network
    get:
      operationId: operation_network_get_/ip/:ipId
      parameters:
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /ip/:ipId
      tags:
      - network
  /network/{networkId}/accessrights/:
    get:
      operationId: operation_network_list_/accessrights/
      parameters:
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/network.accessRights'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - network
    post:
      operationId: operation_network_post_/accessrights/
      parameters:
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_14'
        content:
          application/json:
            schema:
              properties:
                identity:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.accessRights'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - network
  /network/{networkId}/accessrights/{identity}:
    delete:
      operationId: operation_network_delete_/accessrights/:identity
      parameters:
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/:identity
      tags:
      - network
  /network/{networkId}/services/:
    get:
      operationId: operation_network_list_/services/
      parameters:
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/network.services'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/
      tags:
      - network
  /network/{networkId}/services/{serviceId}:
    get:
      operationId: operation_network_get_/services/:serviceId
      parameters:
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.services'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/:serviceId
      tags:
      - network
  /network/{networkId}/tag/:
    get:
      operationId: operation_network_get_/tag/
      parameters:
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - network
    patch:
      operationId: operation_network_patch_/tag/
      parameters:
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - network
  /network/{networkId}/tag/{key}:
    delete:
      operationId: operation_network_delete_/tag/:key
      parameters:
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/:key
      tags:
      - network
  /network/{networkId}/queue/:
    get:
      operationId: operation_network_list_/queue/
      parameters:
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /queue/
      tags:
      - network
  /netgw:
    get:
      description: List netgw
      operationId: list_netgw
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/netgw'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: List
      tags:
      - netgw
    post:
      description: Create netgw
      operationId: create_netgw
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/netgwCreate'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Create
      tags:
      - netgw
  /netgw/{netgwId}:
    delete:
      operationId: delete_netgw
      parameters:
      - description: ID of netgw
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          type: string
        style: simple
      responses:
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Delete
      tags:
      - netgw
    get:
      description: Returns a single netgw
      operationId: show_netgw
      parameters:
      - description: ID of netgw
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Get
      tags:
      - netgw
    patch:
      description: Returns modified netgw
      operationId: update_netgw
      parameters:
      - description: ID of netgw
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_15'
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Update
      tags:
      - netgw
  /netgw/{netgwId}/actions/attach:
    post:
      description: Action attach
      operationId: action_netgw_attach
      parameters:
      - description: ID of netgw
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/attach
      tags:
      - netgw
  /netgw/{netgwId}/actions/detach:
    post:
      description: Action detach
      operationId: action_netgw_detach
      parameters:
      - description: ID of netgw
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/detach
      tags:
      - netgw
  /netgw/{netgwId}/accessrights/:
    get:
      operationId: operation_netgw_list_/accessrights/
      parameters:
      - description: ID of netgw
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/netgw.accessRights'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - netgw
    post:
      operationId: operation_netgw_post_/accessrights/
      parameters:
      - description: ID of netgw
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_16'
        content:
          application/json:
            schema:
              properties:
                identity:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw.accessRights'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - netgw
  /netgw/{netgwId}/accessrights/{identity}:
    delete:
      operationId: operation_netgw_delete_/accessrights/:identity
      parameters:
      - description: ID of netgw
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/:identity
      tags:
      - netgw
  /netgw/{netgwId}/services/:
    get:
      operationId: operation_netgw_list_/services/
      parameters:
      - description: ID of netgw
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/netgw.services'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/
      tags:
      - netgw
  /netgw/{netgwId}/services/{serviceId}:
    get:
      operationId: operation_netgw_get_/services/:serviceId
      parameters:
      - description: ID of netgw
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw.services'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/:serviceId
      tags:
      - netgw
  /netgw/{netgwId}/tag/:
    get:
      operationId: operation_netgw_get_/tag/
      parameters:
      - description: ID of netgw
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - netgw
    patch:
      operationId: operation_netgw_patch_/tag/
      parameters:
      - description: ID of netgw
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - netgw
  /netgw/{netgwId}/tag/{key}:
    delete:
      operationId: operation_netgw_delete_/tag/:key
      parameters:
      - description: ID of netgw
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/:key
      tags:
      - netgw
  /netgw/{netgwId}/queue/:
    get:
      operationId: operation_netgw_list_/queue/
      parameters:
      - description: ID of netgw
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /queue/
      tags:
      - netgw
  /image:
    get:
      description: List image
      operationId: list_image
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/image'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: List
      tags:
      - image
    post:
      description: Create image
      operationId: create_image
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/imageCreate'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Create
      tags:
      - image
  /image/{imageId}:
    delete:
      operationId: delete_image
      parameters:
      - description: ID of image
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Delete
      tags:
      - image
    get:
      description: Returns a single image
      operationId: show_image
      parameters:
      - description: ID of image
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Get
      tags:
      - image
    patch:
      description: Returns modified image
      operationId: update_image
      parameters:
      - description: ID of image
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_17'
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                description:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Update
      tags:
      - image
  /image/{imageId}/actions/transfer:
    post:
      description: Action transfer
      operationId: action_image_transfer
      parameters:
      - description: ID of image
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_18'
        content:
          application/json:
            schema:
              properties:
                project:
                  type: string
              required:
              - project
              type: object
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/transfer
      tags:
      - image
  /image/{imageId}/accessrights/:
    get:
      operationId: operation_image_list_/accessrights/
      parameters:
      - description: ID of image
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/image.accessRights'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - image
    post:
      operationId: operation_image_post_/accessrights/
      parameters:
      - description: ID of image
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_19'
        content:
          application/json:
            schema:
              properties:
                identity:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image.accessRights'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - image
  /image/{imageId}/accessrights/{identity}:
    delete:
      operationId: operation_image_delete_/accessrights/:identity
      parameters:
      - description: ID of image
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/:identity
      tags:
      - image
  /image/{imageId}/services/:
    get:
      operationId: operation_image_list_/services/
      parameters:
      - description: ID of image
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/image.services'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/
      tags:
      - image
  /image/{imageId}/services/{serviceId}:
    get:
      operationId: operation_image_get_/services/:serviceId
      parameters:
      - description: ID of image
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image.services'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/:serviceId
      tags:
      - image
  /image/{imageId}/tag/:
    get:
      operationId: operation_image_get_/tag/
      parameters:
      - description: ID of image
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - image
    patch:
      operationId: operation_image_patch_/tag/
      parameters:
      - description: ID of image
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - image
  /image/{imageId}/tag/{key}:
    delete:
      operationId: operation_image_delete_/tag/:key
      parameters:
      - description: ID of image
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/:key
      tags:
      - image
  /image/{imageId}/queue/:
    get:
      operationId: operation_image_list_/queue/
      parameters:
      - description: ID of image
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /queue/
      tags:
      - image
  /disk:
    get:
      description: List disk
      operationId: list_disk
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/disk'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: List
      tags:
      - disk
    post:
      description: Create disk
      operationId: create_disk
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/diskCreate'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Create
      tags:
      - disk
  /disk/{diskId}:
    delete:
      operationId: delete_disk
      parameters:
      - description: ID of disk
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Delete
      tags:
      - disk
    get:
      description: Returns a single disk
      operationId: show_disk
      parameters:
      - description: ID of disk
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Get
      tags:
      - disk
    patch:
      description: Returns modified disk
      operationId: update_disk
      parameters:
      - description: ID of disk
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_20'
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Update
      tags:
      - disk
  /disk/{diskId}/actions/resize:
    post:
      description: Action resize
      operationId: action_disk_resize
      parameters:
      - description: ID of disk
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/resize
      tags:
      - disk
  /disk/{diskId}/actions/transfer:
    post:
      description: Action transfer
      operationId: action_disk_transfer
      parameters:
      - description: ID of disk
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_21'
        content:
          application/json:
            schema:
              properties:
                project:
                  type: string
              required:
              - project
              type: object
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/transfer
      tags:
      - disk
  /disk/{diskId}/accessrights/:
    get:
      operationId: operation_disk_list_/accessrights/
      parameters:
      - description: ID of disk
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/disk.accessRights'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - disk
    post:
      operationId: operation_disk_post_/accessrights/
      parameters:
      - description: ID of disk
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_22'
        content:
          application/json:
            schema:
              properties:
                identity:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk.accessRights'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - disk
  /disk/{diskId}/accessrights/{identity}:
    delete:
      operationId: operation_disk_delete_/accessrights/:identity
      parameters:
      - description: ID of disk
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/:identity
      tags:
      - disk
  /disk/{diskId}/services/:
    get:
      operationId: operation_disk_list_/services/
      parameters:
      - description: ID of disk
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/disk.services'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/
      tags:
      - disk
  /disk/{diskId}/services/{serviceId}:
    get:
      operationId: operation_disk_get_/services/:serviceId
      parameters:
      - description: ID of disk
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk.services'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/:serviceId
      tags:
      - disk
  /disk/{diskId}/tag/:
    get:
      operationId: operation_disk_get_/tag/
      parameters:
      - description: ID of disk
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - disk
    patch:
      operationId: operation_disk_patch_/tag/
      parameters:
      - description: ID of disk
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - disk
  /disk/{diskId}/tag/{key}:
    delete:
      operationId: operation_disk_delete_/tag/:key
      parameters:
      - description: ID of disk
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/:key
      tags:
      - disk
  /disk/{diskId}/queue/:
    get:
      operationId: operation_disk_list_/queue/
      parameters:
      - description: ID of disk
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /queue/
      tags:
      - disk
  /iso:
    get:
      description: List iso
      operationId: list_iso
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/iso'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: List
      tags:
      - iso
    post:
      description: Create iso
      operationId: create_iso
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/isoCreate'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iso'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Create
      tags:
      - iso
  /iso/{isoId}:
    delete:
      operationId: delete_iso
      parameters:
      - description: ID of iso
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          type: string
        style: simple
      responses:
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Delete
      tags:
      - iso
    get:
      description: Returns a single iso
      operationId: show_iso
      parameters:
      - description: ID of iso
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iso'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Get
      tags:
      - iso
    patch:
      description: Returns modified iso
      operationId: update_iso
      parameters:
      - description: ID of iso
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_23'
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iso'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Update
      tags:
      - iso
  /iso/{isoId}/actions/transfer:
    post:
      description: Action transfer
      operationId: action_iso_transfer
      parameters:
      - description: ID of iso
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_24'
        content:
          application/json:
            schema:
              properties:
                project:
                  type: string
              required:
              - project
              type: object
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iso'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/transfer
      tags:
      - iso
  /iso/{isoId}/accessrights/:
    get:
      operationId: operation_iso_list_/accessrights/
      parameters:
      - description: ID of iso
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/iso.accessRights'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - iso
    post:
      operationId: operation_iso_post_/accessrights/
      parameters:
      - description: ID of iso
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_25'
        content:
          application/json:
            schema:
              properties:
                identity:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iso.accessRights'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - iso
  /iso/{isoId}/accessrights/{identity}:
    delete:
      operationId: operation_iso_delete_/accessrights/:identity
      parameters:
      - description: ID of iso
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iso'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iso'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/:identity
      tags:
      - iso
  /iso/{isoId}/services/:
    get:
      operationId: operation_iso_list_/services/
      parameters:
      - description: ID of iso
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/iso.services'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/
      tags:
      - iso
  /iso/{isoId}/services/{serviceId}:
    get:
      operationId: operation_iso_get_/services/:serviceId
      parameters:
      - description: ID of iso
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iso.services'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/:serviceId
      tags:
      - iso
  /iso/{isoId}/tag/:
    get:
      operationId: operation_iso_get_/tag/
      parameters:
      - description: ID of iso
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iso.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - iso
    patch:
      operationId: operation_iso_patch_/tag/
      parameters:
      - description: ID of iso
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iso.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - iso
  /iso/{isoId}/tag/{key}:
    delete:
      operationId: operation_iso_delete_/tag/:key
      parameters:
      - description: ID of iso
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iso.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/:key
      tags:
      - iso
  /iso/{isoId}/queue/:
    get:
      operationId: operation_iso_list_/queue/
      parameters:
      - description: ID of iso
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /queue/
      tags:
      - iso
  /vm:
    get:
      description: List vm
      operationId: list_vm
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/vm'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: List
      tags:
      - vm
    post:
      description: Create vm
      operationId: create_vm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmCreate'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Create
      tags:
      - vm
  /vm/{vmId}:
    delete:
      operationId: delete_vm
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      responses:
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Delete
      tags:
      - vm
    get:
      description: Returns a single vm
      operationId: show_vm
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Get
      tags:
      - vm
    patch:
      description: Returns modified vm
      operationId: update_vm
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_26'
        content:
          application/json:
            schema:
              properties:
                userMetadata:
                  type: string
                name:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Update
      tags:
      - vm
  /vm/{vmId}/actions/start:
    post:
      description: Action start
      operationId: action_vm_start
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/start
      tags:
      - vm
  /vm/{vmId}/actions/restart:
    post:
      description: Action restart
      operationId: action_vm_restart
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/restart
      tags:
      - vm
  /vm/{vmId}/actions/stop:
    post:
      description: Action stop
      operationId: action_vm_stop
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/stop
      tags:
      - vm
  /vm/{vmId}/actions/turnoff:
    post:
      description: Action turnoff
      operationId: action_vm_turnoff
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/turnoff
      tags:
      - vm
  /vm/{vmId}/actions/rename:
    post:
      description: Action rename
      operationId: action_vm_rename
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/rename
      tags:
      - vm
  /vm/{vmId}/actions/password_reset:
    post:
      description: Action password_reset
      operationId: action_vm_password_reset
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_27'
        content:
          application/json:
            schema:
              properties:
                userName:
                  type: string
                modulus:
                  type: string
                exponent:
                  type: string
              required:
              - exponent
              - modulus
              - userName
              type: object
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/password_reset
      tags:
      - vm
  /vm/{vmId}/actions/image:
    post:
      description: Action image
      operationId: action_vm_image
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_28'
        content:
          application/json:
            schema:
              properties:
                service:
                  format: ObjectId
                  type: string
                description:
                  type: string
                name:
                  type: string
              required:
              - service
              type: object
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/image
      tags:
      - vm
  /vm/{vmId}/actions/flavour:
    post:
      description: Action flavour
      operationId: action_vm_flavour
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/flavour
      tags:
      - vm
  /vm/{vmId}/hdd:
    get:
      operationId: operation_vm_list_/hdd
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/hdd'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /hdd
      tags:
      - vm
    post:
      operationId: operation_vm_post_/hdd
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_29'
        content:
          application/json:
            schema:
              properties:
                disk:
                  type: string
                controllerType:
                  type: string
              required:
              - disk
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /hdd
      tags:
      - vm
  /vm/{vmId}/hdd/{diskId}:
    delete:
      operationId: operation_vm_delete_/hdd/:diskId
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      - description: diskId
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /hdd/:diskId
      tags:
      - vm
  /vm/{vmId}/netadp:
    delete:
      operationId: operation_vm_delete_/netadp
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /netadp
      tags:
      - vm
    get:
      operationId: operation_vm_list_/netadp
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/netadp'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /netadp
      tags:
      - vm
    post:
      operationId: operation_vm_post_/netadp
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_30'
        content:
          application/json:
            schema:
              properties:
                service:
                  format: ObjectId
                  type: string
                network:
                  type: string
                ip:
                  type: string
                tag:
                  type: object
                vlanIds:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /netadp
      tags:
      - vm
  /vm/{vmId}/accessrights/:
    get:
      operationId: operation_vm_list_/accessrights/
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/vm.accessRights'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - vm
    post:
      operationId: operation_vm_post_/accessrights/
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_31'
        content:
          application/json:
            schema:
              properties:
                identity:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm.accessRights'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - vm
  /vm/{vmId}/accessrights/{identity}:
    delete:
      operationId: operation_vm_delete_/accessrights/:identity
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/:identity
      tags:
      - vm
  /vm/{vmId}/services/:
    get:
      operationId: operation_vm_list_/services/
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/vm.services'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/
      tags:
      - vm
  /vm/{vmId}/services/{serviceId}:
    get:
      operationId: operation_vm_get_/services/:serviceId
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm.services'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/:serviceId
      tags:
      - vm
  /vm/{vmId}/tag/:
    get:
      operationId: operation_vm_get_/tag/
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - vm
    patch:
      operationId: operation_vm_patch_/tag/
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - vm
  /vm/{vmId}/tag/{key}:
    delete:
      operationId: operation_vm_delete_/tag/:key
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/:key
      tags:
      - vm
  /vm/{vmId}/queue/:
    get:
      operationId: operation_vm_list_/queue/
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /queue/
      tags:
      - vm
  /ip:
    get:
      description: List ip
      operationId: list_ip
      parameters:
      - description: Filter by mac
        explode: true
        in: query
        name: mac
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ip'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: List
      tags:
      - ip
    post:
      description: Create ip
      operationId: create_ip
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ipCreate'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Create
      tags:
      - ip
  /ip/{ipId}:
    delete:
      operationId: delete_ip
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      responses:
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Delete
      tags:
      - ip
    get:
      description: Returns a single ip
      operationId: show_ip
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Get
      tags:
      - ip
    patch:
      description: Returns modified ip
      operationId: update_ip
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_32'
        content:
          application/json:
            schema:
              properties:
                ptrRecord:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Update
      tags:
      - ip
  /ip/{ipId}/actions/release:
    post:
      description: Action release
      operationId: action_ip_release
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/release
      tags:
      - ip
  /ip/{ipId}/actions/allocate:
    post:
      description: Action allocate
      operationId: action_ip_allocate
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/allocate
      tags:
      - ip
  /ip/{ipId}/actions/associate:
    post:
      description: Action associate
      operationId: action_ip_associate
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/associate
      tags:
      - ip
  /ip/{ipId}/actions/disassociate:
    post:
      description: Action disassociate
      operationId: action_ip_disassociate
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/disassociate
      tags:
      - ip
  /ip/{ipId}/actions/transfer:
    post:
      description: Action transfer
      operationId: action_ip_transfer
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_33'
        content:
          application/json:
            schema:
              properties:
                project:
                  type: string
              required:
              - project
              type: object
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/transfer
      tags:
      - ip
  /ip/{ipId}/accessrights/:
    get:
      operationId: operation_ip_list_/accessrights/
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ip.accessRights'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - ip
    post:
      operationId: operation_ip_post_/accessrights/
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_34'
        content:
          application/json:
            schema:
              properties:
                identity:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip.accessRights'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - ip
  /ip/{ipId}/accessrights/{identity}:
    delete:
      operationId: operation_ip_delete_/accessrights/:identity
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/:identity
      tags:
      - ip
  /ip/{ipId}/services/:
    get:
      operationId: operation_ip_list_/services/
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ip.services'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/
      tags:
      - ip
  /ip/{ipId}/services/{serviceId}:
    get:
      operationId: operation_ip_get_/services/:serviceId
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip.services'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/:serviceId
      tags:
      - ip
  /ip/{ipId}/tag/:
    get:
      operationId: operation_ip_get_/tag/
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - ip
    patch:
      operationId: operation_ip_patch_/tag/
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - ip
  /ip/{ipId}/tag/{key}:
    delete:
      operationId: operation_ip_delete_/tag/:key
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/:key
      tags:
      - ip
  /ip/{ipId}/queue/:
    get:
      operationId: operation_ip_list_/queue/
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /queue/
      tags:
      - ip
  /netadp:
    get:
      description: List netadp
      operationId: list_netadp
      parameters:
      - description: Filter by assigned.resource
        explode: true
        in: query
        name: assigned.resource
        required: false
        schema:
          type: string
        style: form
      - description: Filter by assigned.id
        explode: true
        in: query
        name: assigned.id
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/netadp'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: List
      tags:
      - netadp
  /netadp/{netadpId}:
    get:
      description: Returns a single netadp
      operationId: show_netadp
      parameters:
      - description: ID of netadp
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netadp'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Get
      tags:
      - netadp
  /netadp/{netadpId}/accessrights/:
    get:
      operationId: operation_netadp_list_/accessrights/
      parameters:
      - description: ID of netadp
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/netadp.accessRights'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - netadp
    post:
      operationId: operation_netadp_post_/accessrights/
      parameters:
      - description: ID of netadp
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_35'
        content:
          application/json:
            schema:
              properties:
                identity:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netadp.accessRights'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - netadp
  /netadp/{netadpId}/accessrights/{identity}:
    delete:
      operationId: operation_netadp_delete_/accessrights/:identity
      parameters:
      - description: ID of netadp
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netadp'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netadp'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/:identity
      tags:
      - netadp
  /netadp/{netadpId}/services/:
    get:
      operationId: operation_netadp_list_/services/
      parameters:
      - description: ID of netadp
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/netadp.services'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/
      tags:
      - netadp
  /netadp/{netadpId}/services/{serviceId}:
    get:
      operationId: operation_netadp_get_/services/:serviceId
      parameters:
      - description: ID of netadp
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netadp.services'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/:serviceId
      tags:
      - netadp
  /netadp/{netadpId}/tag/:
    get:
      operationId: operation_netadp_get_/tag/
      parameters:
      - description: ID of netadp
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netadp.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - netadp
    patch:
      operationId: operation_netadp_patch_/tag/
      parameters:
      - description: ID of netadp
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netadp.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - netadp
  /netadp/{netadpId}/tag/{key}:
    delete:
      operationId: operation_netadp_delete_/tag/:key
      parameters:
      - description: ID of netadp
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netadp.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/:key
      tags:
      - netadp
  /netadp/{netadpId}/queue/:
    get:
      operationId: operation_netadp_list_/queue/
      parameters:
      - description: ID of netadp
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /queue/
      tags:
      - netadp
  /vault:
    get:
      description: List vault
      operationId: list_vault
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/vault'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: List
      tags:
      - vault
    post:
      description: Create vault
      operationId: create_vault
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vaultCreate'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Create
      tags:
      - vault
  /vault/{vaultId}:
    delete:
      operationId: delete_vault
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      responses:
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Delete
      tags:
      - vault
    get:
      description: Returns a single vault
      operationId: show_vault
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Get
      tags:
      - vault
    patch:
      description: Returns modified vault
      operationId: update_vault
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_36'
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Update
      tags:
      - vault
  /vault/{vaultId}/actions/start:
    post:
      description: Action start
      operationId: action_vault_start
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/start
      tags:
      - vault
  /vault/{vaultId}/actions/stop:
    post:
      description: Action stop
      operationId: action_vault_stop
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/stop
      tags:
      - vault
  /vault/{vaultId}/actions/resize:
    post:
      description: Action resize
      operationId: action_vault_resize
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/resize
      tags:
      - vault
  /vault/{vaultId}/actions/snapshot:
    post:
      description: Action snapshot
      operationId: action_vault_snapshot
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/snapshot
      tags:
      - vault
  /vault/{vaultId}/credential/password:
    get:
      operationId: operation_vault_list_/credential/password
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/credential.password'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /credential/password
      tags:
      - vault
    post:
      operationId: operation_vault_post_/credential/password
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_37'
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                type:
                  type: string
                value:
                  type: string
              required:
              - name
              - type
              - value
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.password'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /credential/password
      tags:
      - vault
  /vault/{vaultId}/credential/password/{id}:
    delete:
      operationId: operation_vault_delete_/credential/password/:id
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /credential/password/:id
      tags:
      - vault
    get:
      operationId: operation_vault_get_/credential/password/:id
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.password'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /credential/password/:id
      tags:
      - vault
    patch:
      operationId: operation_vault_patch_/credential/password/:id
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_38'
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.password'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /credential/password/:id
      tags:
      - vault
  /vault/{vaultId}/credential/certificate:
    get:
      operationId: operation_vault_list_/credential/certificate
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/credential.certificate'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /credential/certificate
      tags:
      - vault
    post:
      operationId: operation_vault_post_/credential/certificate
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_39'
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                type:
                  type: string
                value:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.certificate'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /credential/certificate
      tags:
      - vault
  /vault/{vaultId}/credential/certificate/{id}:
    delete:
      operationId: operation_vault_delete_/credential/certificate/:id
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /credential/certificate/:id
      tags:
      - vault
    get:
      operationId: operation_vault_get_/credential/certificate/:id
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.certificate'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /credential/certificate/:id
      tags:
      - vault
    patch:
      operationId: operation_vault_patch_/credential/certificate/:id
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_40'
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.certificate'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /credential/certificate/:id
      tags:
      - vault
  /vault/{vaultId}/accessrights/:
    get:
      operationId: operation_vault_list_/accessrights/
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/vault.accessRights'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - vault
    post:
      operationId: operation_vault_post_/accessrights/
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_41'
        content:
          application/json:
            schema:
              properties:
                identity:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault.accessRights'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - vault
  /vault/{vaultId}/accessrights/{identity}:
    delete:
      operationId: operation_vault_delete_/accessrights/:identity
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/:identity
      tags:
      - vault
  /vault/{vaultId}/services/:
    get:
      operationId: operation_vault_list_/services/
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/vault.services'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/
      tags:
      - vault
  /vault/{vaultId}/services/{serviceId}:
    get:
      operationId: operation_vault_get_/services/:serviceId
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault.services'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/:serviceId
      tags:
      - vault
  /vault/{vaultId}/tag/:
    get:
      operationId: operation_vault_get_/tag/
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - vault
    patch:
      operationId: operation_vault_patch_/tag/
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - vault
  /vault/{vaultId}/tag/{key}:
    delete:
      operationId: operation_vault_delete_/tag/:key
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/:key
      tags:
      - vault
  /vault/{vaultId}/queue/:
    get:
      operationId: operation_vault_list_/queue/
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /queue/
      tags:
      - vault
  /snapshot:
    get:
      description: List snapshot
      operationId: list_snapshot
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by vault
        explode: true
        in: query
        name: vault
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/snapshot'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: List
      tags:
      - snapshot
    post:
      description: Create snapshot
      operationId: create_snapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/snapshotCreate'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snapshot'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Create
      tags:
      - snapshot
  /snapshot/{snapshotId}:
    delete:
      operationId: delete_snapshot
      parameters:
      - description: ID of snapshot
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      responses:
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Delete
      tags:
      - snapshot
    get:
      description: Returns a single snapshot
      operationId: show_snapshot
      parameters:
      - description: ID of snapshot
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snapshot'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Get
      tags:
      - snapshot
    patch:
      description: Returns modified snapshot
      operationId: update_snapshot
      parameters:
      - description: ID of snapshot
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_42'
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snapshot'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Update
      tags:
      - snapshot
  /snapshot/{snapshotId}/accessrights/:
    get:
      operationId: operation_snapshot_list_/accessrights/
      parameters:
      - description: ID of snapshot
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/snapshot.accessRights'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - snapshot
    post:
      operationId: operation_snapshot_post_/accessrights/
      parameters:
      - description: ID of snapshot
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_43'
        content:
          application/json:
            schema:
              properties:
                identity:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snapshot.accessRights'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - snapshot
  /snapshot/{snapshotId}/accessrights/{identity}:
    delete:
      operationId: operation_snapshot_delete_/accessrights/:identity
      parameters:
      - description: ID of snapshot
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snapshot'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snapshot'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/:identity
      tags:
      - snapshot
  /snapshot/{snapshotId}/services/:
    get:
      operationId: operation_snapshot_list_/services/
      parameters:
      - description: ID of snapshot
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/snapshot.services'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/
      tags:
      - snapshot
  /snapshot/{snapshotId}/services/{serviceId}:
    get:
      operationId: operation_snapshot_get_/services/:serviceId
      parameters:
      - description: ID of snapshot
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snapshot.services'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/:serviceId
      tags:
      - snapshot
  /snapshot/{snapshotId}/tag/:
    get:
      operationId: operation_snapshot_get_/tag/
      parameters:
      - description: ID of snapshot
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snapshot.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - snapshot
    patch:
      operationId: operation_snapshot_patch_/tag/
      parameters:
      - description: ID of snapshot
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snapshot.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - snapshot
  /snapshot/{snapshotId}/tag/{key}:
    delete:
      operationId: operation_snapshot_delete_/tag/:key
      parameters:
      - description: ID of snapshot
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snapshot.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/:key
      tags:
      - snapshot
  /snapshot/{snapshotId}/queue/:
    get:
      operationId: operation_snapshot_list_/queue/
      parameters:
      - description: ID of snapshot
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /queue/
      tags:
      - snapshot
  /reservation:
    get:
      description: List reservation
      operationId: list_reservation
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/reservation'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: List
      tags:
      - reservation
    post:
      description: Create reservation
      operationId: create_reservation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reservationCreate'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Create
      tags:
      - reservation
  /reservation/{reservationId}:
    delete:
      operationId: delete_reservation
      parameters:
      - description: ID of reservation
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Delete
      tags:
      - reservation
    get:
      description: Returns a single reservation
      operationId: show_reservation
      parameters:
      - description: ID of reservation
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Get
      tags:
      - reservation
    patch:
      description: Returns modified reservation
      operationId: update_reservation
      parameters:
      - description: ID of reservation
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_44'
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Update
      tags:
      - reservation
  /reservation/{reservationId}/actions/assign:
    post:
      description: Action assign
      operationId: action_reservation_assign
      parameters:
      - description: ID of reservation
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/assign
      tags:
      - reservation
  /reservation/{reservationId}/actions/extend:
    post:
      description: Action extend
      operationId: action_reservation_extend
      parameters:
      - description: ID of reservation
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/extend
      tags:
      - reservation
  /reservation/{reservationId}/actions/unassign:
    post:
      description: Action unassign
      operationId: action_reservation_unassign
      parameters:
      - description: ID of reservation
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/unassign
      tags:
      - reservation
  /reservation/{reservationId}/accessrights/:
    get:
      operationId: operation_reservation_list_/accessrights/
      parameters:
      - description: ID of reservation
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/reservation.accessRights'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - reservation
    post:
      operationId: operation_reservation_post_/accessrights/
      parameters:
      - description: ID of reservation
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_45'
        content:
          application/json:
            schema:
              properties:
                identity:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation.accessRights'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - reservation
  /reservation/{reservationId}/accessrights/{identity}:
    delete:
      operationId: operation_reservation_delete_/accessrights/:identity
      parameters:
      - description: ID of reservation
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/:identity
      tags:
      - reservation
  /reservation/{reservationId}/services/:
    get:
      operationId: operation_reservation_list_/services/
      parameters:
      - description: ID of reservation
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/reservation.services'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/
      tags:
      - reservation
  /reservation/{reservationId}/services/{serviceId}:
    get:
      operationId: operation_reservation_get_/services/:serviceId
      parameters:
      - description: ID of reservation
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation.services'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/:serviceId
      tags:
      - reservation
  /reservation/{reservationId}/tag/:
    get:
      operationId: operation_reservation_get_/tag/
      parameters:
      - description: ID of reservation
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - reservation
    patch:
      operationId: operation_reservation_patch_/tag/
      parameters:
      - description: ID of reservation
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - reservation
  /reservation/{reservationId}/tag/{key}:
    delete:
      operationId: operation_reservation_delete_/tag/:key
      parameters:
      - description: ID of reservation
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/:key
      tags:
      - reservation
  /reservation/{reservationId}/queue/:
    get:
      operationId: operation_reservation_list_/queue/
      parameters:
      - description: ID of reservation
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /queue/
      tags:
      - reservation
  /logArchive:
    get:
      description: List logArchive
      operationId: list_logArchive
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/logArchive'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: List
      tags:
      - logArchive
    post:
      description: Create logArchive
      operationId: create_logArchive
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/logArchiveCreate'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logArchive'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Create
      tags:
      - logArchive
  /logArchive/{logArchiveId}:
    delete:
      operationId: delete_logArchive
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      responses:
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Delete
      tags:
      - logArchive
    get:
      description: Returns a single logArchive
      operationId: show_logArchive
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logArchive'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Get
      tags:
      - logArchive
    patch:
      description: Returns modified logArchive
      operationId: update_logArchive
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_46'
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logArchive'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Update
      tags:
      - logArchive
  /logArchive/{logArchiveId}/actions/transfer:
    post:
      description: Action transfer
      operationId: action_logArchive_transfer
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_47'
        content:
          application/json:
            schema:
              properties:
                project:
                  type: string
              required:
              - project
              type: object
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logArchive'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/transfer
      tags:
      - logArchive
  /logArchive/{logArchiveId}/credential/password:
    get:
      operationId: operation_logArchive_list_/credential/password
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/credential.password'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /credential/password
      tags:
      - logArchive
    post:
      operationId: operation_logArchive_post_/credential/password
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_48'
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                type:
                  type: string
                value:
                  type: string
              required:
              - name
              - type
              - value
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.password'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /credential/password
      tags:
      - logArchive
  /logArchive/{logArchiveId}/credential/password/{id}:
    delete:
      operationId: operation_logArchive_delete_/credential/password/:id
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logArchive'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logArchive'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /credential/password/:id
      tags:
      - logArchive
    get:
      operationId: operation_logArchive_get_/credential/password/:id
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.password'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /credential/password/:id
      tags:
      - logArchive
    patch:
      operationId: operation_logArchive_patch_/credential/password/:id
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_49'
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.password'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /credential/password/:id
      tags:
      - logArchive
  /logArchive/{logArchiveId}/credential/certificate:
    get:
      operationId: operation_logArchive_list_/credential/certificate
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/credential.certificate'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /credential/certificate
      tags:
      - logArchive
    post:
      operationId: operation_logArchive_post_/credential/certificate
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_50'
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                type:
                  type: string
                value:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.certificate'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /credential/certificate
      tags:
      - logArchive
  /logArchive/{logArchiveId}/credential/certificate/{id}:
    delete:
      operationId: operation_logArchive_delete_/credential/certificate/:id
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logArchive'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logArchive'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /credential/certificate/:id
      tags:
      - logArchive
    get:
      operationId: operation_logArchive_get_/credential/certificate/:id
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.certificate'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /credential/certificate/:id
      tags:
      - logArchive
    patch:
      operationId: operation_logArchive_patch_/credential/certificate/:id
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_51'
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.certificate'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /credential/certificate/:id
      tags:
      - logArchive
  /logArchive/{logArchiveId}/accessrights/:
    get:
      operationId: operation_logArchive_list_/accessrights/
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/logArchive.accessRights'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - logArchive
    post:
      operationId: operation_logArchive_post_/accessrights/
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_52'
        content:
          application/json:
            schema:
              properties:
                identity:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logArchive.accessRights'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - logArchive
  /logArchive/{logArchiveId}/accessrights/{identity}:
    delete:
      operationId: operation_logArchive_delete_/accessrights/:identity
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logArchive'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logArchive'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/:identity
      tags:
      - logArchive
  /logArchive/{logArchiveId}/services/:
    get:
      operationId: operation_logArchive_list_/services/
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/logArchive.services'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/
      tags:
      - logArchive
  /logArchive/{logArchiveId}/services/{serviceId}:
    get:
      operationId: operation_logArchive_get_/services/:serviceId
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logArchive.services'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/:serviceId
      tags:
      - logArchive
  /logArchive/{logArchiveId}/tag/:
    get:
      operationId: operation_logArchive_get_/tag/
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logArchive.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - logArchive
    patch:
      operationId: operation_logArchive_patch_/tag/
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logArchive.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - logArchive
  /logArchive/{logArchiveId}/tag/{key}:
    delete:
      operationId: operation_logArchive_delete_/tag/:key
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logArchive.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/:key
      tags:
      - logArchive
  /logArchive/{logArchiveId}/queue/:
    get:
      operationId: operation_logArchive_list_/queue/
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /queue/
      tags:
      - logArchive
  /vmhost:
    get:
      description: List vmhost
      operationId: list_vmhost
      parameters:
      - description: Filter by enabledServices
        explode: true
        in: query
        name: enabledServices
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/vmhost'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: List
      tags:
      - vmhost
  /vmhost/{vmhostId}:
    delete:
      operationId: delete_vmhost
      parameters:
      - description: ID of vmhost
        explode: false
        in: path
        name: vmhostId
        required: true
        schema:
          type: string
        style: simple
      responses:
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Delete
      tags:
      - vmhost
    get:
      description: Returns a single vmhost
      operationId: show_vmhost
      parameters:
      - description: ID of vmhost
        explode: false
        in: path
        name: vmhostId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vmhost'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Get
      tags:
      - vmhost
    patch:
      description: Returns modified vmhost
      operationId: update_vmhost
      parameters:
      - description: ID of vmhost
        explode: false
        in: path
        name: vmhostId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_53'
        content:
          application/json:
            schema:
              properties:
                enabledServices:
                  $ref: '#/components/schemas/vmhostvmhostId_enabledServices'
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vmhost'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Update
      tags:
      - vmhost
  /vmhost/{vmhostId}/actions/moveVM:
    post:
      description: Action moveVM
      operationId: action_vmhost_moveVM
      parameters:
      - description: ID of vmhost
        explode: false
        in: path
        name: vmhostId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_54'
        content:
          application/json:
            schema:
              properties:
                vm:
                  type: string
                vmhost:
                  type: string
              required:
              - vm
              type: object
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vmhost'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/moveVM
      tags:
      - vmhost
  /vmhost/{vmhostId}/actions/moveDisk:
    post:
      description: Action moveDisk
      operationId: action_vmhost_moveDisk
      parameters:
      - description: ID of vmhost
        explode: false
        in: path
        name: vmhostId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_55'
        content:
          application/json:
            schema:
              properties:
                disk:
                  type: string
                vmhost:
                  type: string
              required:
              - disk
              type: object
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vmhost'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/moveDisk
      tags:
      - vmhost
  /vmhost/{vmhostId}/actions/moveISO:
    post:
      description: Action moveISO
      operationId: action_vmhost_moveISO
      parameters:
      - description: ID of vmhost
        explode: false
        in: path
        name: vmhostId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_56'
        content:
          application/json:
            schema:
              properties:
                iso:
                  type: string
                vmhost:
                  type: string
              required:
              - iso
              type: object
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vmhost'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/moveISO
      tags:
      - vmhost
  /vmhost/{vmhostId}/actions/moveImage:
    post:
      description: Action moveImage
      operationId: action_vmhost_moveImage
      parameters:
      - description: ID of vmhost
        explode: false
        in: path
        name: vmhostId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_57'
        content:
          application/json:
            schema:
              properties:
                image:
                  type: string
                vmhost:
                  type: string
              required:
              - image
              type: object
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vmhost'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/moveImage
      tags:
      - vmhost
  /vmhost/{vmhostId}/accessrights/:
    get:
      operationId: operation_vmhost_list_/accessrights/
      parameters:
      - description: ID of vmhost
        explode: false
        in: path
        name: vmhostId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/vmhost.accessRights'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - vmhost
    post:
      operationId: operation_vmhost_post_/accessrights/
      parameters:
      - description: ID of vmhost
        explode: false
        in: path
        name: vmhostId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_58'
        content:
          application/json:
            schema:
              properties:
                identity:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vmhost.accessRights'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - vmhost
  /vmhost/{vmhostId}/accessrights/{identity}:
    delete:
      operationId: operation_vmhost_delete_/accessrights/:identity
      parameters:
      - description: ID of vmhost
        explode: false
        in: path
        name: vmhostId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vmhost'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vmhost'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/:identity
      tags:
      - vmhost
  /vmhost/{vmhostId}/services/:
    get:
      operationId: operation_vmhost_list_/services/
      parameters:
      - description: ID of vmhost
        explode: false
        in: path
        name: vmhostId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/vmhost.services'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/
      tags:
      - vmhost
  /vmhost/{vmhostId}/services/{serviceId}:
    get:
      operationId: operation_vmhost_get_/services/:serviceId
      parameters:
      - description: ID of vmhost
        explode: false
        in: path
        name: vmhostId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vmhost.services'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/:serviceId
      tags:
      - vmhost
  /vmhost/{vmhostId}/tag/:
    get:
      operationId: operation_vmhost_get_/tag/
      parameters:
      - description: ID of vmhost
        explode: false
        in: path
        name: vmhostId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vmhost.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - vmhost
    patch:
      operationId: operation_vmhost_patch_/tag/
      parameters:
      - description: ID of vmhost
        explode: false
        in: path
        name: vmhostId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vmhost.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - vmhost
  /vmhost/{vmhostId}/tag/{key}:
    delete:
      operationId: operation_vmhost_delete_/tag/:key
      parameters:
      - description: ID of vmhost
        explode: false
        in: path
        name: vmhostId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vmhost.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/:key
      tags:
      - vmhost
  /vmhost/{vmhostId}/queue/:
    get:
      operationId: operation_vmhost_list_/queue/
      parameters:
      - description: ID of vmhost
        explode: false
        in: path
        name: vmhostId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /queue/
      tags:
      - vmhost
  /replica:
    get:
      description: List replica
      operationId: list_replica
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/replica'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: List
      tags:
      - replica
    post:
      description: Create replica
      operationId: create_replica
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replicaCreate'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replica'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Create
      tags:
      - replica
  /replica/{replicaId}:
    delete:
      operationId: delete_replica
      parameters:
      - description: ID of replica
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          type: string
        style: simple
      responses:
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Delete
      tags:
      - replica
    get:
      description: Returns a single replica
      operationId: show_replica
      parameters:
      - description: ID of replica
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replica'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: Get
      tags:
      - replica
  /replica/{replicaId}/actions/image:
    post:
      description: Action image
      operationId: action_replica_image
      parameters:
      - description: ID of replica
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_59'
        content:
          application/json:
            schema:
              properties:
                service:
                  format: ObjectId
                  type: string
                description:
                  type: string
              required:
              - service
              type: object
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replica'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /actions/image
      tags:
      - replica
  /replica/{replicaId}/accessrights/:
    get:
      operationId: operation_replica_list_/accessrights/
      parameters:
      - description: ID of replica
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/replica.accessRights'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - replica
    post:
      operationId: operation_replica_post_/accessrights/
      parameters:
      - description: ID of replica
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_60'
        content:
          application/json:
            schema:
              properties:
                identity:
                  type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replica.accessRights'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/
      tags:
      - replica
  /replica/{replicaId}/accessrights/{identity}:
    delete:
      operationId: operation_replica_delete_/accessrights/:identity
      parameters:
      - description: ID of replica
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replica'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replica'
          description: operation queued
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /accessrights/:identity
      tags:
      - replica
  /replica/{replicaId}/services/:
    get:
      operationId: operation_replica_list_/services/
      parameters:
      - description: ID of replica
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/replica.services'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/
      tags:
      - replica
  /replica/{replicaId}/services/{serviceId}:
    get:
      operationId: operation_replica_get_/services/:serviceId
      parameters:
      - description: ID of replica
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replica.services'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /services/:serviceId
      tags:
      - replica
  /replica/{replicaId}/tag/:
    get:
      operationId: operation_replica_get_/tag/
      parameters:
      - description: ID of replica
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replica.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - replica
    patch:
      operationId: operation_replica_patch_/tag/
      parameters:
      - description: ID of replica
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replica.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/
      tags:
      - replica
  /replica/{replicaId}/tag/{key}:
    delete:
      operationId: operation_replica_delete_/tag/:key
      parameters:
      - description: ID of replica
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replica.tag'
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /tag/:key
      tags:
      - replica
  /replica/{replicaId}/queue/:
    get:
      operationId: operation_replica_list_/queue/
      parameters:
      - description: ID of replica
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        401:
          description: API key is missing or invalid
          headers:
            x-auth-token:
              description: authentication token
              explode: false
              schema:
                type: string
              style: simple
      summary: /queue/
      tags:
      - replica
components:
  requestBodies:
    inline_object_50:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_50'
    inline_object_52:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_52'
    inline_object_51:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_51'
    inline_object_10:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_10'
    inline_object_54:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_54'
    inline_object_53:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_53'
    inline_object_12:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_12'
    inline_object_56:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_56'
    inline_object_11:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_11'
    inline_object_55:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_55'
    inline_object_14:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_14'
    inline_object_58:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_58'
    inline_object_13:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_13'
    inline_object_57:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_57'
    inline_object_16:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_16'
    inline_object_15:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_15'
    inline_object_59:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_59'
    inline_object_41:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_41'
    inline_object_40:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_40'
    inline_object_43:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_43'
    inline_object_42:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_42'
    inline_object_45:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_45'
    inline_object_44:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_44'
    inline_object_47:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_47'
    inline_object_46:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_46'
    inline_object_49:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_49'
    inline_object_48:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_48'
    inline_object_39:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_39'
    inline_object_30:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_30'
    inline_object_32:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_32'
    inline_object_31:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_31'
    inline_object_34:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_34'
    inline_object_33:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_33'
    inline_object_36:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_36'
    inline_object_35:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_35'
    inline_object_38:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_38'
    inline_object_37:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_37'
    inline_object_29:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_29'
    inline_object_28:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_28'
    inline_object_1:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_1'
    inline_object_60:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_60'
    inline_object_9:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_9'
    inline_object_21:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_21'
    inline_object_8:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_8'
    inline_object_20:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_20'
    inline_object_7:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_7'
    inline_object_23:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_23'
    inline_object_6:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_6'
    inline_object_22:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_22'
    inline_object_5:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_5'
    inline_object_25:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_25'
    inline_object_4:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_4'
    inline_object_24:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_24'
    inline_object_3:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_3'
    inline_object_27:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_27'
    inline_object_2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_2'
    inline_object_26:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_26'
    inline_object_18:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_18'
    inline_object_17:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_17'
    inline_object_19:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_19'
    inline_object:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object'
  responses:
    UnauthorizedError:
      description: API key is missing or invalid
      headers:
        x-auth-token:
          description: authentication token
          explode: false
          schema:
            type: string
          style: simple
  schemas:
    event:
      example:
        stage: stage
        createdBy: createdBy
        resource:
          id: id
          type: type
        queued: 2000-01-23T04:56:07.000+00:00
        name: name
        _id: _id
        state: pending
      properties:
        _id:
          type: string
        name:
          type: string
        createdBy:
          type: string
        queued:
          format: date-time
          type: string
        state:
          enum:
          - pending
          - processing
          - finished
          - error
          type: string
        stage:
          type: string
        resource:
          $ref: '#/components/schemas/event_resource'
      type: object
    credential.certificate:
      example:
        createdBy: createdBy
        name: name
        _id: _id
        type: type
        createdOn: createdOn
        value: value
      properties:
        createdBy:
          type: string
        createdOn:
          type: string
        name:
          type: string
        type:
          type: string
        _id:
          type: string
        value:
          type: string
      type: object
    credential.password:
      example:
        createdBy: createdBy
        name: name
        _id: _id
        type: type
        createdOn: createdOn
        value: value
      properties:
        createdBy:
          type: string
        createdOn:
          type: string
        name:
          type: string
        type:
          type: string
        _id:
          type: string
        value:
          type: string
      type: object
    hdd:
      example:
        disk:
          size: size
          vm: vm
          name: name
          processing: processing
          _id: _id
          type: type
          persistent: persistent
          tags: tags
        controllerType: controllerType
        controllerNumber: controllerNumber
        controllerLocation: controllerLocation
        _id: _id
        maximumIOPS: maximumIOPS
      properties:
        maximumIOPS:
          type: string
        controllerType:
          type: string
        controllerNumber:
          type: string
        controllerLocation:
          type: string
        disk:
          $ref: '#/components/schemas/hdd_disk'
        _id:
          type: string
      type: object
    project:
      example:
        networkAcl:
          name: name
          _id: _id
          type: type
          value: value
        payments:
          amount: amount
          flavour: flavour
          created: created
          channel: channel
          project: project
          services: services
          type: type
          createdOn: createdOn
          modifiedOn: modifiedOn
          createdBy: createdBy
          credits: 2.3021358869347654518833223846741020679473876953125
          creditsFree: 5.63737665663332876420099637471139430999755859375
          name: name
          processing: processing
          modifiedBy: modifiedBy
          _id: _id
          accessRights: accessRights
          state: state
          tag: tag
          queue:
          - stage: stage
            createdBy: createdBy
            resource:
              id: id
              type: type
            queued: 2000-01-23T04:56:07.000+00:00
            name: name
            _id: _id
            state: pending
          - stage: stage
            createdBy: createdBy
            resource:
              id: id
              type: type
            queued: 2000-01-23T04:56:07.000+00:00
            name: name
            _id: _id
            state: pending
        roles:
        - access:
          - path: path
            method: ALL
          - path: path
            method: ALL
          name: name
        - access:
          - path: path
            method: ALL
          - path: path
            method: ALL
          name: name
        project: project
        organisation: organisation
        threshold:
          credits:
            levels: levels
        createdOn: 2000-01-23T04:56:07.000+00:00
        billing:
          creditsBonus: 1.46581298050294517310021547018550336360931396484375
          credits: 6.02745618307040320615897144307382404804229736328125
          creditLimit: 5.962133916683182377482808078639209270477294921875
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        invoices:
          summary: summary
          project: project
          organisation: organisation
          _id: _id
          duplicate:
            _id: _id
            createdOn: createdOn
          invoiceNo: invoiceNo
          issueDate: issueDate
        limit:
          image:
            count: 4.1456080298839363962315474054776132106781005859375
          iso:
            count: 4.1456080298839363962315474054776132106781005859375
          ip:
            count: 4.1456080298839363962315474054776132106781005859375
          network:
            count: 4.1456080298839363962315474054776132106781005859375
          netgw:
            count: 4.1456080298839363962315474054776132106781005859375
          disk:
            size: 2.027123023002321833274663731572218239307403564453125
            count: 3.61607674925191080461672754609026014804840087890625
          firewall:
            count: 4.1456080298839363962315474054776132106781005859375
          vm:
            memory: 9.301444243932575517419536481611430644989013671875
            count: 7.061401241503109105224211816675961017608642578125
          domain:
            record: 1.231513536777255612975068288506008684635162353515625
            count: 7.3862819483858839220147274318151175975799560546875
          reservation:
            count: 4.1456080298839363962315474054776132106781005859375
          logArchive:
            count: 4.1456080298839363962315474054776132106781005859375
          vault:
            size: 2.027123023002321833274663731572218239307403564453125
            count: 3.61607674925191080461672754609026014804840087890625
          snapshot:
            count: 4.1456080298839363962315474054776132106781005859375
        modifiedBy: modifiedBy
        state: Active
        tag: '{}'
        bankAccount: bankAccount
        flavour: flavour
        created: true
        verified: verified
        active: true
        services:
        - quantity: 0.80082819046101150206595775671303272247314453125
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.80082819046101150206595775671303272247314453125
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        transfer:
          organisation: organisation
        createdBy: createdBy
        compliance:
          logArchive: logArchive
        name: name
        processing: true
        _id: _id
        accessRights:
          role: role
          id: id
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          type: string
        createdBy:
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          $ref: '#/components/schemas/project_accessRights'
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Active
          - Inactive
          - Limited
          type: string
        tag:
          type: object
        project:
          format: ObjectId
          type: string
        bankAccount:
          type: string
        organisation:
          format: ObjectId
          type: string
        billing:
          $ref: '#/components/schemas/project_billing'
        invoices:
          $ref: '#/components/schemas/project_invoices'
        payments:
          $ref: '#/components/schemas/project_payments'
        verified:
          type: string
        active:
          type: boolean
        limit:
          $ref: '#/components/schemas/project_limit'
        threshold:
          $ref: '#/components/schemas/project_threshold'
        roles:
          items:
            $ref: '#/components/schemas/project_roles'
          type: array
        networkAcl:
          $ref: '#/components/schemas/project_networkAcl'
        compliance:
          $ref: '#/components/schemas/project_compliance'
        transfer:
          $ref: '#/components/schemas/project_transfer'
      type: object
    project.accessRights:
      example:
        role: owner
        id: id
      properties:
        id:
          type: string
        role:
          enum:
          - owner
          - billing
          - user
          - support
          type: string
      required:
      - id
      - role
      type: object
    project.services:
      example:
        quantity: 0.80082819046101150206595775671303272247314453125
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    project.tag:
      additionalProperties:
        type: string
      type: object
    organisation:
      example:
        bankAccount: bankAccount
        flavour: flavour
        created: true
        roles:
        - access:
          - path: path
            method: ALL
          - path: path
            method: ALL
          name: name
        - access:
          - path: path
            method: ALL
          - path: path
            method: ALL
          name: name
        verified: 0.80082819046101150206595775671303272247314453125
        project: project
        services: services
        createdOn: 2000-01-23T04:56:07.000+00:00
        billing:
          address: address
          nip: nip
          currency: currency
          company: company
          email: email
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        transfer:
          name: name
          _id: _id
        createdBy: createdBy
        name: name
        limit:
          organisation:
            project:
              count: 4.1456080298839363962315474054776132106781005859375
          project:
            image:
              count: 4.1456080298839363962315474054776132106781005859375
            iso:
              count: 4.1456080298839363962315474054776132106781005859375
            ip:
              count: 4.1456080298839363962315474054776132106781005859375
            network:
              count: 4.1456080298839363962315474054776132106781005859375
            netgw:
              count: 4.1456080298839363962315474054776132106781005859375
            disk:
              size: 2.027123023002321833274663731572218239307403564453125
              count: 3.61607674925191080461672754609026014804840087890625
            firewall:
              count: 4.1456080298839363962315474054776132106781005859375
            vm:
              memory: 9.301444243932575517419536481611430644989013671875
              count: 7.061401241503109105224211816675961017608642578125
            domain:
              record: 1.231513536777255612975068288506008684635162353515625
              count: 7.3862819483858839220147274318151175975799560546875
            reservation:
              count: 4.1456080298839363962315474054776132106781005859375
            logArchive:
              count: 4.1456080298839363962315474054776132106781005859375
            vault:
              size: 2.027123023002321833274663731572218239307403564453125
              count: 3.61607674925191080461672754609026014804840087890625
            snapshot:
              count: 4.1456080298839363962315474054776132106781005859375
        processing: true
        modifiedBy: modifiedBy
        _id: _id
        accessRights:
          role: role
          id: id
        state: Active
        tag: '{}'
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          type: string
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          type: string
        createdBy:
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          $ref: '#/components/schemas/project_accessRights'
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Active
          - Inactive
          - Limited
          type: string
        tag:
          type: object
        project:
          type: string
        billing:
          $ref: '#/components/schemas/organisation_billing'
        verified:
          type: number
        limit:
          $ref: '#/components/schemas/organisation_limit'
        roles:
          items:
            $ref: '#/components/schemas/project_roles'
          type: array
        transfer:
          $ref: '#/components/schemas/organisation_transfer'
        bankAccount:
          type: string
      type: object
    organisation.accessRights:
      example:
        role: owner
        id: id
      properties:
        id:
          type: string
        role:
          enum:
          - owner
          - billing
          - user
          - support
          type: string
      required:
      - id
      - role
      type: object
    organisation.tag:
      additionalProperties:
        type: string
      type: object
    container:
      example:
        flavour: flavour
        created: true
        project: project
        services:
        - quantity: 0.80082819046101150206595775671303272247314453125
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.80082819046101150206595775671303272247314453125
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        createdOn: 2000-01-23T04:56:07.000+00:00
        url: url
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        name: name
        processing: true
        modifiedBy: modifiedBy
        _id: _id
        accessRights:
        - accessRights
        - accessRights
        state: Running
        tag: '{}'
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          type: string
        createdBy:
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            type: string
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Running
          - Off
          - Unknown
          type: string
        tag:
          type: object
        project:
          format: ObjectId
          type: string
        url:
          type: string
      type: object
    container.accessRights:
      type: string
    container.services:
      example:
        quantity: 0.80082819046101150206595775671303272247314453125
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    container.tag:
      additionalProperties:
        type: string
      type: object
    firewall:
      example:
        flavour: flavour
        created: true
        project: project
        services:
        - quantity: 0.80082819046101150206595775671303272247314453125
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.80082819046101150206595775671303272247314453125
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        createdOn: 2000-01-23T04:56:07.000+00:00
        network: network
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        name: name
        processing: true
        modifiedBy: modifiedBy
        _id: _id
        accessRights:
        - accessRights
        - accessRights
        state: Attached
        tag: '{}'
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          type: string
        createdBy:
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            type: string
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Attached
          - Detached
          - Unknown
          type: string
        tag:
          type: object
        project:
          format: ObjectId
          type: string
        network:
          format: ObjectId
          type: string
      type: object
    firewall.accessRights:
      type: string
    firewall.services:
      example:
        quantity: 0.80082819046101150206595775671303272247314453125
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    firewall.tag:
      additionalProperties:
        type: string
      type: object
    network:
      example:
        broadcast: broadcast
        address: address
        flavour: flavour
        created: true
        dns:
          nameservers:
          - nameservers
          - nameservers
        project: project
        services:
        - quantity: 0.80082819046101150206595775671303272247314453125
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.80082819046101150206595775671303272247314453125
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        type: public
        createdOn: 2000-01-23T04:56:07.000+00:00
        netgw: netgw
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        name: name
        processing: true
        modifiedBy: modifiedBy
        _id: _id
        accessRights:
        - accessRights
        - accessRights
        state: Online
        tag: '{}'
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        gateway: gateway
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          type: string
        createdBy:
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            type: string
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Online
          - Unknown
          type: string
        tag:
          type: object
        project:
          format: ObjectId
          type: string
        address:
          type: string
        broadcast:
          type: string
        gateway:
          type: string
        type:
          enum:
          - public
          - private
          type: string
        dns:
          $ref: '#/components/schemas/network_dns'
        netgw:
          format: ObjectId
          type: string
      type: object
    network.accessRights:
      type: string
    network.services:
      example:
        quantity: 0.80082819046101150206595775671303272247314453125
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    network.tag:
      additionalProperties:
        type: string
      type: object
    netgw:
      example:
        flavour: flavour
        created: true
        project: project
        services:
        - quantity: 0.80082819046101150206595775671303272247314453125
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.80082819046101150206595775671303272247314453125
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        createdOn: 2000-01-23T04:56:07.000+00:00
        network:
          broadcast: broadcast
          address: address
          flavour: flavour
          created: created
          dns: dns
          project: project
          services: services
          type: type
          createdOn: createdOn
          netgw: netgw
          modifiedOn: modifiedOn
          createdBy: createdBy
          vm: vm
          name: name
          processing: processing
          modifiedBy: modifiedBy
          _id: _id
          accessRights: accessRights
          state: state
          tag: tag
          queue:
          - stage: stage
            createdBy: createdBy
            resource:
              id: id
              type: type
            queued: 2000-01-23T04:56:07.000+00:00
            name: name
            _id: _id
            state: pending
          - stage: stage
            createdBy: createdBy
            resource:
              id: id
              type: type
            queued: 2000-01-23T04:56:07.000+00:00
            name: name
            _id: _id
            state: pending
          gateway: gateway
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        vpn:
          l2tp:
            preSharedSecret: preSharedSecret
            clientPrefix: clientPrefix
            _id: _id
            user:
              _id: _id
              username: username
          ipsec: ipsec
        name: name
        primaryIP:
          address: address
          flavour: flavour
          created: created
          project: project
          services: services
          createdOn: createdOn
          mac:
            vm: vm
            macaddress: macaddress
            _id: _id
          network: network
          modifiedOn: modifiedOn
          createdBy: createdBy
          ptrRecord: ptrRecord
          associated:
            ip: ip
            fip: fip
          name: name
          processing: processing
          modifiedBy: modifiedBy
          _id: _id
          accessRights: accessRights
          state: state
          tag: tag
          persistent: persistent
          queue:
          - stage: stage
            createdBy: createdBy
            resource:
              id: id
              type: type
            queued: 2000-01-23T04:56:07.000+00:00
            name: name
            _id: _id
            state: pending
          - stage: stage
            createdBy: createdBy
            resource:
              id: id
              type: type
            queued: 2000-01-23T04:56:07.000+00:00
            name: name
            _id: _id
            state: pending
        processing: true
        modifiedBy: modifiedBy
        _id: _id
        state: Attached
        tag: '{}'
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          type: string
        createdBy:
          type: string
        createdOn:
          format: date-time
          type: string
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Attached
          - Detached
          - Unknown
          type: string
        tag:
          type: object
        project:
          format: ObjectId
          type: string
        primaryIP:
          $ref: '#/components/schemas/netgw_primaryIP'
        network:
          $ref: '#/components/schemas/netgw_network'
        vpn:
          $ref: '#/components/schemas/netgw_vpn'
      type: object
    netgw.accessRights:
      type: string
    netgw.services:
      example:
        quantity: 0.80082819046101150206595775671303272247314453125
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    netgw.tag:
      additionalProperties:
        type: string
      type: object
    image:
      example:
        flavour: flavour
        disks:
          attachedOn: attachedOn
          disk:
            name: name
            _id: _id
          size: size
          fileSize: fileSize
          downloadUrl: downloadUrl
          type: type
        created: true
        project: project
        description: description
        services:
        - quantity: 0.80082819046101150206595775671303272247314453125
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.80082819046101150206595775671303272247314453125
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        createdOn: 2000-01-23T04:56:07.000+00:00
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        fileSize: 0.80082819046101150206595775671303272247314453125
        vm:
          flavour: flavour
          name: name
          id: id
        name: name
        processing: true
        modifiedBy: modifiedBy
        _id: _id
        accessRights:
        - accessRights
        - accessRights
        state: Online
        tag: '{}'
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          type: string
        createdBy:
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            type: string
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Online
          - Unknown
          type: string
        tag:
          type: object
        project:
          format: ObjectId
          type: string
        disks:
          $ref: '#/components/schemas/image_disks'
        fileSize:
          type: number
        vm:
          $ref: '#/components/schemas/image_vm'
        description:
          type: string
      type: object
    image.accessRights:
      type: string
    image.services:
      example:
        quantity: 0.80082819046101150206595775671303272247314453125
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    image.tag:
      additionalProperties:
        type: string
      type: object
    disk:
      example:
        metadata:
          source: source
        flavour: flavour
        created: true
        downloadUrl: downloadUrl
        project: project
        services:
        - quantity: 0.80082819046101150206595775671303272247314453125
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.80082819046101150206595775671303272247314453125
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        type: archive
        createdOn: 2000-01-23T04:56:07.000+00:00
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        size: 0.80082819046101150206595775671303272247314453125
        createdBy: createdBy
        vm: vm
        name: name
        processing: true
        modifiedBy: modifiedBy
        _id: _id
        accessRights:
        - accessRights
        - accessRights
        state: Uploading
        tag: '{}'
        persistent: true
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          type: string
        createdBy:
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            type: string
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Uploading
          - Online
          - Attached
          - Detached
          - Unknown
          type: string
        tag:
          type: object
        project:
          format: ObjectId
          type: string
        type:
          enum:
          - archive
          - volume
          - ssd
          - hissd
          - ephemeral-hissd
          - replica
          type: string
        size:
          type: number
        vm:
          format: ObjectId
          type: string
        persistent:
          type: boolean
        downloadUrl:
          type: string
        metadata:
          $ref: '#/components/schemas/disk_metadata'
      type: object
    disk.accessRights:
      type: string
    disk.services:
      example:
        quantity: 0.80082819046101150206595775671303272247314453125
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    disk.tag:
      additionalProperties:
        type: string
      type: object
    iso:
      example:
        metadata:
          source: source
        flavour: flavour
        created: true
        project: project
        services:
        - quantity: 0.80082819046101150206595775671303272247314453125
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.80082819046101150206595775671303272247314453125
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        createdOn: 2000-01-23T04:56:07.000+00:00
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        size: 0.80082819046101150206595775671303272247314453125
        createdBy: createdBy
        name: name
        processing: true
        modifiedBy: modifiedBy
        _id: _id
        accessRights:
        - accessRights
        - accessRights
        state: Uploading
        tag: '{}'
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          type: string
        createdBy:
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            type: string
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Uploading
          - Online
          - Unknown
          type: string
        tag:
          type: object
        project:
          format: ObjectId
          type: string
        size:
          type: number
        metadata:
          $ref: '#/components/schemas/disk_metadata'
      type: object
    iso.accessRights:
      type: string
    iso.services:
      example:
        quantity: 0.80082819046101150206595775671303272247314453125
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    iso.tag:
      additionalProperties:
        type: string
      type: object
    vm:
      example:
        memory: 6.02745618307040320615897144307382404804229736328125
        flavour: flavour
        data:
          username: username
        created: true
        project: project
        cpu: 0.80082819046101150206595775671303272247314453125
        services:
        - quantity: 0.80082819046101150206595775671303272247314453125
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.80082819046101150206595775671303272247314453125
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        createdOn: 2000-01-23T04:56:07.000+00:00
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        name: name
        processing: true
        modifiedBy: modifiedBy
        _id: _id
        accessRights:
        - accessRights
        - accessRights
        state: Other
        tag: '{}'
        sourceImage:
          name: name
          _id: _id
        userMetadata: userMetadata
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          type: string
        createdBy:
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            type: string
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Other
          - Running
          - Off
          - Stopping
          - Saved
          - Paused
          - Starting
          - Reset
          - Saving
          - Pausing
          - Resuming
          - FastSaved
          - FastSaving
          - RunningCritical
          - OffCritical
          - StoppingCritical
          - SavedCritical
          - PausedCritical
          - StartingCritical
          - ResetCritical
          - SavingCritical
          - PausingCritical
          - ResumingCritical
          - FastSavedCritical
          - FastSavingCritical
          - Unknown
          type: string
        tag:
          type: object
        project:
          format: ObjectId
          type: string
        sourceImage:
          $ref: '#/components/schemas/vm_sourceImage'
        userMetadata:
          type: string
        cpu:
          type: number
        memory:
          type: number
        data:
          $ref: '#/components/schemas/vm_data'
      type: object
    vm.accessRights:
      type: string
    vm.services:
      example:
        quantity: 0.80082819046101150206595775671303272247314453125
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    vm.tag:
      additionalProperties:
        type: string
      type: object
    ip:
      example:
        address: address
        flavour: flavour
        created: true
        project: project
        services:
        - quantity: 0.80082819046101150206595775671303272247314453125
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.80082819046101150206595775671303272247314453125
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        createdOn: 2000-01-23T04:56:07.000+00:00
        mac:
          vm: vm
          macaddress: macaddress
          _id: _id
        network: network
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        ptrRecord: ptrRecord
        associated:
          ip: ip
          fip: fip
        name: name
        processing: true
        modifiedBy: modifiedBy
        _id: _id
        accessRights:
        - accessRights
        - accessRights
        state: Associated
        tag: '{}'
        persistent: persistent
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          type: string
        createdBy:
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            type: string
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Associated
          - Allocated
          - Unallocated
          type: string
        tag:
          type: object
        project:
          format: ObjectId
          type: string
        address:
          type: string
        mac:
          $ref: '#/components/schemas/netgw_primaryIP_mac'
        network:
          format: ObjectId
          type: string
        ptrRecord:
          type: string
        persistent:
          type: string
        associated:
          $ref: '#/components/schemas/netgw_primaryIP_associated'
      type: object
    ip.accessRights:
      type: string
    ip.services:
      example:
        quantity: 0.80082819046101150206595775671303272247314453125
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    ip.tag:
      additionalProperties:
        type: string
      type: object
    netadp:
      example:
        flavour: flavour
        created: true
        ip:
          address: address
          flavour: flavour
          created: created
          project: project
          services: services
          createdOn: createdOn
          mac:
            vm: vm
            macaddress: macaddress
            _id: _id
          network: network
          modifiedOn: modifiedOn
          createdBy: createdBy
          ptrRecord: ptrRecord
          associated:
            ip: ip
            fip: fip
          name: name
          processing: processing
          modifiedBy: modifiedBy
          _id: _id
          accessRights: accessRights
          state: state
          tag: tag
          persistent: persistent
          queue:
          - stage: stage
            createdBy: createdBy
            resource:
              id: id
              type: type
            queued: 2000-01-23T04:56:07.000+00:00
            name: name
            _id: _id
            state: pending
          - stage: stage
            createdBy: createdBy
            resource:
              id: id
              type: type
            queued: 2000-01-23T04:56:07.000+00:00
            name: name
            _id: _id
            state: pending
        project: project
        services:
        - quantity: 0.80082819046101150206595775671303272247314453125
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.80082819046101150206595775671303272247314453125
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        createdOn: 2000-01-23T04:56:07.000+00:00
        speed: 0.80082819046101150206595775671303272247314453125
        network:
          broadcast: broadcast
          address: address
          flavour: flavour
          created: created
          dns: dns
          project: project
          services: services
          type: type
          createdOn: createdOn
          netgw: netgw
          modifiedOn: modifiedOn
          createdBy: createdBy
          vm: vm
          name: name
          processing: processing
          modifiedBy: modifiedBy
          _id: _id
          accessRights: accessRights
          state: state
          tag: tag
          queue:
          - stage: stage
            createdBy: createdBy
            resource:
              id: id
              type: type
            queued: 2000-01-23T04:56:07.000+00:00
            name: name
            _id: _id
            state: pending
          - stage: stage
            createdBy: createdBy
            resource:
              id: id
              type: type
            queued: 2000-01-23T04:56:07.000+00:00
            name: name
            _id: _id
            state: pending
          gateway: gateway
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        name: name
        processing: true
        modifiedBy: modifiedBy
        macaddress: macaddress
        assigned:
          resource: resource
          id: id
        _id: _id
        accessRights:
        - accessRights
        - accessRights
        state: Online
        tag: '{}'
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          type: string
        createdBy:
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            type: string
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Online
          - Deallocated
          - Unknown
          type: string
        tag:
          type: object
        project:
          format: ObjectId
          type: string
        macaddress:
          type: string
        speed:
          type: number
        network:
          $ref: '#/components/schemas/netgw_network'
        ip:
          $ref: '#/components/schemas/netgw_primaryIP'
        assigned:
          $ref: '#/components/schemas/netadp_assigned'
      type: object
    netadp.accessRights:
      type: string
    netadp.services:
      example:
        quantity: 0.80082819046101150206595775671303272247314453125
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    netadp.tag:
      additionalProperties:
        type: string
      type: object
    vault:
      example:
        sizeUsed: 6.02745618307040320615897144307382404804229736328125
        flavour: flavour
        created: true
        project: project
        services:
        - quantity: 0.80082819046101150206595775671303272247314453125
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.80082819046101150206595775671303272247314453125
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        createdOn: 2000-01-23T04:56:07.000+00:00
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        size: 0.80082819046101150206595775671303272247314453125
        credential:
          password:
            createdBy: createdBy
            name: name
            _id: _id
            type: type
            createdOn: createdOn
            value: value
          certificate:
            createdBy: createdBy
            name: name
            _id: _id
            type: type
            createdOn: createdOn
            value: value
        createdBy: createdBy
        name: name
        processing: true
        modifiedBy: modifiedBy
        _id: _id
        accessRights:
        - accessRights
        - accessRights
        state: Online
        tag: '{}'
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          type: string
        createdBy:
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            type: string
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Online
          - Off
          - Unknown
          type: string
        tag:
          type: object
        project:
          format: ObjectId
          type: string
        size:
          type: number
        sizeUsed:
          type: number
        credential:
          $ref: '#/components/schemas/vault_credential'
      type: object
    vault.accessRights:
      type: string
    vault.services:
      example:
        quantity: 0.80082819046101150206595775671303272247314453125
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    vault.tag:
      additionalProperties:
        type: string
      type: object
    snapshot:
      example:
        sizeUsed: 0.80082819046101150206595775671303272247314453125
        flavour: flavour
        created: true
        project: project
        services:
        - quantity: 0.80082819046101150206595775671303272247314453125
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.80082819046101150206595775671303272247314453125
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        createdOn: 2000-01-23T04:56:07.000+00:00
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        name: name
        processing: true
        modifiedBy: modifiedBy
        _id: _id
        accessRights:
        - accessRights
        - accessRights
        state: Online
        tag: '{}'
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        vault: vault
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          type: string
        createdBy:
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            type: string
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Online
          - Unknown
          type: string
        tag:
          type: object
        project:
          format: ObjectId
          type: string
        vault:
          format: ObjectId
          type: string
        sizeUsed:
          type: number
      type: object
    snapshot.accessRights:
      type: string
    snapshot.services:
      example:
        quantity: 0.80082819046101150206595775671303272247314453125
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    snapshot.tag:
      additionalProperties:
        type: string
      type: object
    reservation:
      example:
        flavour: flavour
        resource: resource
        created: true
        project: project
        services:
        - quantity: 0.80082819046101150206595775671303272247314453125
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.80082819046101150206595775671303272247314453125
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        createdOn: 2000-01-23T04:56:07.000+00:00
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        name: name
        processing: true
        modifiedBy: modifiedBy
        assigned: assigned
        _id: _id
        accessRights:
        - accessRights
        - accessRights
        state: Detached
        tag: '{}'
        sourceService: sourceService
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          type: string
        createdBy:
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            type: string
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Detached
          - Attached
          - Expired
          - Billing
          - Unknown
          type: string
        tag:
          type: object
        project:
          format: ObjectId
          type: string
        resource:
          type: string
        assigned:
          format: ObjectId
          type: string
        sourceService:
          format: ObjectId
          type: string
      type: object
    reservation.accessRights:
      type: string
    reservation.services:
      example:
        quantity: 0.80082819046101150206595775671303272247314453125
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    reservation.tag:
      additionalProperties:
        type: string
      type: object
    logArchive:
      example:
        sizeUsed: 0.80082819046101150206595775671303272247314453125
        flavour: flavour
        created: true
        project: project
        services:
        - quantity: 0.80082819046101150206595775671303272247314453125
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.80082819046101150206595775671303272247314453125
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        createdOn: 2000-01-23T04:56:07.000+00:00
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        credential:
          password:
            createdBy: createdBy
            name: name
            _id: _id
            type: type
            createdOn: createdOn
            value: value
          certificate:
            createdBy: createdBy
            name: name
            _id: _id
            type: type
            createdOn: createdOn
            value: value
        createdBy: createdBy
        name: name
        processing: true
        modifiedBy: modifiedBy
        _id: _id
        accessRights:
        - accessRights
        - accessRights
        state: Online
        tag: '{}'
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        retention: 6.02745618307040320615897144307382404804229736328125
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          type: string
        createdBy:
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            type: string
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Online
          - Unknown
          type: string
        tag:
          type: object
        project:
          format: ObjectId
          type: string
        credential:
          $ref: '#/components/schemas/vault_credential'
        sizeUsed:
          type: number
        retention:
          type: number
      type: object
    logArchive.accessRights:
      type: string
    logArchive.services:
      example:
        quantity: 0.80082819046101150206595775671303272247314453125
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    logArchive.tag:
      additionalProperties:
        type: string
      type: object
    vmhost:
      example:
        created: true
        name: name
        _id: _id
        state: Running
        accessRights:
        - accessRights
        - accessRights
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        state:
          enum:
          - Running
          - Unknown
          type: string
        created:
          type: boolean
        accessRights:
          items:
            type: string
          type: array
      type: object
    vmhost.accessRights:
      type: string
    vmhost.services:
      example:
        quantity: 0.80082819046101150206595775671303272247314453125
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    vmhost.tag:
      additionalProperties:
        type: string
      type: object
    replica:
      example:
        flavour: flavour
        created: true
        project: project
        services:
        - quantity: 0.80082819046101150206595775671303272247314453125
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.80082819046101150206595775671303272247314453125
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        createdOn: 2000-01-23T04:56:07.000+00:00
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        name: name
        processing: true
        modifiedBy: modifiedBy
        _id: _id
        accessRights:
        - accessRights
        - accessRights
        state: Error
        tag: '{}'
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          type: string
        createdBy:
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            type: string
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Error
          - FailOverWaitingCompletion
          - FailedOver
          - NotApplicable
          - ReadyForInitialReplication
          - Replicating
          - Resynchronizing
          - ResynchronizeSuspended
          - Suspended
          - SyncedReplicationComplete
          - WaitingForInitialReplication
          - WaitingForStartResynchronize
          - Unknown
          type: string
        tag:
          type: object
        project:
          format: ObjectId
          type: string
      type: object
    replica.accessRights:
      type: string
    replica.services:
      example:
        quantity: 0.80082819046101150206595775671303272247314453125
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    replica.tag:
      additionalProperties:
        type: string
      type: object
    projectCreate:
      properties:
        name:
          type: string
        accessRights:
          items:
            $ref: '#/components/schemas/projectCreate_accessRights'
          type: array
        organisation:
          type: string
        tag:
          type: object
      required:
      - name
      - organisation
      type: object
    organisationCreate:
      properties:
        name:
          type: string
        billing:
          $ref: '#/components/schemas/organisationCreate_billing'
        accessRights:
          items:
            $ref: '#/components/schemas/organisationCreate_accessRights'
          type: array
        tag:
          type: object
      type: object
    containerCreate:
      properties:
        name:
          type: string
        image:
          type: string
        registry:
          $ref: '#/components/schemas/containerCreate_registry'
        service:
          format: ObjectId
          type: string
        expose:
          $ref: '#/components/schemas/containerCreate_expose'
        env:
          items:
            type: string
          type: array
        command:
          type: string
        volumes:
          items:
            $ref: '#/components/schemas/containerCreate_volumes'
          type: array
        tag:
          type: object
      required:
      - image
      - name
      - service
      type: object
    firewallCreate:
      properties:
        name:
          type: string
        tag:
          type: object
        service:
          format: ObjectId
          type: string
      required:
      - service
      type: object
    networkCreate:
      properties:
        name:
          type: string
        address:
          type: string
        gateway:
          type: string
        tag:
          type: object
      type: object
    netgwCreate:
      properties:
        name:
          type: string
        public:
          $ref: '#/components/schemas/netgwCreate_public'
        tag:
          type: object
      type: object
    imageCreate:
      properties:
        name:
          type: string
        vm:
          type: string
        replica:
          type: string
        service:
          format: ObjectId
          type: string
        description:
          type: string
        tag:
          type: object
      required:
      - name
      - service
      type: object
    diskCreate:
      properties:
        service:
          format: ObjectId
          type: string
        name:
          type: string
        size:
          type: number
        cloud:
          type: string
        metadata:
          $ref: '#/components/schemas/diskCreate_metadata'
        tag:
          type: object
      required:
      - service
      type: object
    isoCreate:
      properties:
        name:
          type: string
        size:
          type: number
        source:
          type: string
        service:
          format: ObjectId
          type: string
        cloud:
          type: string
        metadata:
          $ref: '#/components/schemas/diskCreate_metadata'
        tag:
          type: object
      required:
      - name
      - service
      type: object
    vmCreate:
      properties:
        name:
          type: string
        image:
          type: string
        iso:
          type: string
        service:
          format: ObjectId
          type: string
        username:
          type: string
        password:
          $ref: '#/components/schemas/vmCreate_password'
        sshKeys:
          description: |-
            - user credential (by id or name)
            - project credential (by id or name)
            - raw openssh public key (starting with `ssh-rsa `)
          items:
            type: string
          type: array
        userMetadata:
          type: string
        disk:
          items:
            $ref: '#/components/schemas/vmCreate_disk'
          type: array
        netadp:
          items:
            $ref: '#/components/schemas/vmCreate_netadp'
          type: array
        boot:
          type: boolean
        cloud:
          type: string
        tag:
          type: object
      required:
      - service
      type: object
    ipCreate:
      properties:
        service:
          format: ObjectId
          type: string
        tag:
          type: object
      required:
      - service
      type: object
    vaultCreate:
      properties:
        name:
          type: string
        size:
          type: number
        service:
          format: ObjectId
          type: string
        credential:
          $ref: '#/components/schemas/vaultCreate_credential'
        snapshot:
          type: string
        tag:
          type: object
      required:
      - name
      - service
      - size
      type: object
    snapshotCreate:
      properties:
        vault:
          type: string
        service:
          format: ObjectId
          type: string
        name:
          type: string
        tag:
          type: object
      required:
      - name
      - service
      - vault
      type: object
    reservationCreate:
      properties:
        name:
          type: string
        service:
          format: ObjectId
          type: string
        tag:
          type: object
      required:
      - name
      - service
      type: object
    logArchiveCreate:
      properties:
        name:
          type: string
        service:
          format: ObjectId
          type: string
        credential:
          $ref: '#/components/schemas/vaultCreate_credential'
        retention:
          type: number
        tag:
          type: object
      required:
      - name
      - service
      type: object
    replicaCreate:
      properties:
        hostname:
          type: string
        secret:
          type: string
      required:
      - hostname
      - secret
      type: object
    inline_object:
      properties:
        name:
          type: string
      type: object
    inline_object_1:
      properties:
        identity:
          type: string
      type: object
    organisationorganisationId_billing_address:
      properties:
        city:
          type: string
        zipcode:
          type: string
        street:
          type: string
    organisationorganisationId_billing:
      properties:
        email:
          type: string
        company:
          type: string
        address:
          $ref: '#/components/schemas/organisationorganisationId_billing_address'
    inline_object_2:
      properties:
        name:
          type: string
        billing:
          $ref: '#/components/schemas/organisationorganisationId_billing'
      type: object
    inline_object_3:
      properties:
        payment:
          type: string
        project:
          type: string
      required:
      - payment
      - project
      type: object
    inline_object_4:
      properties:
        identity:
          type: string
      type: object
    inline_object_5:
      properties:
        name:
          type: string
      type: object
    inline_object_6:
      properties:
        identity:
          type: string
      type: object
    inline_object_7:
      properties:
        name:
          type: string
      type: object
    inline_object_8:
      properties:
        project:
          type: string
      required:
      - project
      type: object
    inline_response_200:
      example:
        filter:
        - filter
        - filter
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        external:
        - external
        - external
        internal:
        - internal
        - internal
        createdBy: createdBy
        name: name
        description: description
        action: allow
        modifiedBy: modifiedBy
        priority: 0.80082819046101150206595775671303272247314453125
        createdOn: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          type: string
        description:
          type: string
        createdOn:
          format: date-time
          type: string
        createdBy:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          type: string
        priority:
          type: number
        action:
          enum:
          - allow
          - deny
          type: string
        filter:
          items:
            type: string
          type: array
        external:
          items:
            type: string
          type: array
        internal:
          items:
            type: string
          type: array
      required:
      - action
      - priority
    inline_object_9:
      properties:
        name:
          type: string
        action:
          type: string
        priority:
          type: number
        filter:
          items:
            type: string
          type: array
        external:
          items:
            type: string
          type: array
        internal:
          items:
            type: string
          type: array
      type: object
    inline_object_10:
      properties:
        name:
          type: string
        action:
          type: string
        priority:
          type: number
        filter:
          items:
            type: string
          type: array
        external:
          items:
            type: string
          type: array
        internal:
          items:
            type: string
          type: array
      type: object
    inline_object_11:
      properties:
        identity:
          type: string
      type: object
    inline_object_12:
      properties:
        name:
          type: string
        gateway:
          type: string
      type: object
    inline_object_13:
      properties:
        address:
          type: string
        tag:
          type: object
      type: object
    inline_object_14:
      properties:
        identity:
          type: string
      type: object
    inline_object_15:
      properties:
        name:
          type: string
      type: object
    inline_object_16:
      properties:
        identity:
          type: string
      type: object
    inline_object_17:
      properties:
        name:
          type: string
        description:
          type: string
      type: object
    inline_object_18:
      properties:
        project:
          type: string
      required:
      - project
      type: object
    inline_object_19:
      properties:
        identity:
          type: string
      type: object
    inline_object_20:
      properties:
        name:
          type: string
      type: object
    inline_object_21:
      properties:
        project:
          type: string
      required:
      - project
      type: object
    inline_object_22:
      properties:
        identity:
          type: string
      type: object
    inline_object_23:
      properties:
        name:
          type: string
      type: object
    inline_object_24:
      properties:
        project:
          type: string
      required:
      - project
      type: object
    inline_object_25:
      properties:
        identity:
          type: string
      type: object
    inline_object_26:
      properties:
        userMetadata:
          type: string
        name:
          type: string
      type: object
    inline_object_27:
      properties:
        userName:
          type: string
        modulus:
          type: string
        exponent:
          type: string
      required:
      - exponent
      - modulus
      - userName
      type: object
    inline_object_28:
      properties:
        service:
          format: ObjectId
          type: string
        description:
          type: string
        name:
          type: string
      required:
      - service
      type: object
    inline_object_29:
      properties:
        disk:
          type: string
        controllerType:
          type: string
      required:
      - disk
      type: object
    inline_object_30:
      properties:
        service:
          format: ObjectId
          type: string
        network:
          type: string
        ip:
          type: string
        tag:
          type: object
        vlanIds:
          type: string
      type: object
    inline_object_31:
      properties:
        identity:
          type: string
      type: object
    inline_object_32:
      properties:
        ptrRecord:
          type: string
      type: object
    inline_object_33:
      properties:
        project:
          type: string
      required:
      - project
      type: object
    inline_object_34:
      properties:
        identity:
          type: string
      type: object
    inline_object_35:
      properties:
        identity:
          type: string
      type: object
    inline_object_36:
      properties:
        name:
          type: string
      type: object
    inline_object_37:
      properties:
        name:
          type: string
        type:
          type: string
        value:
          type: string
      required:
      - name
      - type
      - value
      type: object
    inline_object_38:
      properties:
        name:
          type: string
      type: object
    inline_object_39:
      properties:
        name:
          type: string
        type:
          type: string
        value:
          type: string
      type: object
    inline_object_40:
      properties:
        name:
          type: string
      type: object
    inline_object_41:
      properties:
        identity:
          type: string
      type: object
    inline_object_42:
      properties:
        name:
          type: string
      type: object
    inline_object_43:
      properties:
        identity:
          type: string
      type: object
    inline_object_44:
      properties:
        name:
          type: string
      type: object
    inline_object_45:
      properties:
        identity:
          type: string
      type: object
    inline_object_46:
      properties:
        name:
          type: string
      type: object
    inline_object_47:
      properties:
        project:
          type: string
      required:
      - project
      type: object
    inline_object_48:
      properties:
        name:
          type: string
        type:
          type: string
        value:
          type: string
      required:
      - name
      - type
      - value
      type: object
    inline_object_49:
      properties:
        name:
          type: string
      type: object
    inline_object_50:
      properties:
        name:
          type: string
        type:
          type: string
        value:
          type: string
      type: object
    inline_object_51:
      properties:
        name:
          type: string
      type: object
    inline_object_52:
      properties:
        identity:
          type: string
      type: object
    vmhostvmhostId_enabledServices:
      properties:
        0:
          type: string
    inline_object_53:
      properties:
        enabledServices:
          $ref: '#/components/schemas/vmhostvmhostId_enabledServices'
      type: object
    inline_object_54:
      properties:
        vm:
          type: string
        vmhost:
          type: string
      required:
      - vm
      type: object
    inline_object_55:
      properties:
        disk:
          type: string
        vmhost:
          type: string
      required:
      - disk
      type: object
    inline_object_56:
      properties:
        iso:
          type: string
        vmhost:
          type: string
      required:
      - iso
      type: object
    inline_object_57:
      properties:
        image:
          type: string
        vmhost:
          type: string
      required:
      - image
      type: object
    inline_object_58:
      properties:
        identity:
          type: string
      type: object
    inline_object_59:
      properties:
        service:
          format: ObjectId
          type: string
        description:
          type: string
      required:
      - service
      type: object
    inline_object_60:
      properties:
        identity:
          type: string
      type: object
    event_resource:
      example:
        id: id
        type: type
      properties:
        id:
          format: ObjectId
          type: string
        type:
          type: string
      required:
      - id
      - type
    hdd_disk:
      example:
        size: size
        vm: vm
        name: name
        processing: processing
        _id: _id
        type: type
        persistent: persistent
        tags: tags
      properties:
        _id:
          type: string
        name:
          type: string
        type:
          type: string
        size:
          type: string
        tags:
          type: string
        processing:
          type: string
        vm:
          type: string
        persistent:
          type: string
    project_services:
      example:
        quantity: 0.80082819046101150206595775671303272247314453125
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
    project_accessRights:
      example:
        role: role
        id: id
      properties:
        role:
          type: string
        id:
          type: string
    project_billing:
      example:
        creditsBonus: 1.46581298050294517310021547018550336360931396484375
        credits: 6.02745618307040320615897144307382404804229736328125
        creditLimit: 5.962133916683182377482808078639209270477294921875
      properties:
        credits:
          type: number
        creditsBonus:
          type: number
        creditLimit:
          type: number
    project_invoices_duplicate:
      example:
        _id: _id
        createdOn: createdOn
      properties:
        createdOn:
          type: string
        _id:
          type: string
    project_invoices:
      example:
        summary: summary
        project: project
        organisation: organisation
        _id: _id
        duplicate:
          _id: _id
          createdOn: createdOn
        invoiceNo: invoiceNo
        issueDate: issueDate
      properties:
        _id:
          type: string
        invoiceNo:
          type: string
        issueDate:
          type: string
        summary:
          type: string
        project:
          type: string
        organisation:
          type: string
        duplicate:
          $ref: '#/components/schemas/project_invoices_duplicate'
    project_payments:
      example:
        amount: amount
        flavour: flavour
        created: created
        channel: channel
        project: project
        services: services
        type: type
        createdOn: createdOn
        modifiedOn: modifiedOn
        createdBy: createdBy
        credits: 2.3021358869347654518833223846741020679473876953125
        creditsFree: 5.63737665663332876420099637471139430999755859375
        name: name
        processing: processing
        modifiedBy: modifiedBy
        _id: _id
        accessRights: accessRights
        state: state
        tag: tag
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          type: string
        name:
          type: string
        services:
          type: string
        flavour:
          type: string
        modifiedOn:
          type: string
        modifiedBy:
          type: string
        createdBy:
          type: string
        createdOn:
          type: string
        accessRights:
          type: string
        processing:
          type: string
        created:
          type: string
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          type: string
        tag:
          type: string
        project:
          type: string
        creditsFree:
          type: number
        credits:
          type: number
        channel:
          type: string
        amount:
          type: string
        type:
          type: string
    project_limit_vm:
      example:
        memory: 9.301444243932575517419536481611430644989013671875
        count: 7.061401241503109105224211816675961017608642578125
      properties:
        count:
          type: number
        memory:
          type: number
      required:
      - count
      - memory
    project_limit_disk:
      example:
        size: 2.027123023002321833274663731572218239307403564453125
        count: 3.61607674925191080461672754609026014804840087890625
      properties:
        count:
          type: number
        size:
          type: number
      required:
      - count
      - size
    project_limit_iso:
      example:
        count: 4.1456080298839363962315474054776132106781005859375
      properties:
        count:
          type: number
      required:
      - count
    project_limit_domain:
      example:
        record: 1.231513536777255612975068288506008684635162353515625
        count: 7.3862819483858839220147274318151175975799560546875
      properties:
        count:
          type: number
        record:
          type: number
      required:
      - count
      - record
    project_limit:
      example:
        image:
          count: 4.1456080298839363962315474054776132106781005859375
        iso:
          count: 4.1456080298839363962315474054776132106781005859375
        ip:
          count: 4.1456080298839363962315474054776132106781005859375
        network:
          count: 4.1456080298839363962315474054776132106781005859375
        netgw:
          count: 4.1456080298839363962315474054776132106781005859375
        disk:
          size: 2.027123023002321833274663731572218239307403564453125
          count: 3.61607674925191080461672754609026014804840087890625
        firewall:
          count: 4.1456080298839363962315474054776132106781005859375
        vm:
          memory: 9.301444243932575517419536481611430644989013671875
          count: 7.061401241503109105224211816675961017608642578125
        domain:
          record: 1.231513536777255612975068288506008684635162353515625
          count: 7.3862819483858839220147274318151175975799560546875
        reservation:
          count: 4.1456080298839363962315474054776132106781005859375
        logArchive:
          count: 4.1456080298839363962315474054776132106781005859375
        vault:
          size: 2.027123023002321833274663731572218239307403564453125
          count: 3.61607674925191080461672754609026014804840087890625
        snapshot:
          count: 4.1456080298839363962315474054776132106781005859375
      properties:
        vm:
          $ref: '#/components/schemas/project_limit_vm'
        disk:
          $ref: '#/components/schemas/project_limit_disk'
        iso:
          $ref: '#/components/schemas/project_limit_iso'
        network:
          $ref: '#/components/schemas/project_limit_iso'
        image:
          $ref: '#/components/schemas/project_limit_iso'
        ip:
          $ref: '#/components/schemas/project_limit_iso'
        firewall:
          $ref: '#/components/schemas/project_limit_iso'
        netgw:
          $ref: '#/components/schemas/project_limit_iso'
        vault:
          $ref: '#/components/schemas/project_limit_disk'
        snapshot:
          $ref: '#/components/schemas/project_limit_iso'
        domain:
          $ref: '#/components/schemas/project_limit_domain'
        logArchive:
          $ref: '#/components/schemas/project_limit_iso'
        reservation:
          $ref: '#/components/schemas/project_limit_iso'
    project_threshold_credits:
      example:
        levels: levels
      properties:
        levels:
          type: string
    project_threshold:
      example:
        credits:
          levels: levels
      properties:
        credits:
          $ref: '#/components/schemas/project_threshold_credits'
    project_access:
      example:
        path: path
        method: ALL
      properties:
        path:
          type: string
        method:
          enum:
          - ALL
          - GET
          - POST
          - PATCH
          - DELETE
          type: string
      required:
      - method
      - path
    project_roles:
      example:
        access:
        - path: path
          method: ALL
        - path: path
          method: ALL
        name: name
      properties:
        access:
          items:
            $ref: '#/components/schemas/project_access'
          type: array
        name:
          type: string
      required:
      - name
    project_networkAcl:
      example:
        name: name
        _id: _id
        type: type
        value: value
      properties:
        type:
          type: string
        value:
          type: string
        name:
          type: string
        _id:
          type: string
    project_compliance:
      example:
        logArchive: logArchive
      properties:
        logArchive:
          type: string
    project_transfer:
      example:
        organisation: organisation
      properties:
        organisation:
          type: string
    organisation_billing:
      example:
        address: address
        nip: nip
        currency: currency
        company: company
        email: email
      properties:
        currency:
          type: string
        company:
          type: string
        email:
          type: string
        address:
          type: string
        nip:
          type: string
    organisation_limit_organisation:
      example:
        project:
          count: 4.1456080298839363962315474054776132106781005859375
      properties:
        project:
          $ref: '#/components/schemas/project_limit_iso'
    organisation_limit:
      example:
        organisation:
          project:
            count: 4.1456080298839363962315474054776132106781005859375
        project:
          image:
            count: 4.1456080298839363962315474054776132106781005859375
          iso:
            count: 4.1456080298839363962315474054776132106781005859375
          ip:
            count: 4.1456080298839363962315474054776132106781005859375
          network:
            count: 4.1456080298839363962315474054776132106781005859375
          netgw:
            count: 4.1456080298839363962315474054776132106781005859375
          disk:
            size: 2.027123023002321833274663731572218239307403564453125
            count: 3.61607674925191080461672754609026014804840087890625
          firewall:
            count: 4.1456080298839363962315474054776132106781005859375
          vm:
            memory: 9.301444243932575517419536481611430644989013671875
            count: 7.061401241503109105224211816675961017608642578125
          domain:
            record: 1.231513536777255612975068288506008684635162353515625
            count: 7.3862819483858839220147274318151175975799560546875
          reservation:
            count: 4.1456080298839363962315474054776132106781005859375
          logArchive:
            count: 4.1456080298839363962315474054776132106781005859375
          vault:
            size: 2.027123023002321833274663731572218239307403564453125
            count: 3.61607674925191080461672754609026014804840087890625
          snapshot:
            count: 4.1456080298839363962315474054776132106781005859375
      properties:
        organisation:
          $ref: '#/components/schemas/organisation_limit_organisation'
        project:
          $ref: '#/components/schemas/project_limit'
    organisation_transfer:
      example:
        name: name
        _id: _id
      properties:
        name:
          type: string
        _id:
          type: string
    network_dns:
      example:
        nameservers:
        - nameservers
        - nameservers
      properties:
        nameservers:
          items:
            type: string
          type: array
    netgw_primaryIP_mac:
      example:
        vm: vm
        macaddress: macaddress
        _id: _id
      properties:
        _id:
          type: string
        macaddress:
          type: string
        vm:
          type: string
    netgw_primaryIP_associated:
      example:
        ip: ip
        fip: fip
      properties:
        ip:
          type: string
        fip:
          type: string
    netgw_primaryIP:
      example:
        address: address
        flavour: flavour
        created: created
        project: project
        services: services
        createdOn: createdOn
        mac:
          vm: vm
          macaddress: macaddress
          _id: _id
        network: network
        modifiedOn: modifiedOn
        createdBy: createdBy
        ptrRecord: ptrRecord
        associated:
          ip: ip
          fip: fip
        name: name
        processing: processing
        modifiedBy: modifiedBy
        _id: _id
        accessRights: accessRights
        state: state
        tag: tag
        persistent: persistent
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          type: string
        name:
          type: string
        services:
          type: string
        flavour:
          type: string
        modifiedOn:
          type: string
        modifiedBy:
          type: string
        createdBy:
          type: string
        createdOn:
          type: string
        accessRights:
          type: string
        processing:
          type: string
        created:
          type: string
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          type: string
        tag:
          type: string
        project:
          type: string
        address:
          type: string
        mac:
          $ref: '#/components/schemas/netgw_primaryIP_mac'
        network:
          type: string
        ptrRecord:
          type: string
        persistent:
          type: string
        associated:
          $ref: '#/components/schemas/netgw_primaryIP_associated'
    netgw_network:
      example:
        broadcast: broadcast
        address: address
        flavour: flavour
        created: created
        dns: dns
        project: project
        services: services
        type: type
        createdOn: createdOn
        netgw: netgw
        modifiedOn: modifiedOn
        createdBy: createdBy
        vm: vm
        name: name
        processing: processing
        modifiedBy: modifiedBy
        _id: _id
        accessRights: accessRights
        state: state
        tag: tag
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        gateway: gateway
      properties:
        _id:
          type: string
        name:
          type: string
        services:
          type: string
        flavour:
          type: string
        modifiedOn:
          type: string
        modifiedBy:
          type: string
        createdBy:
          type: string
        createdOn:
          type: string
        accessRights:
          type: string
        processing:
          type: string
        created:
          type: string
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          type: string
        tag:
          type: string
        project:
          type: string
        address:
          type: string
        broadcast:
          type: string
        gateway:
          type: string
        type:
          type: string
        vm:
          type: string
        dns:
          type: string
        netgw:
          type: string
    netgw_vpn_l2tp_user:
      example:
        _id: _id
        username: username
      properties:
        _id:
          type: string
        username:
          type: string
    netgw_vpn_l2tp:
      example:
        preSharedSecret: preSharedSecret
        clientPrefix: clientPrefix
        _id: _id
        user:
          _id: _id
          username: username
      properties:
        _id:
          type: string
        preSharedSecret:
          type: string
        clientPrefix:
          type: string
        user:
          $ref: '#/components/schemas/netgw_vpn_l2tp_user'
    netgw_vpn:
      example:
        l2tp:
          preSharedSecret: preSharedSecret
          clientPrefix: clientPrefix
          _id: _id
          user:
            _id: _id
            username: username
        ipsec: ipsec
      properties:
        ipsec:
          type: string
        l2tp:
          $ref: '#/components/schemas/netgw_vpn_l2tp'
    image_disks_disk:
      example:
        name: name
        _id: _id
      properties:
        _id:
          type: string
        name:
          type: string
    image_disks:
      example:
        attachedOn: attachedOn
        disk:
          name: name
          _id: _id
        size: size
        fileSize: fileSize
        downloadUrl: downloadUrl
        type: type
      properties:
        type:
          type: string
        size:
          type: string
        fileSize:
          type: string
        attachedOn:
          type: string
        downloadUrl:
          type: string
        disk:
          $ref: '#/components/schemas/image_disks_disk'
    image_vm:
      example:
        flavour: flavour
        name: name
        id: id
      properties:
        flavour:
          type: string
        name:
          type: string
        id:
          type: string
    disk_metadata:
      example:
        source: source
      properties:
        source:
          type: string
    vm_sourceImage:
      example:
        name: name
        _id: _id
      properties:
        name:
          type: string
        _id:
          format: ObjectId
          type: string
    vm_data:
      example:
        username: username
      properties:
        username:
          type: string
    netadp_assigned:
      example:
        resource: resource
        id: id
      properties:
        resource:
          type: string
        id:
          type: string
    vault_credential_password:
      example:
        createdBy: createdBy
        name: name
        _id: _id
        type: type
        createdOn: createdOn
        value: value
      properties:
        createdBy:
          type: string
        createdOn:
          type: string
        name:
          type: string
        type:
          type: string
        _id:
          type: string
        value:
          type: string
    vault_credential:
      example:
        password:
          createdBy: createdBy
          name: name
          _id: _id
          type: type
          createdOn: createdOn
          value: value
        certificate:
          createdBy: createdBy
          name: name
          _id: _id
          type: type
          createdOn: createdOn
          value: value
      properties:
        password:
          $ref: '#/components/schemas/vault_credential_password'
        certificate:
          $ref: '#/components/schemas/vault_credential_password'
    projectCreate_accessRights:
      properties:
        id:
          type: string
        role:
          type: string
      required:
      - id
      - role
    organisationCreate_billing_address:
      properties:
        country:
          type: string
        city:
          type: string
        zipcode:
          type: string
        street:
          type: string
    organisationCreate_billing:
      properties:
        nip:
          type: string
        email:
          type: string
        company:
          type: string
        currency:
          type: string
        address:
          $ref: '#/components/schemas/organisationCreate_billing_address'
    organisationCreate_accessRights:
      properties:
        id:
          type: string
        role:
          type: string
    containerCreate_registry:
      properties:
        username:
          type: string
        password:
          type: string
    containerCreate_expose:
      properties:
        port:
          type: number
        host:
          type: string
    containerCreate_volumes:
      properties:
        source:
          type: string
        sourcePath:
          type: string
        target:
          type: string
      required:
      - source
      - target
    netgwCreate_public:
      properties:
        ip:
          type: string
      required:
      - ip
    diskCreate_metadata_source:
      properties:
        filename:
          type: string
        size:
          type: number
    diskCreate_metadata:
      properties:
        source:
          $ref: '#/components/schemas/diskCreate_metadata_source'
    vmCreate_password:
      properties:
        type:
          enum:
          - plain
          - unix
          type: string
        value:
          type: string
    vmCreate_disk:
      properties:
        id:
          type: string
        size:
          type: number
        service:
          format: ObjectId
          type: string
        name:
          type: string
        cloud:
          type: string
    vmCreate_netadp:
      properties:
        service:
          format: ObjectId
          type: string
        network:
          type: string
        ip:
          items:
            type: string
          type: array
    vaultCreate_credential_password:
      properties:
        name:
          type: string
        type:
          type: string
        value:
          type: string
      required:
      - name
      - type
      - value
    vaultCreate_credential_certificate:
      properties:
        name:
          type: string
        type:
          type: string
        value:
          type: string
    vaultCreate_credential:
      properties:
        password:
          items:
            $ref: '#/components/schemas/vaultCreate_credential_password'
          type: array
        certificate:
          items:
            $ref: '#/components/schemas/vaultCreate_credential_certificate'
          type: array
  securitySchemes:
    Session:
      in: header
      name: x-auth-token
      type: apiKey
    ServiceAccount:
      in: header
      name: x-auth-token
      type: apiKey
    Project:
      in: header
      name: x-project
      type: apiKey
