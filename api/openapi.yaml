openapi: 3.0.0
info:
  title: HyperOne API
  version: 0.0.2
servers:
- description: HyperOne API
  url: https://api.hyperone.com/v1
security:
- Session: []
  Project: []
- ServiceAccount: []
paths:
  /service:
    get:
      description: List service
      operationId: service_list
      parameters:
      - description: Filter by type
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: Filter by resource
        explode: true
        in: query
        name: resource
        required: false
        schema:
          type: string
        style: form
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/service'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: List
      tags:
      - service
  /service/{serviceId}:
    get:
      description: Returns a single service
      operationId: service_show
      parameters:
      - description: ID of service
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Get
      tags:
      - service
  /user:
    get:
      description: List user
      operationId: user_list
      parameters: []
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/user'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: List
      tags:
      - user
  /user/{userId}:
    delete:
      operationId: user_delete
      parameters:
      - description: ID of user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Delete
      tags:
      - user
    get:
      description: Returns a single user
      operationId: user_show
      parameters:
      - description: ID of user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Get
      tags:
      - user
  /user/{userId}/credential/password:
    get:
      operationId: user_list_credentialpassword
      parameters:
      - description: ID of user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/credential.password'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/password
      tags:
      - user
    post:
      operationId: user_post_credentialpassword
      parameters:
      - description: ID of user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_post_credentialpassword'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.password'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/password
      tags:
      - user
  /user/{userId}/credential/password/{id}:
    delete:
      operationId: user_delete_credentialpassword_id
      parameters:
      - description: ID of user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/password/:id
      tags:
      - user
    get:
      operationId: user_get_credentialpassword_id
      parameters:
      - description: ID of user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.password'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/password/:id
      tags:
      - user
    patch:
      operationId: user_patch_credentialpassword_id
      parameters:
      - description: ID of user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_patch_credentialpassword_id'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.password'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/password/:id
      tags:
      - user
  /user/{userId}/credential/certificate:
    get:
      operationId: user_list_credentialcertificate
      parameters:
      - description: ID of user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/credential.certificate'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/certificate
      tags:
      - user
    post:
      operationId: user_post_credentialcertificate
      parameters:
      - description: ID of user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_post_credentialcertificate'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.certificate'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/certificate
      tags:
      - user
  /user/{userId}/credential/certificate/{id}:
    delete:
      operationId: user_delete_credentialcertificate_id
      parameters:
      - description: ID of user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.certificate'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/certificate/:id
      tags:
      - user
    get:
      operationId: user_get_credentialcertificate_id
      parameters:
      - description: ID of user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.certificate'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/certificate/:id
      tags:
      - user
    patch:
      operationId: user_patch_credentialcertificate_id
      parameters:
      - description: ID of user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_patch_credentialcertificate_id'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.certificate'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/certificate/:id
      tags:
      - user
  /user/{userId}/tag:
    get:
      operationId: user_get_tag
      parameters:
      - description: ID of user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - user
    patch:
      operationId: user_patch_tag
      parameters:
      - description: ID of user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_patch_tag'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - user
  /user/{userId}/tag/{key}:
    delete:
      operationId: user_delete_tag_key
      parameters:
      - description: ID of user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag/:key
      tags:
      - user
  /project:
    get:
      description: List project
      operationId: project_list
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          type: number
        style: form
      - description: Filter by active
        explode: true
        in: query
        name: active
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter by organisation
        explode: true
        in: query
        name: organisation
        required: false
        schema:
          type: string
        style: form
      - description: Filter by accessRights.id
        explode: true
        in: query
        name: accessRights.id
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag
        explode: false
        in: query
        name: tag
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: deepObject
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/project'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: List
      tags:
      - project
    post:
      description: Create project
      operationId: project_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/project_create'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Create
      tags:
      - project
  /project/{projectId}:
    delete:
      operationId: project_delete
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Delete
      tags:
      - project
    get:
      description: Returns a single project
      operationId: project_show
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Get
      tags:
      - project
    patch:
      description: Returns modified project
      operationId: project_update
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/project_update'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Update
      tags:
      - project
  /project/{projectId}/limit:
    get:
      operationId: project_list_limit
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/project.limit'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /limit
      tags:
      - project
  /project/{projectId}/accessrights:
    get:
      operationId: project_list_accessrights
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/accessrightsUserRole'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - project
    post:
      operationId: project_post_accessrights
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/project_post_accessrights'
        required: true
      responses:
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - project
  /project/{projectId}/accessrights/{id}:
    delete:
      operationId: project_delete_accessrights_id
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights/:id
      tags:
      - project
  /project/{projectId}/credentialStore/certificate:
    get:
      operationId: project_list_credentialStorecertificate
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/credential.certificate'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credentialStore/certificate
      tags:
      - project
    post:
      operationId: project_post_credentialStorecertificate
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/project_post_credentialStorecertificate'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.certificate'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credentialStore/certificate
      tags:
      - project
  /project/{projectId}/credentialStore/certificate/{id}:
    delete:
      operationId: project_delete_credentialStorecertificate_id
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.certificate'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credentialStore/certificate/:id
      tags:
      - project
    get:
      operationId: project_get_credentialStorecertificate_id
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.certificate'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credentialStore/certificate/:id
      tags:
      - project
    patch:
      operationId: project_patch_credentialStorecertificate_id
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/project_patch_credentialStorecertificate_id'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.certificate'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credentialStore/certificate/:id
      tags:
      - project
  /project/{projectId}/services:
    get:
      operationId: project_list_services
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/project.services'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services
      tags:
      - project
  /project/{projectId}/services/{serviceId}:
    get:
      operationId: project_get_services_serviceId
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project.services'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services/:serviceId
      tags:
      - project
  /project/{projectId}/tag:
    get:
      operationId: project_get_tag
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - project
    patch:
      operationId: project_patch_tag
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/project_patch_tag'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - project
  /project/{projectId}/tag/{key}:
    delete:
      operationId: project_delete_tag_key
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag/:key
      tags:
      - project
  /project/{projectId}/queue:
    get:
      operationId: project_list_queue
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /queue
      tags:
      - project
  /organisation:
    get:
      description: List organisation
      operationId: organisation_list
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by billing.company
        explode: true
        in: query
        name: billing.company
        required: false
        schema:
          type: string
        style: form
      - description: Filter by $limit
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          type: number
        style: form
      - description: Filter by active
        explode: true
        in: query
        name: active
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter by accessRights.id
        explode: true
        in: query
        name: accessRights.id
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag
        explode: false
        in: query
        name: tag
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: deepObject
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/organisation'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: List
      tags:
      - organisation
    post:
      description: Create organisation
      operationId: organisation_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organisation_create'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organisation'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Create
      tags:
      - organisation
  /organisation/{organisationId}:
    get:
      description: Returns a single organisation
      operationId: organisation_show
      parameters:
      - description: ID of organisation
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organisation'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Get
      tags:
      - organisation
    patch:
      description: Returns modified organisation
      operationId: organisation_update
      parameters:
      - description: ID of organisation
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organisation_update'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organisation'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Update
      tags:
      - organisation
  /organisation/{organisationId}/actions/transfer_accept:
    post:
      description: Action transfer_accept
      operationId: organisation_action_transfer_accept
      parameters:
      - description: ID of organisation
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organisation_action_transfer_accept'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organisation'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/transfer_accept
      tags:
      - organisation
  /organisation/{organisationId}/actions/payment_assign:
    post:
      description: Action payment_assign
      operationId: organisation_action_payment_assign
      parameters:
      - description: ID of organisation
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organisation_action_payment_assign'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organisation'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/payment_assign
      tags:
      - organisation
  /organisation/{organisationId}/accessrights:
    get:
      operationId: organisation_list_accessrights
      parameters:
      - description: ID of organisation
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/accessrightsUserRole'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - organisation
    post:
      operationId: organisation_post_accessrights
      parameters:
      - description: ID of organisation
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organisation_post_accessrights'
        required: true
      responses:
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - organisation
  /organisation/{organisationId}/accessrights/{id}:
    delete:
      operationId: organisation_delete_accessrights_id
      parameters:
      - description: ID of organisation
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights/:id
      tags:
      - organisation
  /organisation/{organisationId}/tag:
    get:
      operationId: organisation_get_tag
      parameters:
      - description: ID of organisation
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organisation.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - organisation
    patch:
      operationId: organisation_patch_tag
      parameters:
      - description: ID of organisation
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organisation_patch_tag'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organisation.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - organisation
  /organisation/{organisationId}/tag/{key}:
    delete:
      operationId: organisation_delete_tag_key
      parameters:
      - description: ID of organisation
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organisation.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag/:key
      tags:
      - organisation
  /organisation/{organisationId}/queue:
    get:
      operationId: organisation_list_queue
      parameters:
      - description: ID of organisation
        explode: false
        in: path
        name: organisationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /queue
      tags:
      - organisation
  /firewall:
    get:
      description: List firewall
      operationId: firewall_list
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag
        explode: false
        in: query
        name: tag
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: deepObject
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/firewall'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: List
      tags:
      - firewall
    post:
      description: Create firewall
      operationId: firewall_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/firewall_create'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Create
      tags:
      - firewall
  /firewall/{firewallId}:
    delete:
      operationId: firewall_delete
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      responses:
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Delete
      tags:
      - firewall
    get:
      description: Returns a single firewall
      operationId: firewall_show
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Get
      tags:
      - firewall
    patch:
      description: Returns modified firewall
      operationId: firewall_update
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/firewall_update'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Update
      tags:
      - firewall
  /firewall/{firewallId}/actions/attach:
    post:
      description: Action attach
      operationId: firewall_action_attach
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/firewall_action_attach'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/attach
      tags:
      - firewall
  /firewall/{firewallId}/actions/detach:
    post:
      description: Action detach
      operationId: firewall_action_detach
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/detach
      tags:
      - firewall
  /firewall/{firewallId}/actions/transfer:
    post:
      description: Action transfer
      operationId: firewall_action_transfer
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/firewall_action_transfer'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/transfer
      tags:
      - firewall
  /firewall/{firewallId}/ingress:
    get:
      operationId: firewall_list_ingress
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /ingress
      tags:
      - firewall
    post:
      operationId: firewall_post_ingress
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/firewall_post_ingress'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /ingress
      tags:
      - firewall
  /firewall/{firewallId}/ingress/{ruleId}:
    delete:
      operationId: firewall_delete_ingress_ruleId
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      - description: ruleId
        explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /ingress/:ruleId
      tags:
      - firewall
    get:
      operationId: firewall_get_ingress_ruleId
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      - description: ruleId
        explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /ingress/:ruleId
      tags:
      - firewall
  /firewall/{firewallId}/egress:
    get:
      operationId: firewall_list_egress
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /egress
      tags:
      - firewall
    post:
      operationId: firewall_post_egress
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/firewall_post_egress'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /egress
      tags:
      - firewall
  /firewall/{firewallId}/egress/{ruleId}:
    delete:
      operationId: firewall_delete_egress_ruleId
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      - description: ruleId
        explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /egress/:ruleId
      tags:
      - firewall
    get:
      operationId: firewall_get_egress_ruleId
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      - description: ruleId
        explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /egress/:ruleId
      tags:
      - firewall
  /firewall/{firewallId}/accessrights:
    get:
      operationId: firewall_list_accessrights
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/accessrightsProject'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - firewall
    post:
      operationId: firewall_post_accessrights
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/firewall_post_accessrights'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - firewall
  /firewall/{firewallId}/accessrights/{identity}:
    delete:
      operationId: firewall_delete_accessrights_identity
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights/:identity
      tags:
      - firewall
  /firewall/{firewallId}/services:
    get:
      operationId: firewall_list_services
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/firewall.services'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services
      tags:
      - firewall
  /firewall/{firewallId}/services/{serviceId}:
    get:
      operationId: firewall_get_services_serviceId
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall.services'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services/:serviceId
      tags:
      - firewall
  /firewall/{firewallId}/tag:
    get:
      operationId: firewall_get_tag
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - firewall
    patch:
      operationId: firewall_patch_tag
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/firewall_patch_tag'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - firewall
  /firewall/{firewallId}/tag/{key}:
    delete:
      operationId: firewall_delete_tag_key
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/firewall.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag/:key
      tags:
      - firewall
  /firewall/{firewallId}/queue:
    get:
      operationId: firewall_list_queue
      parameters:
      - description: ID of firewall
        explode: false
        in: path
        name: firewallId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /queue
      tags:
      - firewall
  /network:
    get:
      description: List network
      operationId: network_list
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag
        explode: false
        in: query
        name: tag
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: deepObject
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/network'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: List
      tags:
      - network
    post:
      description: Create network
      operationId: network_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/network_create'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Create
      tags:
      - network
  /network/{networkId}:
    delete:
      operationId: network_delete
      parameters:
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      responses:
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Delete
      tags:
      - network
    get:
      description: Returns a single network
      operationId: network_show
      parameters:
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Get
      tags:
      - network
    patch:
      description: Returns modified network
      operationId: network_update
      parameters:
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/network_update'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Update
      tags:
      - network
  /network/{networkId}/ip:
    get:
      operationId: network_list_ip
      parameters:
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ip'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /ip
      tags:
      - network
    post:
      operationId: network_post_ip
      parameters:
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/network_post_ip'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /ip
      tags:
      - network
  /network/{networkId}/ip/{ipId}:
    delete:
      operationId: network_delete_ip_ipId
      parameters:
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      - description: ipId
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /ip/:ipId
      tags:
      - network
    get:
      operationId: network_get_ip_ipId
      parameters:
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      - description: ipId
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /ip/:ipId
      tags:
      - network
  /network/{networkId}/accessrights:
    get:
      operationId: network_list_accessrights
      parameters:
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/accessrightsProject'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - network
    post:
      operationId: network_post_accessrights
      parameters:
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/network_post_accessrights'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - network
  /network/{networkId}/accessrights/{identity}:
    delete:
      operationId: network_delete_accessrights_identity
      parameters:
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights/:identity
      tags:
      - network
  /network/{networkId}/services:
    get:
      operationId: network_list_services
      parameters:
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/network.services'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services
      tags:
      - network
  /network/{networkId}/services/{serviceId}:
    get:
      operationId: network_get_services_serviceId
      parameters:
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.services'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services/:serviceId
      tags:
      - network
  /network/{networkId}/tag:
    get:
      operationId: network_get_tag
      parameters:
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - network
    patch:
      operationId: network_patch_tag
      parameters:
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/network_patch_tag'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - network
  /network/{networkId}/tag/{key}:
    delete:
      operationId: network_delete_tag_key
      parameters:
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag/:key
      tags:
      - network
  /network/{networkId}/queue:
    get:
      operationId: network_list_queue
      parameters:
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /queue
      tags:
      - network
  /netgw:
    get:
      description: List netgw
      operationId: netgw_list
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag
        explode: false
        in: query
        name: tag
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: deepObject
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/netgw'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: List
      tags:
      - netgw
    post:
      description: Create netgw
      operationId: netgw_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/netgw_create'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Create
      tags:
      - netgw
  /netgw/{netgwId}:
    delete:
      operationId: netgw_delete
      parameters:
      - description: ID of netgw
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          type: string
        style: simple
      responses:
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Delete
      tags:
      - netgw
    get:
      description: Returns a single netgw
      operationId: netgw_show
      parameters:
      - description: ID of netgw
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Get
      tags:
      - netgw
    patch:
      description: Returns modified netgw
      operationId: netgw_update
      parameters:
      - description: ID of netgw
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/netgw_update'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Update
      tags:
      - netgw
  /netgw/{netgwId}/actions/attach:
    post:
      description: Action attach
      operationId: netgw_action_attach
      parameters:
      - description: ID of netgw
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/netgw_action_attach'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/attach
      tags:
      - netgw
  /netgw/{netgwId}/actions/detach:
    post:
      description: Action detach
      operationId: netgw_action_detach
      parameters:
      - description: ID of netgw
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/detach
      tags:
      - netgw
  /netgw/{netgwId}/accessrights:
    get:
      operationId: netgw_list_accessrights
      parameters:
      - description: ID of netgw
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/accessrightsProject'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - netgw
    post:
      operationId: netgw_post_accessrights
      parameters:
      - description: ID of netgw
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/netgw_post_accessrights'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - netgw
  /netgw/{netgwId}/accessrights/{identity}:
    delete:
      operationId: netgw_delete_accessrights_identity
      parameters:
      - description: ID of netgw
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights/:identity
      tags:
      - netgw
  /netgw/{netgwId}/services:
    get:
      operationId: netgw_list_services
      parameters:
      - description: ID of netgw
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/netgw.services'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services
      tags:
      - netgw
  /netgw/{netgwId}/services/{serviceId}:
    get:
      operationId: netgw_get_services_serviceId
      parameters:
      - description: ID of netgw
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw.services'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services/:serviceId
      tags:
      - netgw
  /netgw/{netgwId}/tag:
    get:
      operationId: netgw_get_tag
      parameters:
      - description: ID of netgw
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - netgw
    patch:
      operationId: netgw_patch_tag
      parameters:
      - description: ID of netgw
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/netgw_patch_tag'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - netgw
  /netgw/{netgwId}/tag/{key}:
    delete:
      operationId: netgw_delete_tag_key
      parameters:
      - description: ID of netgw
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netgw.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag/:key
      tags:
      - netgw
  /netgw/{netgwId}/queue:
    get:
      operationId: netgw_list_queue
      parameters:
      - description: ID of netgw
        explode: false
        in: path
        name: netgwId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /queue
      tags:
      - netgw
  /image:
    get:
      description: List image
      operationId: image_list
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag
        explode: false
        in: query
        name: tag
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: deepObject
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/image'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: List
      tags:
      - image
    post:
      description: Create image
      operationId: image_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/image_create'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Create
      tags:
      - image
  /image/{imageId}:
    delete:
      operationId: image_delete
      parameters:
      - description: ID of image
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Delete
      tags:
      - image
    get:
      description: Returns a single image
      operationId: image_show
      parameters:
      - description: ID of image
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Get
      tags:
      - image
    patch:
      description: Returns modified image
      operationId: image_update
      parameters:
      - description: ID of image
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/image_update'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Update
      tags:
      - image
  /image/{imageId}/actions/transfer:
    post:
      description: Action transfer
      operationId: image_action_transfer
      parameters:
      - description: ID of image
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/image_action_transfer'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/transfer
      tags:
      - image
  /image/{imageId}/accessrights:
    get:
      operationId: image_list_accessrights
      parameters:
      - description: ID of image
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/accessrightsProject'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - image
    post:
      operationId: image_post_accessrights
      parameters:
      - description: ID of image
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/image_post_accessrights'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - image
  /image/{imageId}/accessrights/{identity}:
    delete:
      operationId: image_delete_accessrights_identity
      parameters:
      - description: ID of image
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights/:identity
      tags:
      - image
  /image/{imageId}/services:
    get:
      operationId: image_list_services
      parameters:
      - description: ID of image
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/image.services'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services
      tags:
      - image
  /image/{imageId}/services/{serviceId}:
    get:
      operationId: image_get_services_serviceId
      parameters:
      - description: ID of image
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image.services'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services/:serviceId
      tags:
      - image
  /image/{imageId}/tag:
    get:
      operationId: image_get_tag
      parameters:
      - description: ID of image
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - image
    patch:
      operationId: image_patch_tag
      parameters:
      - description: ID of image
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/image_patch_tag'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - image
  /image/{imageId}/tag/{key}:
    delete:
      operationId: image_delete_tag_key
      parameters:
      - description: ID of image
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag/:key
      tags:
      - image
  /image/{imageId}/queue:
    get:
      operationId: image_list_queue
      parameters:
      - description: ID of image
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /queue
      tags:
      - image
  /disk:
    get:
      description: List disk
      operationId: disk_list
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag
        explode: false
        in: query
        name: tag
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: deepObject
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/disk'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: List
      tags:
      - disk
    post:
      description: Create disk
      operationId: disk_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/disk_create'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Create
      tags:
      - disk
  /disk/{diskId}:
    delete:
      operationId: disk_delete
      parameters:
      - description: ID of disk
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Delete
      tags:
      - disk
    get:
      description: Returns a single disk
      operationId: disk_show
      parameters:
      - description: ID of disk
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Get
      tags:
      - disk
    patch:
      description: Returns modified disk
      operationId: disk_update
      parameters:
      - description: ID of disk
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/disk_update'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Update
      tags:
      - disk
  /disk/{diskId}/actions/resize:
    post:
      description: Action resize
      operationId: disk_action_resize
      parameters:
      - description: ID of disk
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/disk_action_resize'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/resize
      tags:
      - disk
  /disk/{diskId}/actions/clone:
    post:
      description: Action clone
      operationId: disk_action_clone
      parameters:
      - description: ID of disk
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/disk_action_clone'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/clone
      tags:
      - disk
  /disk/{diskId}/actions/transfer:
    post:
      description: Action transfer
      operationId: disk_action_transfer
      parameters:
      - description: ID of disk
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/disk_action_transfer'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/transfer
      tags:
      - disk
  /disk/{diskId}/accessrights:
    get:
      operationId: disk_list_accessrights
      parameters:
      - description: ID of disk
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/accessrightsProject'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - disk
    post:
      operationId: disk_post_accessrights
      parameters:
      - description: ID of disk
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/disk_post_accessrights'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - disk
  /disk/{diskId}/accessrights/{identity}:
    delete:
      operationId: disk_delete_accessrights_identity
      parameters:
      - description: ID of disk
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights/:identity
      tags:
      - disk
  /disk/{diskId}/services:
    get:
      operationId: disk_list_services
      parameters:
      - description: ID of disk
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/disk.services'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services
      tags:
      - disk
  /disk/{diskId}/services/{serviceId}:
    get:
      operationId: disk_get_services_serviceId
      parameters:
      - description: ID of disk
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk.services'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services/:serviceId
      tags:
      - disk
  /disk/{diskId}/tag:
    get:
      operationId: disk_get_tag
      parameters:
      - description: ID of disk
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - disk
    patch:
      operationId: disk_patch_tag
      parameters:
      - description: ID of disk
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/disk_patch_tag'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - disk
  /disk/{diskId}/tag/{key}:
    delete:
      operationId: disk_delete_tag_key
      parameters:
      - description: ID of disk
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/disk.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag/:key
      tags:
      - disk
  /disk/{diskId}/queue:
    get:
      operationId: disk_list_queue
      parameters:
      - description: ID of disk
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /queue
      tags:
      - disk
  /iso:
    get:
      description: List iso
      operationId: iso_list
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag
        explode: false
        in: query
        name: tag
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: deepObject
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/iso'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: List
      tags:
      - iso
    post:
      description: Create iso
      operationId: iso_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iso_create'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iso'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Create
      tags:
      - iso
  /iso/{isoId}:
    delete:
      operationId: iso_delete
      parameters:
      - description: ID of iso
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          type: string
        style: simple
      responses:
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Delete
      tags:
      - iso
    get:
      description: Returns a single iso
      operationId: iso_show
      parameters:
      - description: ID of iso
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iso'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Get
      tags:
      - iso
    patch:
      description: Returns modified iso
      operationId: iso_update
      parameters:
      - description: ID of iso
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iso_update'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iso'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Update
      tags:
      - iso
  /iso/{isoId}/actions/transfer:
    post:
      description: Action transfer
      operationId: iso_action_transfer
      parameters:
      - description: ID of iso
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iso_action_transfer'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iso'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/transfer
      tags:
      - iso
  /iso/{isoId}/accessrights:
    get:
      operationId: iso_list_accessrights
      parameters:
      - description: ID of iso
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/accessrightsProject'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - iso
    post:
      operationId: iso_post_accessrights
      parameters:
      - description: ID of iso
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iso_post_accessrights'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iso'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iso'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - iso
  /iso/{isoId}/accessrights/{identity}:
    delete:
      operationId: iso_delete_accessrights_identity
      parameters:
      - description: ID of iso
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iso'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iso'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights/:identity
      tags:
      - iso
  /iso/{isoId}/services:
    get:
      operationId: iso_list_services
      parameters:
      - description: ID of iso
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/iso.services'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services
      tags:
      - iso
  /iso/{isoId}/services/{serviceId}:
    get:
      operationId: iso_get_services_serviceId
      parameters:
      - description: ID of iso
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iso.services'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services/:serviceId
      tags:
      - iso
  /iso/{isoId}/tag:
    get:
      operationId: iso_get_tag
      parameters:
      - description: ID of iso
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iso.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - iso
    patch:
      operationId: iso_patch_tag
      parameters:
      - description: ID of iso
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iso_patch_tag'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iso.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - iso
  /iso/{isoId}/tag/{key}:
    delete:
      operationId: iso_delete_tag_key
      parameters:
      - description: ID of iso
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iso.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag/:key
      tags:
      - iso
  /iso/{isoId}/queue:
    get:
      operationId: iso_list_queue
      parameters:
      - description: ID of iso
        explode: false
        in: path
        name: isoId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /queue
      tags:
      - iso
  /vm:
    get:
      description: List vm
      operationId: vm_list
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag
        explode: false
        in: query
        name: tag
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: deepObject
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/vm'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: List
      tags:
      - vm
    post:
      description: Create vm
      operationId: vm_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_create'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Create
      tags:
      - vm
  /vm/{vmId}:
    delete:
      operationId: vm_delete
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_delete'
        required: true
      responses:
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Delete
      tags:
      - vm
    get:
      description: Returns a single vm
      operationId: vm_show
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Get
      tags:
      - vm
    patch:
      description: Returns modified vm
      operationId: vm_update
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_update'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Update
      tags:
      - vm
  /vm/{vmId}/actions/start:
    post:
      description: Action start
      operationId: vm_action_start
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/start
      tags:
      - vm
  /vm/{vmId}/actions/restart:
    post:
      description: Action restart
      operationId: vm_action_restart
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/restart
      tags:
      - vm
  /vm/{vmId}/actions/stop:
    post:
      description: Action stop
      operationId: vm_action_stop
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/stop
      tags:
      - vm
  /vm/{vmId}/actions/turnoff:
    post:
      description: Action turnoff
      operationId: vm_action_turnoff
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/turnoff
      tags:
      - vm
  /vm/{vmId}/actions/rename:
    post:
      description: Action rename
      operationId: vm_action_rename
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_action_rename'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/rename
      tags:
      - vm
  /vm/{vmId}/actions/password_reset:
    post:
      description: Action password_reset
      operationId: vm_action_password_reset
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_action_password_reset'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/password_reset
      tags:
      - vm
  /vm/{vmId}/actions/image:
    post:
      description: Action image
      operationId: vm_action_image
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_action_image'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/image
      tags:
      - vm
  /vm/{vmId}/actions/flavour:
    post:
      description: Action flavour
      operationId: vm_action_flavour
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_action_flavour'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/flavour
      tags:
      - vm
  /vm/{vmId}/hdd:
    get:
      operationId: vm_list_hdd
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/hdd'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /hdd
      tags:
      - vm
    post:
      operationId: vm_post_hdd
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_post_hdd'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /hdd
      tags:
      - vm
  /vm/{vmId}/hdd/{diskId}:
    delete:
      operationId: vm_delete_hdd_diskId
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      - description: diskId
        explode: false
        in: path
        name: diskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /hdd/:diskId
      tags:
      - vm
  /vm/{vmId}/netadp:
    get:
      operationId: vm_list_netadp
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/netadp'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /netadp
      tags:
      - vm
    post:
      operationId: vm_post_netadp
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_post_netadp'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /netadp
      tags:
      - vm
  /vm/{vmId}/netadp/{netadpId}:
    delete:
      operationId: vm_delete_netadp_netadpId
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      - description: netadpId
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /netadp/:netadpId
      tags:
      - vm
  /vm/{vmId}/accessrights:
    get:
      operationId: vm_list_accessrights
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/accessrightsProject'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - vm
    post:
      operationId: vm_post_accessrights
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_post_accessrights'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - vm
  /vm/{vmId}/accessrights/{identity}:
    delete:
      operationId: vm_delete_accessrights_identity
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights/:identity
      tags:
      - vm
  /vm/{vmId}/services:
    get:
      operationId: vm_list_services
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/vm.services'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services
      tags:
      - vm
  /vm/{vmId}/services/{serviceId}:
    get:
      operationId: vm_get_services_serviceId
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm.services'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services/:serviceId
      tags:
      - vm
  /vm/{vmId}/tag:
    get:
      operationId: vm_get_tag
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - vm
    patch:
      operationId: vm_patch_tag
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_patch_tag'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - vm
  /vm/{vmId}/tag/{key}:
    delete:
      operationId: vm_delete_tag_key
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vm.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag/:key
      tags:
      - vm
  /vm/{vmId}/queue:
    get:
      operationId: vm_list_queue
      parameters:
      - description: ID of vm
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /queue
      tags:
      - vm
  /ip:
    get:
      description: List ip
      operationId: ip_list
      parameters:
      - description: Filter by network
        explode: true
        in: query
        name: network
        required: false
        schema:
          format: ObjectId
          type: string
        style: form
      - description: Filter by tag
        explode: false
        in: query
        name: tag
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: deepObject
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ip'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: List
      tags:
      - ip
    post:
      description: Create ip
      operationId: ip_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ip_create'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Create
      tags:
      - ip
  /ip/{ipId}:
    delete:
      operationId: ip_delete
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      responses:
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Delete
      tags:
      - ip
    get:
      description: Returns a single ip
      operationId: ip_show
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Get
      tags:
      - ip
    patch:
      description: Returns modified ip
      operationId: ip_update
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ip_update'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Update
      tags:
      - ip
  /ip/{ipId}/actions/release:
    post:
      description: Action release
      operationId: ip_action_release
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/release
      tags:
      - ip
  /ip/{ipId}/actions/allocate:
    post:
      description: Action allocate
      operationId: ip_action_allocate
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/allocate
      tags:
      - ip
  /ip/{ipId}/actions/associate:
    post:
      description: Action associate
      operationId: ip_action_associate
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ip_action_associate'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/associate
      tags:
      - ip
  /ip/{ipId}/actions/disassociate:
    post:
      description: Action disassociate
      operationId: ip_action_disassociate
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/disassociate
      tags:
      - ip
  /ip/{ipId}/actions/transfer:
    post:
      description: Action transfer
      operationId: ip_action_transfer
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ip_action_transfer'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/transfer
      tags:
      - ip
  /ip/{ipId}/accessrights:
    get:
      operationId: ip_list_accessrights
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/accessrightsProject'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - ip
    post:
      operationId: ip_post_accessrights
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ip_post_accessrights'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - ip
  /ip/{ipId}/accessrights/{identity}:
    delete:
      operationId: ip_delete_accessrights_identity
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights/:identity
      tags:
      - ip
  /ip/{ipId}/services:
    get:
      operationId: ip_list_services
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ip.services'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services
      tags:
      - ip
  /ip/{ipId}/services/{serviceId}:
    get:
      operationId: ip_get_services_serviceId
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip.services'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services/:serviceId
      tags:
      - ip
  /ip/{ipId}/tag:
    get:
      operationId: ip_get_tag
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - ip
    patch:
      operationId: ip_patch_tag
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ip_patch_tag'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - ip
  /ip/{ipId}/tag/{key}:
    delete:
      operationId: ip_delete_tag_key
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ip.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag/:key
      tags:
      - ip
  /ip/{ipId}/queue:
    get:
      operationId: ip_list_queue
      parameters:
      - description: ID of ip
        explode: false
        in: path
        name: ipId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /queue
      tags:
      - ip
  /netadp:
    get:
      description: List netadp
      operationId: netadp_list
      parameters:
      - description: Filter by assigned.resource
        explode: true
        in: query
        name: assigned.resource
        required: false
        schema:
          type: string
        style: form
      - description: Filter by assigned.id
        explode: true
        in: query
        name: assigned.id
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/netadp'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: List
      tags:
      - netadp
  /netadp/{netadpId}:
    get:
      description: Returns a single netadp
      operationId: netadp_show
      parameters:
      - description: ID of netadp
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netadp'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Get
      tags:
      - netadp
  /netadp/{netadpId}/accessrights:
    get:
      operationId: netadp_list_accessrights
      parameters:
      - description: ID of netadp
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/accessrightsProject'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - netadp
    post:
      operationId: netadp_post_accessrights
      parameters:
      - description: ID of netadp
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/netadp_post_accessrights'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netadp'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netadp'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - netadp
  /netadp/{netadpId}/accessrights/{identity}:
    delete:
      operationId: netadp_delete_accessrights_identity
      parameters:
      - description: ID of netadp
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netadp'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netadp'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights/:identity
      tags:
      - netadp
  /netadp/{netadpId}/services:
    get:
      operationId: netadp_list_services
      parameters:
      - description: ID of netadp
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/netadp.services'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services
      tags:
      - netadp
  /netadp/{netadpId}/services/{serviceId}:
    get:
      operationId: netadp_get_services_serviceId
      parameters:
      - description: ID of netadp
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netadp.services'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services/:serviceId
      tags:
      - netadp
  /netadp/{netadpId}/tag:
    get:
      operationId: netadp_get_tag
      parameters:
      - description: ID of netadp
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netadp.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - netadp
    patch:
      operationId: netadp_patch_tag
      parameters:
      - description: ID of netadp
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/netadp_patch_tag'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netadp.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - netadp
  /netadp/{netadpId}/tag/{key}:
    delete:
      operationId: netadp_delete_tag_key
      parameters:
      - description: ID of netadp
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netadp.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag/:key
      tags:
      - netadp
  /netadp/{netadpId}/queue:
    get:
      operationId: netadp_list_queue
      parameters:
      - description: ID of netadp
        explode: false
        in: path
        name: netadpId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /queue
      tags:
      - netadp
  /vault:
    get:
      description: List vault
      operationId: vault_list
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag
        explode: false
        in: query
        name: tag
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: deepObject
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/vault'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: List
      tags:
      - vault
    post:
      description: Create vault
      operationId: vault_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vault_create'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Create
      tags:
      - vault
  /vault/{vaultId}:
    delete:
      operationId: vault_delete
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vault_delete'
        required: true
      responses:
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Delete
      tags:
      - vault
    get:
      description: Returns a single vault
      operationId: vault_show
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Get
      tags:
      - vault
    patch:
      description: Returns modified vault
      operationId: vault_update
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vault_update'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Update
      tags:
      - vault
  /vault/{vaultId}/actions/start:
    post:
      description: Action start
      operationId: vault_action_start
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/start
      tags:
      - vault
  /vault/{vaultId}/actions/stop:
    post:
      description: Action stop
      operationId: vault_action_stop
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/stop
      tags:
      - vault
  /vault/{vaultId}/actions/resize:
    post:
      description: Action resize
      operationId: vault_action_resize
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vault_action_resize'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/resize
      tags:
      - vault
  /vault/{vaultId}/actions/snapshot:
    post:
      description: Action snapshot
      operationId: vault_action_snapshot
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vault_action_snapshot'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/snapshot
      tags:
      - vault
  /vault/{vaultId}/credential/password:
    get:
      operationId: vault_list_credentialpassword
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/credential.password'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/password
      tags:
      - vault
    post:
      operationId: vault_post_credentialpassword
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vault_post_credentialpassword'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.password'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/password
      tags:
      - vault
  /vault/{vaultId}/credential/password/{id}:
    delete:
      operationId: vault_delete_credentialpassword_id
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/password/:id
      tags:
      - vault
    get:
      operationId: vault_get_credentialpassword_id
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.password'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/password/:id
      tags:
      - vault
    patch:
      operationId: vault_patch_credentialpassword_id
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vault_patch_credentialpassword_id'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.password'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/password/:id
      tags:
      - vault
  /vault/{vaultId}/credential/certificate:
    get:
      operationId: vault_list_credentialcertificate
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/credential.certificate'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/certificate
      tags:
      - vault
    post:
      operationId: vault_post_credentialcertificate
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vault_post_credentialcertificate'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.certificate'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/certificate
      tags:
      - vault
  /vault/{vaultId}/credential/certificate/{id}:
    delete:
      operationId: vault_delete_credentialcertificate_id
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.certificate'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/certificate/:id
      tags:
      - vault
    get:
      operationId: vault_get_credentialcertificate_id
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.certificate'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/certificate/:id
      tags:
      - vault
    patch:
      operationId: vault_patch_credentialcertificate_id
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vault_patch_credentialcertificate_id'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.certificate'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/certificate/:id
      tags:
      - vault
  /vault/{vaultId}/accessrights:
    get:
      operationId: vault_list_accessrights
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/accessrightsProject'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - vault
    post:
      operationId: vault_post_accessrights
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vault_post_accessrights'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - vault
  /vault/{vaultId}/accessrights/{identity}:
    delete:
      operationId: vault_delete_accessrights_identity
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights/:identity
      tags:
      - vault
  /vault/{vaultId}/services:
    get:
      operationId: vault_list_services
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/vault.services'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services
      tags:
      - vault
  /vault/{vaultId}/services/{serviceId}:
    get:
      operationId: vault_get_services_serviceId
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault.services'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services/:serviceId
      tags:
      - vault
  /vault/{vaultId}/tag:
    get:
      operationId: vault_get_tag
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - vault
    patch:
      operationId: vault_patch_tag
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vault_patch_tag'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - vault
  /vault/{vaultId}/tag/{key}:
    delete:
      operationId: vault_delete_tag_key
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag/:key
      tags:
      - vault
  /vault/{vaultId}/queue:
    get:
      operationId: vault_list_queue
      parameters:
      - description: ID of vault
        explode: false
        in: path
        name: vaultId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /queue
      tags:
      - vault
  /snapshot:
    get:
      description: List snapshot
      operationId: snapshot_list
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by vault
        explode: true
        in: query
        name: vault
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag
        explode: false
        in: query
        name: tag
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: deepObject
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/snapshot'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: List
      tags:
      - snapshot
    post:
      description: Create snapshot
      operationId: snapshot_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/snapshot_create'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snapshot'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Create
      tags:
      - snapshot
  /snapshot/{snapshotId}:
    delete:
      operationId: snapshot_delete
      parameters:
      - description: ID of snapshot
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      responses:
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Delete
      tags:
      - snapshot
    get:
      description: Returns a single snapshot
      operationId: snapshot_show
      parameters:
      - description: ID of snapshot
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snapshot'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Get
      tags:
      - snapshot
    patch:
      description: Returns modified snapshot
      operationId: snapshot_update
      parameters:
      - description: ID of snapshot
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/snapshot_update'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snapshot'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Update
      tags:
      - snapshot
  /snapshot/{snapshotId}/accessrights:
    get:
      operationId: snapshot_list_accessrights
      parameters:
      - description: ID of snapshot
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/accessrightsProject'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - snapshot
    post:
      operationId: snapshot_post_accessrights
      parameters:
      - description: ID of snapshot
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/snapshot_post_accessrights'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snapshot'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snapshot'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - snapshot
  /snapshot/{snapshotId}/accessrights/{identity}:
    delete:
      operationId: snapshot_delete_accessrights_identity
      parameters:
      - description: ID of snapshot
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snapshot'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snapshot'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights/:identity
      tags:
      - snapshot
  /snapshot/{snapshotId}/services:
    get:
      operationId: snapshot_list_services
      parameters:
      - description: ID of snapshot
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/snapshot.services'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services
      tags:
      - snapshot
  /snapshot/{snapshotId}/services/{serviceId}:
    get:
      operationId: snapshot_get_services_serviceId
      parameters:
      - description: ID of snapshot
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snapshot.services'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services/:serviceId
      tags:
      - snapshot
  /snapshot/{snapshotId}/tag:
    get:
      operationId: snapshot_get_tag
      parameters:
      - description: ID of snapshot
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snapshot.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - snapshot
    patch:
      operationId: snapshot_patch_tag
      parameters:
      - description: ID of snapshot
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/snapshot_patch_tag'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snapshot.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - snapshot
  /snapshot/{snapshotId}/tag/{key}:
    delete:
      operationId: snapshot_delete_tag_key
      parameters:
      - description: ID of snapshot
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snapshot.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag/:key
      tags:
      - snapshot
  /snapshot/{snapshotId}/queue:
    get:
      operationId: snapshot_list_queue
      parameters:
      - description: ID of snapshot
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /queue
      tags:
      - snapshot
  /reservation:
    get:
      description: List reservation
      operationId: reservation_list
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag
        explode: false
        in: query
        name: tag
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: deepObject
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/reservation'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: List
      tags:
      - reservation
    post:
      description: Create reservation
      operationId: reservation_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reservation_create'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Create
      tags:
      - reservation
  /reservation/{reservationId}:
    delete:
      operationId: reservation_delete
      parameters:
      - description: ID of reservation
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Delete
      tags:
      - reservation
    get:
      description: Returns a single reservation
      operationId: reservation_show
      parameters:
      - description: ID of reservation
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Get
      tags:
      - reservation
    patch:
      description: Returns modified reservation
      operationId: reservation_update
      parameters:
      - description: ID of reservation
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reservation_update'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Update
      tags:
      - reservation
  /reservation/{reservationId}/actions/assign:
    post:
      description: Action assign
      operationId: reservation_action_assign
      parameters:
      - description: ID of reservation
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reservation_action_assign'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/assign
      tags:
      - reservation
  /reservation/{reservationId}/actions/extend:
    post:
      description: Action extend
      operationId: reservation_action_extend
      parameters:
      - description: ID of reservation
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/extend
      tags:
      - reservation
  /reservation/{reservationId}/actions/unassign:
    post:
      description: Action unassign
      operationId: reservation_action_unassign
      parameters:
      - description: ID of reservation
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/unassign
      tags:
      - reservation
  /reservation/{reservationId}/accessrights:
    get:
      operationId: reservation_list_accessrights
      parameters:
      - description: ID of reservation
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/accessrightsProject'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - reservation
    post:
      operationId: reservation_post_accessrights
      parameters:
      - description: ID of reservation
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reservation_post_accessrights'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - reservation
  /reservation/{reservationId}/accessrights/{identity}:
    delete:
      operationId: reservation_delete_accessrights_identity
      parameters:
      - description: ID of reservation
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights/:identity
      tags:
      - reservation
  /reservation/{reservationId}/services:
    get:
      operationId: reservation_list_services
      parameters:
      - description: ID of reservation
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/reservation.services'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services
      tags:
      - reservation
  /reservation/{reservationId}/services/{serviceId}:
    get:
      operationId: reservation_get_services_serviceId
      parameters:
      - description: ID of reservation
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation.services'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services/:serviceId
      tags:
      - reservation
  /reservation/{reservationId}/tag:
    get:
      operationId: reservation_get_tag
      parameters:
      - description: ID of reservation
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - reservation
    patch:
      operationId: reservation_patch_tag
      parameters:
      - description: ID of reservation
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reservation_patch_tag'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - reservation
  /reservation/{reservationId}/tag/{key}:
    delete:
      operationId: reservation_delete_tag_key
      parameters:
      - description: ID of reservation
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag/:key
      tags:
      - reservation
  /reservation/{reservationId}/queue:
    get:
      operationId: reservation_list_queue
      parameters:
      - description: ID of reservation
        explode: false
        in: path
        name: reservationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /queue
      tags:
      - reservation
  /logArchive:
    get:
      description: List logArchive
      operationId: logArchive_list
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag
        explode: false
        in: query
        name: tag
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: deepObject
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/logArchive'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: List
      tags:
      - logArchive
    post:
      description: Create logArchive
      operationId: logArchive_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/logArchive_create'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logArchive'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Create
      tags:
      - logArchive
  /logArchive/{logArchiveId}:
    delete:
      operationId: logArchive_delete
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      responses:
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Delete
      tags:
      - logArchive
    get:
      description: Returns a single logArchive
      operationId: logArchive_show
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logArchive'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Get
      tags:
      - logArchive
    patch:
      description: Returns modified logArchive
      operationId: logArchive_update
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/logArchive_update'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logArchive'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Update
      tags:
      - logArchive
  /logArchive/{logArchiveId}/actions/transfer:
    post:
      description: Action transfer
      operationId: logArchive_action_transfer
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/logArchive_action_transfer'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logArchive'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/transfer
      tags:
      - logArchive
  /logArchive/{logArchiveId}/credential/password:
    get:
      operationId: logArchive_list_credentialpassword
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/credential.password'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/password
      tags:
      - logArchive
    post:
      operationId: logArchive_post_credentialpassword
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/logArchive_post_credentialpassword'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.password'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/password
      tags:
      - logArchive
  /logArchive/{logArchiveId}/credential/password/{id}:
    delete:
      operationId: logArchive_delete_credentialpassword_id
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logArchive'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logArchive'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/password/:id
      tags:
      - logArchive
    get:
      operationId: logArchive_get_credentialpassword_id
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.password'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/password/:id
      tags:
      - logArchive
    patch:
      operationId: logArchive_patch_credentialpassword_id
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/logArchive_patch_credentialpassword_id'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.password'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/password/:id
      tags:
      - logArchive
  /logArchive/{logArchiveId}/accessrights:
    get:
      operationId: logArchive_list_accessrights
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/accessrightsProject'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - logArchive
    post:
      operationId: logArchive_post_accessrights
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/logArchive_post_accessrights'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logArchive'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logArchive'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - logArchive
  /logArchive/{logArchiveId}/accessrights/{identity}:
    delete:
      operationId: logArchive_delete_accessrights_identity
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logArchive'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logArchive'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights/:identity
      tags:
      - logArchive
  /logArchive/{logArchiveId}/services:
    get:
      operationId: logArchive_list_services
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/logArchive.services'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services
      tags:
      - logArchive
  /logArchive/{logArchiveId}/services/{serviceId}:
    get:
      operationId: logArchive_get_services_serviceId
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logArchive.services'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services/:serviceId
      tags:
      - logArchive
  /logArchive/{logArchiveId}/tag:
    get:
      operationId: logArchive_get_tag
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logArchive.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - logArchive
    patch:
      operationId: logArchive_patch_tag
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/logArchive_patch_tag'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logArchive.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - logArchive
  /logArchive/{logArchiveId}/tag/{key}:
    delete:
      operationId: logArchive_delete_tag_key
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logArchive.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag/:key
      tags:
      - logArchive
  /logArchive/{logArchiveId}/queue:
    get:
      operationId: logArchive_list_queue
      parameters:
      - description: ID of logArchive
        explode: false
        in: path
        name: logArchiveId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /queue
      tags:
      - logArchive
  /website:
    get:
      description: List website
      operationId: website_list
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag
        explode: false
        in: query
        name: tag
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: deepObject
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/website'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: List
      tags:
      - website
    post:
      description: Create website
      operationId: website_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/website_create'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Create
      tags:
      - website
  /website/{websiteId}:
    delete:
      operationId: website_delete
      parameters:
      - description: ID of website
        explode: false
        in: path
        name: websiteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Delete
      tags:
      - website
    get:
      description: Returns a single website
      operationId: website_show
      parameters:
      - description: ID of website
        explode: false
        in: path
        name: websiteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Get
      tags:
      - website
    patch:
      description: Returns modified website
      operationId: website_update
      parameters:
      - description: ID of website
        explode: false
        in: path
        name: websiteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/website_update'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Update
      tags:
      - website
  /website/{websiteId}/actions/start:
    post:
      description: Action start
      operationId: website_action_start
      parameters:
      - description: ID of website
        explode: false
        in: path
        name: websiteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/start
      tags:
      - website
  /website/{websiteId}/actions/stop:
    post:
      description: Action stop
      operationId: website_action_stop
      parameters:
      - description: ID of website
        explode: false
        in: path
        name: websiteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/stop
      tags:
      - website
  /website/{websiteId}/credential/password:
    get:
      operationId: website_list_credentialpassword
      parameters:
      - description: ID of website
        explode: false
        in: path
        name: websiteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/credential.password'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/password
      tags:
      - website
    post:
      operationId: website_post_credentialpassword
      parameters:
      - description: ID of website
        explode: false
        in: path
        name: websiteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/website_post_credentialpassword'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.password'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/password
      tags:
      - website
  /website/{websiteId}/credential/password/{id}:
    delete:
      operationId: website_delete_credentialpassword_id
      parameters:
      - description: ID of website
        explode: false
        in: path
        name: websiteId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/password/:id
      tags:
      - website
    get:
      operationId: website_get_credentialpassword_id
      parameters:
      - description: ID of website
        explode: false
        in: path
        name: websiteId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.password'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/password/:id
      tags:
      - website
    patch:
      operationId: website_patch_credentialpassword_id
      parameters:
      - description: ID of website
        explode: false
        in: path
        name: websiteId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/website_patch_credentialpassword_id'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.password'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/password/:id
      tags:
      - website
  /website/{websiteId}/credential/certificate:
    get:
      operationId: website_list_credentialcertificate
      parameters:
      - description: ID of website
        explode: false
        in: path
        name: websiteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/credential.certificate'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/certificate
      tags:
      - website
    post:
      operationId: website_post_credentialcertificate
      parameters:
      - description: ID of website
        explode: false
        in: path
        name: websiteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/website_post_credentialcertificate'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.certificate'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/certificate
      tags:
      - website
  /website/{websiteId}/credential/certificate/{id}:
    delete:
      operationId: website_delete_credentialcertificate_id
      parameters:
      - description: ID of website
        explode: false
        in: path
        name: websiteId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.certificate'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/certificate/:id
      tags:
      - website
    get:
      operationId: website_get_credentialcertificate_id
      parameters:
      - description: ID of website
        explode: false
        in: path
        name: websiteId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.certificate'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/certificate/:id
      tags:
      - website
    patch:
      operationId: website_patch_credentialcertificate_id
      parameters:
      - description: ID of website
        explode: false
        in: path
        name: websiteId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/website_patch_credentialcertificate_id'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.certificate'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/certificate/:id
      tags:
      - website
  /website/{websiteId}/accessrights:
    get:
      operationId: website_list_accessrights
      parameters:
      - description: ID of website
        explode: false
        in: path
        name: websiteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/accessrightsProject'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - website
    post:
      operationId: website_post_accessrights
      parameters:
      - description: ID of website
        explode: false
        in: path
        name: websiteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/website_post_accessrights'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - website
  /website/{websiteId}/accessrights/{identity}:
    delete:
      operationId: website_delete_accessrights_identity
      parameters:
      - description: ID of website
        explode: false
        in: path
        name: websiteId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights/:identity
      tags:
      - website
  /website/{websiteId}/services:
    get:
      operationId: website_list_services
      parameters:
      - description: ID of website
        explode: false
        in: path
        name: websiteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/website.services'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services
      tags:
      - website
  /website/{websiteId}/services/{serviceId}:
    get:
      operationId: website_get_services_serviceId
      parameters:
      - description: ID of website
        explode: false
        in: path
        name: websiteId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website.services'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services/:serviceId
      tags:
      - website
  /website/{websiteId}/tag:
    get:
      operationId: website_get_tag
      parameters:
      - description: ID of website
        explode: false
        in: path
        name: websiteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - website
    patch:
      operationId: website_patch_tag
      parameters:
      - description: ID of website
        explode: false
        in: path
        name: websiteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/website_patch_tag'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - website
  /website/{websiteId}/tag/{key}:
    delete:
      operationId: website_delete_tag_key
      parameters:
      - description: ID of website
        explode: false
        in: path
        name: websiteId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/website.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag/:key
      tags:
      - website
  /website/{websiteId}/queue:
    get:
      operationId: website_list_queue
      parameters:
      - description: ID of website
        explode: false
        in: path
        name: websiteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /queue
      tags:
      - website
  /agent:
    get:
      description: List agent
      operationId: agent_list
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag
        explode: false
        in: query
        name: tag
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: deepObject
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/agent'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: List
      tags:
      - agent
    post:
      description: Create agent
      operationId: agent_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/agent_create'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agent'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Create
      tags:
      - agent
  /agent/{agentId}:
    delete:
      operationId: agent_delete
      parameters:
      - description: ID of agent
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Delete
      tags:
      - agent
    get:
      description: Returns a single agent
      operationId: agent_show
      parameters:
      - description: ID of agent
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agent'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Get
      tags:
      - agent
    patch:
      description: Returns modified agent
      operationId: agent_update
      parameters:
      - description: ID of agent
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/agent_update'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agent'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Update
      tags:
      - agent
  /agent/{agentId}/actions/start:
    post:
      description: Action start
      operationId: agent_action_start
      parameters:
      - description: ID of agent
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agent'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/start
      tags:
      - agent
  /agent/{agentId}/actions/suspend:
    post:
      description: Action suspend
      operationId: agent_action_suspend
      parameters:
      - description: ID of agent
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agent'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/suspend
      tags:
      - agent
  /agent/{agentId}/enabledServices:
    get:
      operationId: agent_list_enabledServices
      parameters:
      - description: ID of agent
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  format: ObjectId
                  type: string
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /enabledServices
      tags:
      - agent
    put:
      operationId: agent_put_enabledServices
      parameters:
      - description: ID of agent
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/agent_put_enabledServices'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  format: ObjectId
                  type: string
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /enabledServices
      tags:
      - agent
  /agent/{agentId}/inspect:
    get:
      operationId: agent_get_inspect
      parameters:
      - description: ID of agent
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema: {}
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /inspect
      tags:
      - agent
  /agent/{agentId}/resource:
    get:
      operationId: agent_list_resource
      parameters:
      - description: ID of agent
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/agentResource'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /resource
      tags:
      - agent
  /agent/{agentId}/resource/{resourceId}/actions/recreate:
    post:
      operationId: agent_post_resource_resourceIdactionsrecreate
      parameters:
      - description: ID of agent
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          type: string
        style: simple
      - description: resourceId
        explode: false
        in: path
        name: resourceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agentResource'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /resource/:resourceId/actions/recreate
      tags:
      - agent
  /agent/{agentId}/resource/{resourceId}/inspect:
    get:
      operationId: agent_get_resource_resourceIdinspect
      parameters:
      - description: ID of agent
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          type: string
        style: simple
      - description: resourceId
        explode: false
        in: path
        name: resourceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema: {}
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /resource/:resourceId/inspect
      tags:
      - agent
  /agent/{agentId}/resource/{resourceId}/queue:
    get:
      operationId: agent_list_resource_resourceIdqueue
      parameters:
      - description: ID of agent
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          type: string
        style: simple
      - description: resourceId
        explode: false
        in: path
        name: resourceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/agentResourceEvent'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /resource/:resourceId/queue
      tags:
      - agent
  /agent/{agentId}/credential/certificate:
    get:
      operationId: agent_list_credentialcertificate
      parameters:
      - description: ID of agent
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/credential.certificate'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/certificate
      tags:
      - agent
    post:
      operationId: agent_post_credentialcertificate
      parameters:
      - description: ID of agent
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/agent_post_credentialcertificate'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.certificate'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/certificate
      tags:
      - agent
  /agent/{agentId}/credential/certificate/{id}:
    delete:
      operationId: agent_delete_credentialcertificate_id
      parameters:
      - description: ID of agent
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.certificate'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/certificate/:id
      tags:
      - agent
    get:
      operationId: agent_get_credentialcertificate_id
      parameters:
      - description: ID of agent
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.certificate'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/certificate/:id
      tags:
      - agent
    patch:
      operationId: agent_patch_credentialcertificate_id
      parameters:
      - description: ID of agent
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          type: string
        style: simple
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/agent_patch_credentialcertificate_id'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credential.certificate'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /credential/certificate/:id
      tags:
      - agent
  /agent/{agentId}/accessrights:
    get:
      operationId: agent_list_accessrights
      parameters:
      - description: ID of agent
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/accessrightsProject'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - agent
    post:
      operationId: agent_post_accessrights
      parameters:
      - description: ID of agent
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/agent_post_accessrights'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agent'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agent'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - agent
  /agent/{agentId}/accessrights/{identity}:
    delete:
      operationId: agent_delete_accessrights_identity
      parameters:
      - description: ID of agent
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agent'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agent'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights/:identity
      tags:
      - agent
  /agent/{agentId}/services:
    get:
      operationId: agent_list_services
      parameters:
      - description: ID of agent
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/agent.services'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services
      tags:
      - agent
  /agent/{agentId}/services/{serviceId}:
    get:
      operationId: agent_get_services_serviceId
      parameters:
      - description: ID of agent
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agent.services'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services/:serviceId
      tags:
      - agent
  /agent/{agentId}/tag:
    get:
      operationId: agent_get_tag
      parameters:
      - description: ID of agent
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agent.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - agent
    patch:
      operationId: agent_patch_tag
      parameters:
      - description: ID of agent
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/agent_patch_tag'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agent.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - agent
  /agent/{agentId}/tag/{key}:
    delete:
      operationId: agent_delete_tag_key
      parameters:
      - description: ID of agent
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agent.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag/:key
      tags:
      - agent
  /agent/{agentId}/queue:
    get:
      operationId: agent_list_queue
      parameters:
      - description: ID of agent
        explode: false
        in: path
        name: agentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /queue
      tags:
      - agent
  /container:
    get:
      description: List container
      operationId: container_list
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag
        explode: false
        in: query
        name: tag
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: deepObject
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/container'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: List
      tags:
      - container
    post:
      description: Create container
      operationId: container_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/container_create'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Create
      tags:
      - container
  /container/{containerId}:
    delete:
      operationId: container_delete
      parameters:
      - description: ID of container
        explode: false
        in: path
        name: containerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Delete
      tags:
      - container
    get:
      description: Returns a single container
      operationId: container_show
      parameters:
      - description: ID of container
        explode: false
        in: path
        name: containerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Get
      tags:
      - container
    patch:
      description: Returns modified container
      operationId: container_update
      parameters:
      - description: ID of container
        explode: false
        in: path
        name: containerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/container_update'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Update
      tags:
      - container
  /container/{containerId}/actions/start:
    post:
      description: Action start
      operationId: container_action_start
      parameters:
      - description: ID of container
        explode: false
        in: path
        name: containerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/start
      tags:
      - container
  /container/{containerId}/actions/stop:
    post:
      description: Action stop
      operationId: container_action_stop
      parameters:
      - description: ID of container
        explode: false
        in: path
        name: containerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/stop
      tags:
      - container
  /container/{containerId}/actions/restart:
    post:
      description: Action restart
      operationId: container_action_restart
      parameters:
      - description: ID of container
        explode: false
        in: path
        name: containerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/restart
      tags:
      - container
  /container/{containerId}/process:
    get:
      operationId: container_list_process
      parameters:
      - description: ID of container
        explode: false
        in: path
        name: containerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/container.process'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /process
      tags:
      - container
  /container/{containerId}/accessrights:
    get:
      operationId: container_list_accessrights
      parameters:
      - description: ID of container
        explode: false
        in: path
        name: containerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/accessrightsProject'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - container
    post:
      operationId: container_post_accessrights
      parameters:
      - description: ID of container
        explode: false
        in: path
        name: containerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/container_post_accessrights'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - container
  /container/{containerId}/accessrights/{identity}:
    delete:
      operationId: container_delete_accessrights_identity
      parameters:
      - description: ID of container
        explode: false
        in: path
        name: containerId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights/:identity
      tags:
      - container
  /container/{containerId}/services:
    get:
      operationId: container_list_services
      parameters:
      - description: ID of container
        explode: false
        in: path
        name: containerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/container.services'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services
      tags:
      - container
  /container/{containerId}/services/{serviceId}:
    get:
      operationId: container_get_services_serviceId
      parameters:
      - description: ID of container
        explode: false
        in: path
        name: containerId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container.services'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services/:serviceId
      tags:
      - container
  /container/{containerId}/tag:
    get:
      operationId: container_get_tag
      parameters:
      - description: ID of container
        explode: false
        in: path
        name: containerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - container
    patch:
      operationId: container_patch_tag
      parameters:
      - description: ID of container
        explode: false
        in: path
        name: containerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/container_patch_tag'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - container
  /container/{containerId}/tag/{key}:
    delete:
      operationId: container_delete_tag_key
      parameters:
      - description: ID of container
        explode: false
        in: path
        name: containerId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag/:key
      tags:
      - container
  /container/{containerId}/queue:
    get:
      operationId: container_list_queue
      parameters:
      - description: ID of container
        explode: false
        in: path
        name: containerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /queue
      tags:
      - container
  /volume:
    get:
      description: List volume
      operationId: volume_list
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag
        explode: false
        in: query
        name: tag
        required: false
        schema:
          additionalProperties:
            type: string
          type: object
        style: deepObject
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/volume'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: List
      tags:
      - volume
    post:
      description: Create volume
      operationId: volume_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/volume_create'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/volume'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Create
      tags:
      - volume
  /volume/{volumeId}:
    delete:
      operationId: volume_delete
      parameters:
      - description: ID of volume
        explode: false
        in: path
        name: volumeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Delete
      tags:
      - volume
    get:
      description: Returns a single volume
      operationId: volume_show
      parameters:
      - description: ID of volume
        explode: false
        in: path
        name: volumeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/volume'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Get
      tags:
      - volume
    patch:
      description: Returns modified volume
      operationId: volume_update
      parameters:
      - description: ID of volume
        explode: false
        in: path
        name: volumeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/volume_update'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/volume'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Update
      tags:
      - volume
  /volume/{volumeId}/accessrights:
    get:
      operationId: volume_list_accessrights
      parameters:
      - description: ID of volume
        explode: false
        in: path
        name: volumeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/accessrightsProject'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - volume
    post:
      operationId: volume_post_accessrights
      parameters:
      - description: ID of volume
        explode: false
        in: path
        name: volumeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/volume_post_accessrights'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/volume'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/volume'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - volume
  /volume/{volumeId}/accessrights/{identity}:
    delete:
      operationId: volume_delete_accessrights_identity
      parameters:
      - description: ID of volume
        explode: false
        in: path
        name: volumeId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/volume'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/volume'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights/:identity
      tags:
      - volume
  /volume/{volumeId}/services:
    get:
      operationId: volume_list_services
      parameters:
      - description: ID of volume
        explode: false
        in: path
        name: volumeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/volume.services'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services
      tags:
      - volume
  /volume/{volumeId}/services/{serviceId}:
    get:
      operationId: volume_get_services_serviceId
      parameters:
      - description: ID of volume
        explode: false
        in: path
        name: volumeId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/volume.services'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services/:serviceId
      tags:
      - volume
  /volume/{volumeId}/tag:
    get:
      operationId: volume_get_tag
      parameters:
      - description: ID of volume
        explode: false
        in: path
        name: volumeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/volume.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - volume
    patch:
      operationId: volume_patch_tag
      parameters:
      - description: ID of volume
        explode: false
        in: path
        name: volumeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/volume_patch_tag'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/volume.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - volume
  /volume/{volumeId}/tag/{key}:
    delete:
      operationId: volume_delete_tag_key
      parameters:
      - description: ID of volume
        explode: false
        in: path
        name: volumeId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/volume.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag/:key
      tags:
      - volume
  /volume/{volumeId}/queue:
    get:
      operationId: volume_list_queue
      parameters:
      - description: ID of volume
        explode: false
        in: path
        name: volumeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /queue
      tags:
      - volume
  /replica:
    get:
      description: List replica
      operationId: replica_list
      parameters:
      - description: Filter by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/replica'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: List
      tags:
      - replica
    post:
      description: Create replica
      operationId: replica_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replica_create'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replica'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Create
      tags:
      - replica
  /replica/{replicaId}:
    delete:
      operationId: replica_delete
      parameters:
      - description: ID of replica
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          type: string
        style: simple
      responses:
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Delete
      tags:
      - replica
    get:
      description: Returns a single replica
      operationId: replica_show
      parameters:
      - description: ID of replica
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replica'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: Get
      tags:
      - replica
  /replica/{replicaId}/actions/image:
    post:
      description: Action image
      operationId: replica_action_image
      parameters:
      - description: ID of replica
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replica_action_image'
        required: true
      responses:
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replica'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /actions/image
      tags:
      - replica
  /replica/{replicaId}/accessrights:
    get:
      operationId: replica_list_accessrights
      parameters:
      - description: ID of replica
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/accessrightsProject'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - replica
    post:
      operationId: replica_post_accessrights
      parameters:
      - description: ID of replica
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replica_post_accessrights'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replica'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replica'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights
      tags:
      - replica
  /replica/{replicaId}/accessrights/{identity}:
    delete:
      operationId: replica_delete_accessrights_identity
      parameters:
      - description: ID of replica
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          type: string
        style: simple
      - description: identity
        explode: false
        in: path
        name: identity
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replica'
          description: successful operation
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replica'
          description: operation queued
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /accessrights/:identity
      tags:
      - replica
  /replica/{replicaId}/services:
    get:
      operationId: replica_list_services
      parameters:
      - description: ID of replica
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/replica.services'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services
      tags:
      - replica
  /replica/{replicaId}/services/{serviceId}:
    get:
      operationId: replica_get_services_serviceId
      parameters:
      - description: ID of replica
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          type: string
        style: simple
      - description: serviceId
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replica.services'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /services/:serviceId
      tags:
      - replica
  /replica/{replicaId}/tag:
    get:
      operationId: replica_get_tag
      parameters:
      - description: ID of replica
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replica.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - replica
    patch:
      operationId: replica_patch_tag
      parameters:
      - description: ID of replica
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replica_patch_tag'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replica.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag
      tags:
      - replica
  /replica/{replicaId}/tag/{key}:
    delete:
      operationId: replica_delete_tag_key
      parameters:
      - description: ID of replica
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          type: string
        style: simple
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replica.tag'
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /tag/:key
      tags:
      - replica
  /replica/{replicaId}/queue:
    get:
      operationId: replica_list_queue
      parameters:
      - description: ID of replica
        explode: false
        in: path
        name: replicaId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad Request
        401:
          description: Access token is missing or invalid
      summary: /queue
      tags:
      - replica
components:
  requestBodies: {}
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
    BadRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_400'
      description: Bad Request
  schemas:
    event:
      example:
        stage: stage
        createdBy: createdBy
        resource:
          id: id
          type: type
        queued: 2000-01-23T04:56:07.000+00:00
        name: name
        _id: _id
        state: pending
      properties:
        _id:
          type: string
        name:
          type: string
        createdBy:
          type: string
        queued:
          format: date-time
          type: string
        state:
          default: pending
          enum:
          - pending
          - processing
          - finished
          - error
          type: string
        stage:
          type: string
        resource:
          $ref: '#/components/schemas/event_resource'
      type: object
    credential.certificate:
      example:
        createdBy: createdBy
        name: name
        _id: _id
        type: type
        createdOn: createdOn
        value: value
      properties:
        createdBy:
          type: string
        createdOn:
          type: string
        name:
          type: string
        type:
          type: string
        _id:
          type: string
        value:
          type: string
      type: object
    credential.password:
      example:
        createdBy: createdBy
        name: name
        _id: _id
        type: type
        createdOn: createdOn
        value: value
      properties:
        createdBy:
          type: string
        createdOn:
          type: string
        name:
          type: string
        type:
          type: string
        _id:
          type: string
        value:
          type: string
      type: object
    hdd:
      example:
        disk:
          size: 1.4658129805029452
          name: name
          processing: true
          _id: _id
          type: type
          persistent: true
        controllerType: controllerType
        controllerNumber: controllerNumber
        controllerLocation: 6.027456183070403
        _id: _id
        maximumIOPS: 0.8008281904610115
      properties:
        maximumIOPS:
          type: number
        controllerType:
          type: string
        controllerNumber:
          type: string
        controllerLocation:
          type: number
        disk:
          $ref: '#/components/schemas/hdd_disk'
        _id:
          type: string
      type: object
    payment:
      example:
        amount: 7.061401241503109
        flavour: flavour
        created: true
        channel: bank
        project: project
        services: services
        type: bonus
        createdOn: 2000-01-23T04:56:07.000+00:00
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        credits: 2.3021358869347655
        creditsFree: 5.637376656633329
        name: name
        processing: processing
        modifiedBy: modifiedBy
        _id: _id
        accessRights: accessRights
        state: state
        tag: '{}'
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          type: string
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          default: ""
          type: string
        createdBy:
          default: ""
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          type: string
        processing:
          type: string
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          type: string
        tag:
          default: {}
          type: object
        project:
          format: ObjectId
          type: string
        creditsFree:
          type: number
        credits:
          type: number
        channel:
          enum:
          - bank
          - dotpay
          - promo
          - paypal
          - ecard
          - przelewy24
          type: string
        amount:
          type: number
        type:
          enum:
          - bonus
          - refund
          - money
          type: string
      type: object
    accessrightsProject:
      type: string
    accessrightsUserRole:
      example:
        role: owner
        id: id
      properties:
        id:
          type: string
        role:
          enum:
          - owner
          - billing
          - user
          - support
          type: string
      type: object
    agentResource:
      example:
        name: name
        project: project
        _id: _id
        state: state
        createdOn: createdOn
      properties:
        _id:
          type: string
        name:
          type: string
        state:
          type: string
        createdOn:
          type: string
        project:
          type: string
      type: object
    agentResourceEvent:
      example:
        name: name
        project: project
        _id: _id
        state: state
        createdOn: createdOn
      properties:
        _id:
          type: string
        name:
          type: string
        state:
          type: string
        createdOn:
          type: string
        project:
          type: string
      type: object
    container.process:
      example:
        parent: parent
        name: name
        id: id
        user: user
      properties:
        id:
          type: string
        name:
          type: string
        user:
          type: string
        parent:
          type: string
      type: object
    project.limit:
      example:
        container: '{}'
        image: '{}'
        agent: '{}'
        website: '{}'
        iso: '{}'
        ip: '{}'
        network: '{}'
        netgw: '{}'
        volume: '{}'
        disk: '{}'
        firewall: '{}'
        vm: '{}'
        domain: '{}'
        reservation: '{}'
        logArchive: '{}'
        vault: '{}'
        snapshot: '{}'
      properties:
        vm:
          $ref: project.limit_vm
        disk:
          $ref: project.limit_disk
        iso:
          $ref: project.limit_iso
        network:
          $ref: project.limit_network
        image:
          $ref: project.limit_image
        ip:
          $ref: project.limit_image
        firewall:
          $ref: project.limit_image
        netgw:
          $ref: project.limit_image
        vault:
          $ref: project.limit_vault
        snapshot:
          $ref: project.limit_snapshot
        domain:
          $ref: project.limit_domain
        logArchive:
          $ref: project.limit_image
        reservation:
          $ref: project.limit_reservation
        container:
          $ref: project.limit_image
        volume:
          $ref: project.limit_volume
        agent:
          $ref: project.limit_agent
        website:
          $ref: project.limit_image
      type: object
    service:
      example:
        data: data
        resource: resource
        availableServices:
        - availableServices
        - availableServices
        name: name
        _id: _id
        type: type
        billing:
          period: period
          quantity: 5.637376656633329
          reservations:
            period: period
            resourcePrice:
              PLN: 0.8008281904610115
              EUR: 6.027456183070403
              GBP: 5.962133916683182
              USD: 1.4658129805029452
            price:
              PLN: 0.8008281904610115
              EUR: 6.027456183070403
              GBP: 5.962133916683182
              USD: 1.4658129805029452
            _id: _id
          price:
            PLN: 0.8008281904610115
            EUR: 6.027456183070403
            GBP: 5.962133916683182
            USD: 1.4658129805029452
          oneTime: true
      properties:
        _id:
          type: string
        resource:
          type: string
        type:
          type: string
        billing:
          $ref: '#/components/schemas/service_billing'
        data:
          type: string
        name:
          type: string
        availableServices:
          items:
            type: string
          type: array
      type: object
    user:
      example:
        lastLogin:
        - loggedOn: 2000-01-23T04:56:07.000+00:00
          loggedFrom: loggedFrom
        - loggedOn: 2000-01-23T04:56:07.000+00:00
          loggedFrom: loggedFrom
        networkAcl:
        - name: name
          _id: _id
          type: subnet
          value: value
        - name: name
          _id: _id
          type: subnet
          value: value
        verified: false
        createdOn: 2000-01-23T04:56:07.000+00:00
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        credential:
          password:
            createdBy: createdBy
            name: name
            _id: _id
            type: type
            createdOn: createdOn
            value: value
          certificate:
            createdBy: createdBy
            name: name
            _id: _id
            type: type
            createdOn: createdOn
            value: value
        phone: phone
        familyName: familyName
        name: name
        passwordReset:
          expiry: 2000-01-23T04:56:07.000+00:00
          createdOn: 2000-01-23T04:56:07.000+00:00
          hash: hash
        limit:
          organisation: '{}'
        _id: _id
        lang: en
      properties:
        _id:
          type: string
        name:
          default: ""
          type: string
        familyName:
          default: ""
          type: string
        createdOn:
          format: date-time
          type: string
        modifiedOn:
          format: date-time
          type: string
        passwordReset:
          $ref: '#/components/schemas/user_passwordReset'
        verified:
          default: false
          type: boolean
        lang:
          default: en
          enum:
          - en
          - pl
          type: string
        phone:
          default: ""
          type: string
        lastLogin:
          items:
            $ref: '#/components/schemas/user_lastLogin'
          type: array
        limit:
          $ref: '#/components/schemas/user_limit'
        credential:
          $ref: '#/components/schemas/user_credential'
        networkAcl:
          items:
            $ref: '#/components/schemas/user_networkAcl'
          type: array
      type: object
    user.tag:
      default: {}
      type: object
    user_post_credentialpassword:
      properties:
        name:
          type: string
        type:
          type: string
        value:
          type: string
        token:
          type: string
      required:
      - name
      - type
      - value
      type: object
    user_patch_credentialpassword_id:
      properties:
        name:
          type: string
      type: object
    user_post_credentialcertificate:
      properties:
        name:
          type: string
        type:
          type: string
        value:
          type: string
      type: object
    user_patch_credentialcertificate_id:
      properties:
        name:
          type: string
      type: object
    user_patch_tag:
      additionalProperties:
        type: string
      type: object
    project:
      example:
        networkAcl:
        - name: name
          _id: _id
          type: subnet
          value: value
        - name: name
          _id: _id
          type: subnet
          value: value
        payments:
        - amount: 7.061401241503109
          flavour: flavour
          created: true
          channel: bank
          project: project
          services: services
          type: bonus
          createdOn: 2000-01-23T04:56:07.000+00:00
          modifiedOn: 2000-01-23T04:56:07.000+00:00
          createdBy: createdBy
          credits: 2.3021358869347655
          creditsFree: 5.637376656633329
          name: name
          processing: processing
          modifiedBy: modifiedBy
          _id: _id
          accessRights: accessRights
          state: state
          tag: '{}'
          queue:
          - stage: stage
            createdBy: createdBy
            resource:
              id: id
              type: type
            queued: 2000-01-23T04:56:07.000+00:00
            name: name
            _id: _id
            state: pending
          - stage: stage
            createdBy: createdBy
            resource:
              id: id
              type: type
            queued: 2000-01-23T04:56:07.000+00:00
            name: name
            _id: _id
            state: pending
        - amount: 7.061401241503109
          flavour: flavour
          created: true
          channel: bank
          project: project
          services: services
          type: bonus
          createdOn: 2000-01-23T04:56:07.000+00:00
          modifiedOn: 2000-01-23T04:56:07.000+00:00
          createdBy: createdBy
          credits: 2.3021358869347655
          creditsFree: 5.637376656633329
          name: name
          processing: processing
          modifiedBy: modifiedBy
          _id: _id
          accessRights: accessRights
          state: state
          tag: '{}'
          queue:
          - stage: stage
            createdBy: createdBy
            resource:
              id: id
              type: type
            queued: 2000-01-23T04:56:07.000+00:00
            name: name
            _id: _id
            state: pending
          - stage: stage
            createdBy: createdBy
            resource:
              id: id
              type: type
            queued: 2000-01-23T04:56:07.000+00:00
            name: name
            _id: _id
            state: pending
        roles:
        - access:
          - path: path
            method: ALL
          - path: path
            method: ALL
          name: name
        - access:
          - path: path
            method: ALL
          - path: path
            method: ALL
          name: name
        project: project
        organisation: organisation
        threshold:
          credits:
            levels:
            - 9.301444243932576
            - 9.301444243932576
        createdOn: 2000-01-23T04:56:07.000+00:00
        billing:
          creditsBonus: 1.4658129805029452
          credits: 6.027456183070403
          creditLimit: 5.962133916683182
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        invoices:
        - summary: summary
          project: project
          organisation: organisation
          _id: _id
          duplicate:
            _id: _id
            createdOn: createdOn
          invoiceNo: invoiceNo
          issueDate: issueDate
        - summary: summary
          project: project
          organisation: organisation
          _id: _id
          duplicate:
            _id: _id
            createdOn: createdOn
          invoiceNo: invoiceNo
          issueDate: issueDate
        limit:
          container: '{}'
          image: '{}'
          agent: '{}'
          website: '{}'
          iso: '{}'
          ip: '{}'
          network: '{}'
          netgw: '{}'
          volume: '{}'
          disk: '{}'
          firewall: '{}'
          vm: '{}'
          domain: '{}'
          reservation: '{}'
          logArchive: '{}'
          vault: '{}'
          snapshot: '{}'
        modifiedBy: modifiedBy
        state: Active
        tag: '{}'
        bankAccount: bankAccount
        flavour: flavour
        created: true
        verified: verified
        active: true
        services:
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        transfer:
          organisation: organisation
        createdBy: createdBy
        compliance:
          logArchive: logArchive
        name: name
        processing: true
        _id: _id
        accessRights:
        - role: owner
          id: id
        - role: owner
          id: id
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          default: ""
          type: string
        createdBy:
          default: ""
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            $ref: '#/components/schemas/project_accessRights'
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Active
          - Inactive
          - Limited
          type: string
        tag:
          default: {}
          type: object
        project:
          format: ObjectId
          type: string
        bankAccount:
          type: string
        organisation:
          format: ObjectId
          type: string
        billing:
          $ref: '#/components/schemas/project_billing'
        invoices:
          items:
            $ref: '#/components/schemas/project_invoices'
          type: array
        payments:
          items:
            $ref: '#/components/schemas/payment'
          type: array
        verified:
          type: string
        active:
          default: true
          type: boolean
        limit:
          $ref: '#/components/schemas/project_limit'
        threshold:
          $ref: '#/components/schemas/project_threshold'
        roles:
          items:
            $ref: '#/components/schemas/project_roles'
          type: array
        networkAcl:
          items:
            $ref: '#/components/schemas/user_networkAcl'
          type: array
        compliance:
          $ref: '#/components/schemas/project_compliance'
        transfer:
          $ref: '#/components/schemas/project_transfer'
      type: object
    project_create:
      properties:
        name:
          type: string
        accessRights:
          items:
            $ref: '#/components/schemas/project_create_accessRights'
          type: array
        organisation:
          format: ObjectId
          type: string
        tag:
          type: object
      required:
      - name
      - organisation
      type: object
    project_update:
      properties:
        name:
          type: string
      type: object
    project.services:
      example:
        quantity: 0.8008281904610115
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    project.tag:
      default: {}
      type: object
    project_post_accessrights:
      properties:
        id:
          type: string
        role:
          type: string
      required:
      - id
      - role
      type: object
    project_post_credentialStorecertificate:
      properties:
        name:
          type: string
        type:
          type: string
        value:
          type: string
      type: object
    project_patch_credentialStorecertificate_id:
      properties:
        name:
          type: string
      type: object
    project_patch_tag:
      additionalProperties:
        type: string
      type: object
    organisation:
      example:
        bankAccount: bankAccount
        flavour: flavour
        created: true
        roles:
        - access:
          - path: path
            method: ALL
          - path: path
            method: ALL
          name: name
        - access:
          - path: path
            method: ALL
          - path: path
            method: ALL
          name: name
        verified: 0.8008281904610115
        project: project
        services: services
        createdOn: 2000-01-23T04:56:07.000+00:00
        billing:
          address:
            zipcode: zipcode
            country: country
            city: city
            street: street
          nip: nip
          currency: currency
          company: company
          email: email
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        transfer:
          name: name
          _id: _id
        createdBy: createdBy
        name: name
        limit:
          organisation:
            project: '{}'
          project:
            container: '{}'
            image: '{}'
            agent: '{}'
            website: '{}'
            iso: '{}'
            ip: '{}'
            network: '{}'
            netgw: '{}'
            volume: '{}'
            disk: '{}'
            firewall: '{}'
            vm: '{}'
            domain: '{}'
            reservation: '{}'
            logArchive: '{}'
            vault: '{}'
            snapshot: '{}'
        processing: true
        modifiedBy: modifiedBy
        _id: _id
        accessRights:
        - role: owner
          id: id
        - role: owner
          id: id
        state: Active
        tag: '{}'
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          type: string
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          default: ""
          type: string
        createdBy:
          default: ""
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            $ref: '#/components/schemas/project_accessRights'
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Active
          - Inactive
          - Limited
          type: string
        tag:
          default: {}
          type: object
        project:
          type: string
        billing:
          $ref: '#/components/schemas/organisation_billing'
        verified:
          default: 0
          type: number
        limit:
          $ref: '#/components/schemas/organisation_limit'
        roles:
          items:
            $ref: '#/components/schemas/project_roles'
          type: array
        transfer:
          $ref: '#/components/schemas/organisation_transfer'
        bankAccount:
          type: string
      type: object
    organisation_create:
      properties:
        name:
          type: string
        service:
          default: 5c9cc1c3255c16c3e899a4e8
          format: ObjectId
          type: string
        billing:
          $ref: '#/components/schemas/organisation_create_billing'
        accessRights:
          items:
            $ref: '#/components/schemas/organisation_create_accessRights'
          type: array
        tag:
          type: object
      type: object
    organisation_update:
      properties:
        name:
          type: string
        billing:
          $ref: '#/components/schemas/organisation_update_billing'
      type: object
    organisation_action_transfer_accept:
      properties:
        payment:
          type: string
        project:
          type: string
      required:
      - payment
      - project
      type: object
    organisation_action_payment_assign:
      properties:
        payment:
          type: string
        project:
          type: string
      required:
      - payment
      - project
      type: object
    organisation.tag:
      default: {}
      type: object
    organisation_post_accessrights:
      properties:
        id:
          type: string
        role:
          type: string
      required:
      - id
      - role
      type: object
    organisation_patch_tag:
      additionalProperties:
        type: string
      type: object
    firewall:
      example:
        flavour: flavour
        created: true
        project: project
        services:
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        createdOn: 2000-01-23T04:56:07.000+00:00
        network: network
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        name: name
        processing: true
        modifiedBy: modifiedBy
        _id: _id
        accessRights:
        - accessRights
        - accessRights
        state: Attached
        tag: '{}'
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          default: ""
          type: string
        createdBy:
          default: ""
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            type: string
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Attached
          - Detached
          - Unknown
          type: string
        tag:
          default: {}
          type: object
        project:
          format: ObjectId
          type: string
        network:
          format: ObjectId
          type: string
      type: object
    firewall_create:
      properties:
        name:
          type: string
        tag:
          type: object
        service:
          default: 5bacaf7202deee0c100eda3b
          format: ObjectId
          type: string
      required:
      - name
      type: object
    firewall_update:
      properties:
        name:
          type: string
      type: object
    firewall_action_attach:
      properties:
        network:
          format: ObjectId
          type: string
      required:
      - network
      type: object
    firewall_action_transfer:
      properties:
        project:
          format: ObjectId
          type: string
      required:
      - project
      type: object
    firewall.services:
      example:
        quantity: 0.8008281904610115
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    firewall.tag:
      default: {}
      type: object
    firewall_post_ingress:
      properties:
        name:
          type: string
        action:
          type: string
        priority:
          type: number
        filter:
          items:
            type: string
          type: array
        external:
          items:
            type: string
          type: array
        internal:
          items:
            type: string
          type: array
      type: object
    firewall_post_egress:
      properties:
        name:
          type: string
        action:
          type: string
        priority:
          type: number
        filter:
          items:
            type: string
          type: array
        external:
          items:
            type: string
          type: array
        internal:
          items:
            type: string
          type: array
      type: object
    firewall_post_accessrights:
      properties:
        identity:
          type: string
      type: object
    firewall_patch_tag:
      additionalProperties:
        type: string
      type: object
    network:
      example:
        broadcast: broadcast
        address: address
        flavour: flavour
        created: true
        dns:
          nameservers:
          - nameservers
          - nameservers
        project: project
        services:
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        type: public
        createdOn: 2000-01-23T04:56:07.000+00:00
        netgw: netgw
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        name: name
        processing: true
        modifiedBy: modifiedBy
        _id: _id
        accessRights:
        - accessRights
        - accessRights
        state: Online
        tag: '{}'
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        gateway: gateway
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          default: ""
          type: string
        createdBy:
          default: ""
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            type: string
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Online
          - Unknown
          type: string
        tag:
          default: {}
          type: object
        project:
          format: ObjectId
          type: string
        address:
          type: string
        broadcast:
          type: string
        gateway:
          type: string
        type:
          enum:
          - public
          - private
          type: string
        dns:
          $ref: '#/components/schemas/network_dns'
        netgw:
          format: ObjectId
          type: string
      type: object
    network_create:
      properties:
        name:
          type: string
        address:
          type: string
        gateway:
          type: string
        tag:
          type: object
      required:
      - name
      type: object
    network_update:
      properties:
        name:
          type: string
        gateway:
          type: string
      type: object
    network.services:
      example:
        quantity: 0.8008281904610115
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    network.tag:
      default: {}
      type: object
    network_post_ip:
      properties:
        address:
          type: string
        tag:
          type: object
      type: object
    network_post_accessrights:
      properties:
        identity:
          type: string
      type: object
    network_patch_tag:
      additionalProperties:
        type: string
      type: object
    netgw:
      example:
        flavour: flavour
        created: true
        project: project
        services:
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        createdOn: 2000-01-23T04:56:07.000+00:00
        network: network
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        name: name
        primaryIP: primaryIP
        processing: true
        modifiedBy: modifiedBy
        _id: _id
        state: Attached
        tag: '{}'
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          default: ""
          type: string
        createdBy:
          default: ""
          type: string
        createdOn:
          format: date-time
          type: string
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Attached
          - Detached
          - Unknown
          type: string
        tag:
          default: {}
          type: object
        project:
          format: ObjectId
          type: string
        primaryIP:
          type: string
        network:
          type: string
      type: object
    netgw_create:
      properties:
        name:
          type: string
        public:
          $ref: '#/components/schemas/netgw_create_public'
        tag:
          type: object
      type: object
    netgw_update:
      properties:
        name:
          type: string
      type: object
    netgw_action_attach:
      properties:
        private:
          $ref: '#/components/schemas/netgw_action_attach_private'
      type: object
    netgw.services:
      example:
        quantity: 0.8008281904610115
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    netgw.tag:
      default: {}
      type: object
    netgw_post_accessrights:
      properties:
        identity:
          type: string
      type: object
    netgw_patch_tag:
      additionalProperties:
        type: string
      type: object
    image:
      example:
        flavour: flavour
        disks:
        - attachedOn:
            controllerType: controllerType
            controllerNumber: 5.962133916683182
            controllerLocation: 1.4658129805029452
          disk:
            name: name
            _id: _id
          size: 0.8008281904610115
          fileSize: 6.027456183070403
          downloadUrl: downloadUrl
          type: type
        - attachedOn:
            controllerType: controllerType
            controllerNumber: 5.962133916683182
            controllerLocation: 1.4658129805029452
          disk:
            name: name
            _id: _id
          size: 0.8008281904610115
          fileSize: 6.027456183070403
          downloadUrl: downloadUrl
          type: type
        created: true
        project: project
        description: description
        services:
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        createdOn: 2000-01-23T04:56:07.000+00:00
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        fileSize: 5.637376656633329
        vm:
          flavour: flavour
          name: name
          id: id
        name: name
        processing: true
        modifiedBy: modifiedBy
        _id: _id
        accessRights:
        - accessRights
        - accessRights
        state: Online
        tag: '{}'
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          default: ""
          type: string
        createdBy:
          default: ""
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            type: string
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Online
          - Unknown
          type: string
        tag:
          default: {}
          type: object
        project:
          format: ObjectId
          type: string
        disks:
          items:
            $ref: '#/components/schemas/image_disks'
          type: array
        fileSize:
          type: number
        vm:
          $ref: '#/components/schemas/image_vm'
        description:
          type: string
      type: object
    image_create:
      properties:
        name:
          type: string
        vm:
          format: ObjectId
          type: string
        replica:
          format: ObjectId
          type: string
        service:
          default: 564639bc052c084e2f2e3266
          format: ObjectId
          type: string
        description:
          type: string
        tag:
          type: object
      required:
      - name
      type: object
    image_update:
      properties:
        name:
          type: string
        description:
          type: string
      type: object
    image_action_transfer:
      properties:
        project:
          format: ObjectId
          type: string
      required:
      - project
      type: object
    image.services:
      example:
        quantity: 0.8008281904610115
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    image.tag:
      default: {}
      type: object
    image_post_accessrights:
      properties:
        identity:
          type: string
      type: object
    image_patch_tag:
      additionalProperties:
        type: string
      type: object
    disk:
      example:
        metadata:
          source:
            filename: filename
            size: 6.027456183070403
        flavour: flavour
        created: true
        downloadUrl: downloadUrl
        project: project
        services:
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        type: archive
        createdOn: 2000-01-23T04:56:07.000+00:00
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        size: 0.8008281904610115
        createdBy: createdBy
        vm: vm
        name: name
        processing: true
        modifiedBy: modifiedBy
        _id: _id
        accessRights:
        - accessRights
        - accessRights
        state: Uploading
        tag: '{}'
        persistent: true
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          default: ""
          type: string
        createdBy:
          default: ""
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            type: string
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Uploading
          - Online
          - Attached
          - Detached
          - Unknown
          type: string
        tag:
          default: {}
          type: object
        project:
          format: ObjectId
          type: string
        type:
          enum:
          - archive
          - volume
          - ssd
          - hissd
          - ephemeral-hissd
          - replica
          type: string
        size:
          type: number
        vm:
          format: ObjectId
          type: string
        persistent:
          type: boolean
        downloadUrl:
          type: string
        metadata:
          $ref: '#/components/schemas/disk_metadata'
      type: object
    disk_create:
      properties:
        service:
          format: ObjectId
          type: string
        name:
          type: string
        size:
          type: number
        cloud:
          type: string
        metadata:
          $ref: '#/components/schemas/disk_metadata'
        tag:
          type: object
      required:
      - service
      type: object
    disk_update:
      properties:
        name:
          type: string
      type: object
    disk_action_resize:
      properties:
        size:
          type: number
      type: object
    disk_action_clone:
      properties:
        name:
          type: string
        service:
          format: ObjectId
          type: string
      required:
      - name
      - service
      type: object
    disk_action_transfer:
      properties:
        project:
          format: ObjectId
          type: string
      required:
      - project
      type: object
    disk.services:
      example:
        quantity: 0.8008281904610115
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    disk.tag:
      default: {}
      type: object
    disk_post_accessrights:
      properties:
        identity:
          type: string
      type: object
    disk_patch_tag:
      additionalProperties:
        type: string
      type: object
    iso:
      example:
        metadata:
          source:
            filename: filename
            size: 6.027456183070403
        flavour: flavour
        created: true
        project: project
        services:
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        createdOn: 2000-01-23T04:56:07.000+00:00
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        size: 0.8008281904610115
        createdBy: createdBy
        name: name
        processing: true
        modifiedBy: modifiedBy
        _id: _id
        accessRights:
        - accessRights
        - accessRights
        state: Uploading
        tag: '{}'
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          default: ""
          type: string
        createdBy:
          default: ""
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            type: string
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Uploading
          - Online
          - Unknown
          type: string
        tag:
          default: {}
          type: object
        project:
          format: ObjectId
          type: string
        size:
          type: number
        metadata:
          $ref: '#/components/schemas/disk_metadata'
      type: object
    iso_create:
      properties:
        name:
          type: string
        size:
          type: number
        source:
          type: string
        service:
          default: 588890c1453a323588a27734
          format: ObjectId
          type: string
        cloud:
          type: string
        metadata:
          $ref: '#/components/schemas/disk_metadata'
        tag:
          type: object
      required:
      - name
      type: object
    iso_update:
      properties:
        name:
          type: string
      type: object
    iso_action_transfer:
      properties:
        project:
          format: ObjectId
          type: string
      required:
      - project
      type: object
    iso.services:
      example:
        quantity: 0.8008281904610115
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    iso.tag:
      default: {}
      type: object
    iso_post_accessrights:
      properties:
        identity:
          type: string
      type: object
    iso_patch_tag:
      additionalProperties:
        type: string
      type: object
    vm:
      example:
        memory: 6.027456183070403
        flavour: flavour
        data:
          username: username
        fqdn: fqdn
        created: true
        project: project
        cpu: 0.8008281904610115
        services:
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        createdOn: 2000-01-23T04:56:07.000+00:00
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        name: name
        processing: true
        modifiedBy: modifiedBy
        _id: _id
        accessRights:
        - accessRights
        - accessRights
        state: Other
        tag: '{}'
        sourceImage:
          name: name
          _id: _id
        userMetadata: userMetadata
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          default: ""
          type: string
        createdBy:
          default: ""
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            type: string
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Other
          - Running
          - Off
          - Stopping
          - Saved
          - Paused
          - Starting
          - Reset
          - Saving
          - Pausing
          - Resuming
          - FastSaved
          - FastSaving
          - RunningCritical
          - OffCritical
          - StoppingCritical
          - SavedCritical
          - PausedCritical
          - StartingCritical
          - ResetCritical
          - SavingCritical
          - PausingCritical
          - ResumingCritical
          - FastSavedCritical
          - FastSavingCritical
          - Unknown
          type: string
        tag:
          default: {}
          type: object
        project:
          format: ObjectId
          type: string
        sourceImage:
          $ref: '#/components/schemas/vm_sourceImage'
        userMetadata:
          type: string
        cpu:
          type: number
        memory:
          type: number
        data:
          $ref: '#/components/schemas/vm_data'
        fqdn:
          type: string
      type: object
    vm_create:
      properties:
        name:
          type: string
        image:
          format: ObjectId
          type: string
        iso:
          format: ObjectId
          type: string
        service:
          format: ObjectId
          type: string
        username:
          type: string
        password:
          $ref: '#/components/schemas/vm_create_password'
        sshKeys:
          description: |-
            - user credential (by id or name)
            - project credential (by id or name)
            - raw openssh public key (starting with `ssh-rsa `)
          items:
            type: string
          type: array
        userMetadata:
          type: string
        disk:
          items:
            $ref: '#/components/schemas/vm_create_disk'
          type: array
        netadp:
          items:
            $ref: '#/components/schemas/vm_create_netadp'
          type: array
        boot:
          type: boolean
        cloud:
          type: string
        tag:
          type: object
      required:
      - service
      type: object
    vm_update:
      properties:
        userMetadata:
          type: string
        name:
          type: string
      type: object
    vm_delete:
      properties:
        removeDisks:
          items:
            format: ObjectId
            type: string
          type: array
      type: object
    vm_action_rename:
      properties:
        newname:
          type: string
      required:
      - newname
      type: object
    vm_action_password_reset:
      properties:
        userName:
          type: string
        modulus:
          type: string
        exponent:
          type: string
      required:
      - exponent
      - modulus
      - userName
      type: object
    vm_action_image:
      properties:
        service:
          default: 564639bc052c084e2f2e3266
          format: ObjectId
          type: string
        description:
          type: string
        name:
          type: string
      type: object
    vm_action_flavour:
      properties:
        service:
          format: ObjectId
          type: string
      required:
      - service
      type: object
    vm.services:
      example:
        quantity: 0.8008281904610115
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    vm.tag:
      default: {}
      type: object
    vm_post_hdd:
      properties:
        disk:
          format: ObjectId
          type: string
        controllerType:
          type: string
      required:
      - disk
      type: object
    vm_post_netadp:
      properties:
        service:
          format: ObjectId
          type: string
        network:
          format: ObjectId
          type: string
        ip:
          format: ObjectId
          type: string
        tag:
          type: object
        vlanIds:
          type: string
      type: object
    vm_post_accessrights:
      properties:
        identity:
          type: string
      type: object
    vm_patch_tag:
      additionalProperties:
        type: string
      type: object
    ip:
      example:
        address: address
        flavour: flavour
        fqdn: fqdn
        created: true
        project: project
        services:
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        createdOn: 2000-01-23T04:56:07.000+00:00
        network: network
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        ptrRecord: ptrRecord
        associated:
          ip: ip
          netadp: netadp
          fip: fip
        name: name
        processing: true
        modifiedBy: modifiedBy
        _id: _id
        accessRights:
        - accessRights
        - accessRights
        state: Associated
        tag: '{}'
        persistent: true
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          default: ""
          type: string
        createdBy:
          default: ""
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            type: string
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Associated
          - Allocated
          - Unallocated
          type: string
        tag:
          default: {}
          type: object
        project:
          format: ObjectId
          type: string
        address:
          type: string
        fqdn:
          type: string
        network:
          format: ObjectId
          type: string
        ptrRecord:
          type: string
        persistent:
          type: boolean
        associated:
          $ref: '#/components/schemas/ip_associated'
      type: object
    ip_create:
      properties:
        network:
          format: ObjectId
          type: string
        ptrRecord:
          type: string
        address:
          type: string
        tag:
          type: object
      type: object
    ip_update:
      properties:
        ptrRecord:
          type: string
      type: object
    ip_action_associate:
      properties:
        ip:
          format: ObjectId
          type: string
      required:
      - ip
      type: object
    ip_action_transfer:
      properties:
        project:
          format: ObjectId
          type: string
      required:
      - project
      type: object
    ip.services:
      example:
        quantity: 0.8008281904610115
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    ip.tag:
      default: {}
      type: object
    ip_post_accessrights:
      properties:
        identity:
          type: string
      type: object
    ip_patch_tag:
      additionalProperties:
        type: string
      type: object
    netadp:
      example:
        flavour: flavour
        fqdn: fqdn
        created: true
        ip:
        - address: address
          flavour: flavour
          fqdn: fqdn
          created: true
          project: project
          services:
          - quantity: 0.8008281904610115
            data: '{}'
            name: name
            type: type
            oneTime: true
            sourceService: sourceService
            billing: billing
          - quantity: 0.8008281904610115
            data: '{}'
            name: name
            type: type
            oneTime: true
            sourceService: sourceService
            billing: billing
          createdOn: 2000-01-23T04:56:07.000+00:00
          network: network
          modifiedOn: 2000-01-23T04:56:07.000+00:00
          createdBy: createdBy
          ptrRecord: ptrRecord
          associated:
            ip: ip
            netadp: netadp
            fip: fip
          name: name
          processing: true
          modifiedBy: modifiedBy
          _id: _id
          accessRights:
          - accessRights
          - accessRights
          state: Associated
          tag: '{}'
          persistent: true
          queue:
          - stage: stage
            createdBy: createdBy
            resource:
              id: id
              type: type
            queued: 2000-01-23T04:56:07.000+00:00
            name: name
            _id: _id
            state: pending
          - stage: stage
            createdBy: createdBy
            resource:
              id: id
              type: type
            queued: 2000-01-23T04:56:07.000+00:00
            name: name
            _id: _id
            state: pending
        - address: address
          flavour: flavour
          fqdn: fqdn
          created: true
          project: project
          services:
          - quantity: 0.8008281904610115
            data: '{}'
            name: name
            type: type
            oneTime: true
            sourceService: sourceService
            billing: billing
          - quantity: 0.8008281904610115
            data: '{}'
            name: name
            type: type
            oneTime: true
            sourceService: sourceService
            billing: billing
          createdOn: 2000-01-23T04:56:07.000+00:00
          network: network
          modifiedOn: 2000-01-23T04:56:07.000+00:00
          createdBy: createdBy
          ptrRecord: ptrRecord
          associated:
            ip: ip
            netadp: netadp
            fip: fip
          name: name
          processing: true
          modifiedBy: modifiedBy
          _id: _id
          accessRights:
          - accessRights
          - accessRights
          state: Associated
          tag: '{}'
          persistent: true
          queue:
          - stage: stage
            createdBy: createdBy
            resource:
              id: id
              type: type
            queued: 2000-01-23T04:56:07.000+00:00
            name: name
            _id: _id
            state: pending
          - stage: stage
            createdBy: createdBy
            resource:
              id: id
              type: type
            queued: 2000-01-23T04:56:07.000+00:00
            name: name
            _id: _id
            state: pending
        project: project
        services:
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        createdOn: 2000-01-23T04:56:07.000+00:00
        speed: 0.8008281904610115
        network:
          broadcast: broadcast
          address: address
          flavour: flavour
          created: true
          dns:
            nameservers:
            - nameservers
            - nameservers
          project: project
          services:
          - quantity: 0.8008281904610115
            data: '{}'
            name: name
            type: type
            oneTime: true
            sourceService: sourceService
            billing: billing
          - quantity: 0.8008281904610115
            data: '{}'
            name: name
            type: type
            oneTime: true
            sourceService: sourceService
            billing: billing
          type: public
          createdOn: 2000-01-23T04:56:07.000+00:00
          netgw: netgw
          modifiedOn: 2000-01-23T04:56:07.000+00:00
          createdBy: createdBy
          name: name
          processing: true
          modifiedBy: modifiedBy
          _id: _id
          accessRights:
          - accessRights
          - accessRights
          state: Online
          tag: '{}'
          queue:
          - stage: stage
            createdBy: createdBy
            resource:
              id: id
              type: type
            queued: 2000-01-23T04:56:07.000+00:00
            name: name
            _id: _id
            state: pending
          - stage: stage
            createdBy: createdBy
            resource:
              id: id
              type: type
            queued: 2000-01-23T04:56:07.000+00:00
            name: name
            _id: _id
            state: pending
          gateway: gateway
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        name: name
        processing: true
        modifiedBy: modifiedBy
        macaddress: macaddress
        assigned:
          resource: vm
          id: id
        _id: _id
        accessRights:
        - accessRights
        - accessRights
        state: Online
        tag: '{}'
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          default: ""
          type: string
        createdBy:
          default: ""
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            type: string
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Online
          - Deallocated
          - Unknown
          type: string
        tag:
          default: {}
          type: object
        project:
          format: ObjectId
          type: string
        macaddress:
          type: string
        speed:
          type: number
        fqdn:
          type: string
        network:
          $ref: '#/components/schemas/network'
        ip:
          items:
            $ref: '#/components/schemas/ip'
          type: array
        assigned:
          $ref: '#/components/schemas/netadp_assigned'
      type: object
    netadp.services:
      example:
        quantity: 0.8008281904610115
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    netadp.tag:
      default: {}
      type: object
    netadp_post_accessrights:
      properties:
        identity:
          type: string
      type: object
    netadp_patch_tag:
      additionalProperties:
        type: string
      type: object
    vault:
      example:
        sizeUsed: 6.027456183070403
        flavour: flavour
        fqdn: fqdn
        created: true
        project: project
        services:
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        createdOn: 2000-01-23T04:56:07.000+00:00
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        size: 0.8008281904610115
        createdBy: createdBy
        name: name
        processing: true
        modifiedBy: modifiedBy
        _id: _id
        accessRights:
        - accessRights
        - accessRights
        state: Online
        tag: '{}'
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          default: ""
          type: string
        createdBy:
          default: ""
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            type: string
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Online
          - Off
          - Unknown
          type: string
        tag:
          default: {}
          type: object
        project:
          format: ObjectId
          type: string
        size:
          type: number
        sizeUsed:
          type: number
        fqdn:
          type: string
      type: object
    vault_create:
      properties:
        name:
          type: string
        size:
          type: number
        service:
          default: 5a0332c4eb8f4ed95c206a12
          format: ObjectId
          type: string
        credential:
          $ref: '#/components/schemas/vault_create_credential'
        snapshot:
          format: ObjectId
          type: string
        tag:
          type: object
      required:
      - name
      - size
      type: object
    vault_update:
      properties:
        name:
          type: string
      type: object
    vault_delete:
      properties:
        removeAllSnapshots:
          type: boolean
      type: object
    vault_action_resize:
      properties:
        size:
          type: number
      type: object
    vault_action_snapshot:
      properties:
        name:
          type: string
        service:
          default: 5badbeb585f66b3d085727eb
          format: ObjectId
          type: string
      required:
      - name
      type: object
    vault.services:
      example:
        quantity: 0.8008281904610115
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    vault.tag:
      default: {}
      type: object
    vault_post_credentialpassword:
      properties:
        name:
          type: string
        type:
          type: string
        value:
          type: string
        token:
          type: string
      required:
      - name
      - type
      - value
      type: object
    vault_patch_credentialpassword_id:
      properties:
        name:
          type: string
      type: object
    vault_post_credentialcertificate:
      properties:
        name:
          type: string
        type:
          type: string
        value:
          type: string
      type: object
    vault_patch_credentialcertificate_id:
      properties:
        name:
          type: string
      type: object
    vault_post_accessrights:
      properties:
        identity:
          type: string
      type: object
    vault_patch_tag:
      additionalProperties:
        type: string
      type: object
    snapshot:
      example:
        sizeUsed: 0.8008281904610115
        flavour: flavour
        created: true
        project: project
        services:
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        createdOn: 2000-01-23T04:56:07.000+00:00
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        name: name
        processing: true
        modifiedBy: modifiedBy
        _id: _id
        accessRights:
        - accessRights
        - accessRights
        state: Online
        tag: '{}'
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        vault: vault
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          default: ""
          type: string
        createdBy:
          default: ""
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            type: string
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Online
          - Unknown
          type: string
        tag:
          default: {}
          type: object
        project:
          format: ObjectId
          type: string
        vault:
          format: ObjectId
          type: string
        sizeUsed:
          type: number
      type: object
    snapshot_create:
      properties:
        vault:
          format: ObjectId
          type: string
        service:
          default: 5badbeb585f66b3d085727eb
          format: ObjectId
          type: string
        name:
          type: string
        tag:
          type: object
      required:
      - name
      - vault
      type: object
    snapshot_update:
      properties:
        name:
          type: string
      type: object
    snapshot.services:
      example:
        quantity: 0.8008281904610115
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    snapshot.tag:
      default: {}
      type: object
    snapshot_post_accessrights:
      properties:
        identity:
          type: string
      type: object
    snapshot_patch_tag:
      additionalProperties:
        type: string
      type: object
    reservation:
      example:
        flavour: flavour
        resource: resource
        created: true
        project: project
        services:
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        createdOn: 2000-01-23T04:56:07.000+00:00
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        name: name
        processing: true
        modifiedBy: modifiedBy
        assigned: assigned
        _id: _id
        accessRights:
        - accessRights
        - accessRights
        state: Detached
        tag: '{}'
        sourceService: sourceService
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          default: ""
          type: string
        createdBy:
          default: ""
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            type: string
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Detached
          - Attached
          - Expired
          - Billing
          - Unknown
          type: string
        tag:
          default: {}
          type: object
        project:
          format: ObjectId
          type: string
        resource:
          type: string
        assigned:
          format: ObjectId
          type: string
        sourceService:
          format: ObjectId
          type: string
      type: object
    reservation_create:
      properties:
        name:
          type: string
        service:
          format: ObjectId
          type: string
        tag:
          type: object
      required:
      - name
      - service
      type: object
    reservation_update:
      properties:
        name:
          type: string
      type: object
    reservation_action_assign:
      properties:
        resource:
          format: ObjectId
          type: string
      type: object
    reservation.services:
      example:
        quantity: 0.8008281904610115
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    reservation.tag:
      default: {}
      type: object
    reservation_post_accessrights:
      properties:
        identity:
          type: string
      type: object
    reservation_patch_tag:
      additionalProperties:
        type: string
      type: object
    logArchive:
      example:
        sizeUsed: 0.8008281904610115
        flavour: flavour
        fqdn: fqdn
        created: true
        project: project
        services:
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        createdOn: 2000-01-23T04:56:07.000+00:00
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        name: name
        processing: true
        modifiedBy: modifiedBy
        _id: _id
        accessRights:
        - accessRights
        - accessRights
        state: Online
        tag: '{}'
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        retention: 6.027456183070403
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          default: ""
          type: string
        createdBy:
          default: ""
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            type: string
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Online
          - Unknown
          type: string
        tag:
          default: {}
          type: object
        project:
          format: ObjectId
          type: string
        sizeUsed:
          type: number
        retention:
          default: 30
          type: number
        fqdn:
          type: string
      type: object
    logArchive_create:
      properties:
        name:
          type: string
        service:
          default: 5b4e074d1d34e82848ce7499
          format: ObjectId
          type: string
        credential:
          $ref: '#/components/schemas/logArchive_create_credential'
        retention:
          type: number
        tag:
          type: object
      required:
      - name
      type: object
    logArchive_update:
      properties:
        name:
          type: string
      type: object
    logArchive_action_transfer:
      properties:
        project:
          format: ObjectId
          type: string
      required:
      - project
      type: object
    logArchive.services:
      example:
        quantity: 0.8008281904610115
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    logArchive.tag:
      default: {}
      type: object
    logArchive_post_credentialpassword:
      properties:
        name:
          type: string
        type:
          type: string
        value:
          type: string
        token:
          type: string
      required:
      - name
      - type
      - value
      type: object
    logArchive_patch_credentialpassword_id:
      properties:
        name:
          type: string
      type: object
    logArchive_post_accessrights:
      properties:
        identity:
          type: string
      type: object
    logArchive_patch_tag:
      additionalProperties:
        type: string
      type: object
    website:
      example:
        image: image
        flavour: flavour
        fqdn: fqdn
        created: true
        project: project
        services:
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        createdOn: 2000-01-23T04:56:07.000+00:00
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        domain:
        - domain
        - domain
        name: name
        processing: true
        modifiedBy: modifiedBy
        _id: _id
        accessRights:
        - accessRights
        - accessRights
        state: Running
        tag: '{}'
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          default: ""
          type: string
        createdBy:
          default: ""
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            type: string
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Running
          - Off
          - Unknown
          type: string
        tag:
          default: {}
          type: object
        project:
          format: ObjectId
          type: string
        image:
          type: string
        domain:
          items:
            type: string
          type: array
        fqdn:
          type: string
      type: object
    website_create:
      properties:
        name:
          type: string
        image:
          enum:
          - quay.io/hyperone/php-apache:7.2
          - quay.io/hyperone/php-apache:5.6
          type: string
        domain:
          items:
            type: string
          type: array
        service:
          format: ObjectId
          type: string
        credential:
          $ref: '#/components/schemas/vault_create_credential'
        tag:
          type: object
      required:
      - image
      - name
      - service
      type: object
    website_update:
      properties:
        name:
          type: string
      type: object
    website.services:
      example:
        quantity: 0.8008281904610115
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    website.tag:
      default: {}
      type: object
    website_post_credentialpassword:
      properties:
        name:
          type: string
        type:
          type: string
        value:
          type: string
        token:
          type: string
      required:
      - name
      - type
      - value
      type: object
    website_patch_credentialpassword_id:
      properties:
        name:
          type: string
      type: object
    website_post_credentialcertificate:
      properties:
        name:
          type: string
        type:
          type: string
        value:
          type: string
      type: object
    website_patch_credentialcertificate_id:
      properties:
        name:
          type: string
      type: object
    website_post_accessrights:
      properties:
        identity:
          type: string
      type: object
    website_patch_tag:
      additionalProperties:
        type: string
      type: object
    agent:
      example:
        flavour: flavour
        created: true
        project: project
        services:
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        type: type
        createdOn: 2000-01-23T04:56:07.000+00:00
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        name: name
        processing: true
        modifiedBy: modifiedBy
        _id: _id
        accessRights:
        - accessRights
        - accessRights
        state: Online
        tag: '{}'
        enabledServices:
        - enabledServices
        - enabledServices
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          default: ""
          type: string
        createdBy:
          default: ""
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            type: string
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Online
          - Unknown
          type: string
        tag:
          default: {}
          type: object
        project:
          format: ObjectId
          type: string
        enabledServices:
          items:
            format: ObjectId
            type: string
          type: array
        type:
          type: string
      type: object
    agent_create:
      properties:
        name:
          type: string
        service:
          format: ObjectId
          type: string
        credential:
          $ref: '#/components/schemas/agent_create_credential'
        tag:
          type: object
      required:
      - name
      - service
      type: object
    agent_update:
      properties:
        name:
          type: string
      type: object
    agent.services:
      example:
        quantity: 0.8008281904610115
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    agent.tag:
      default: {}
      type: object
    agent_put_enabledServices:
      items:
        format: ObjectId
        type: string
      type: array
    agent_post_credentialcertificate:
      properties:
        name:
          type: string
        type:
          type: string
        value:
          type: string
      type: object
    agent_patch_credentialcertificate_id:
      properties:
        name:
          type: string
      type: object
    agent_post_accessrights:
      properties:
        identity:
          type: string
      type: object
    agent_patch_tag:
      additionalProperties:
        type: string
      type: object
    container:
      example:
        image: image
        process:
          parent: parent
          name: name
          id: id
          user: user
        flavour: flavour
        fqdn: fqdn
        created: true
        volumes:
        - source: source
          sourcePath: sourcePath
          target: target
        - source: source
          sourcePath: sourcePath
          target: target
        project: project
        services:
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        env:
        - env
        - env
        createdOn: 2000-01-23T04:56:07.000+00:00
        expose:
        - protocol: protocol
          external: external
          internal: internal
        - protocol: protocol
          external: external
          internal: internal
        command: command
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        name: name
        processing: true
        modifiedBy: modifiedBy
        _id: _id
        accessRights:
        - accessRights
        - accessRights
        state: Running
        tag: '{}'
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          default: ""
          type: string
        createdBy:
          default: ""
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            type: string
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Running
          - Off
          - Unknown
          type: string
        tag:
          default: {}
          type: object
        project:
          format: ObjectId
          type: string
        image:
          type: string
        command:
          type: string
        volumes:
          items:
            $ref: '#/components/schemas/container_volumes'
          type: array
        expose:
          items:
            $ref: '#/components/schemas/container_expose'
          type: array
        env:
          items:
            type: string
          type: array
        fqdn:
          type: string
        process:
          $ref: '#/components/schemas/container_process'
      type: object
    container_create:
      properties:
        name:
          type: string
        image:
          type: string
        registry:
          $ref: '#/components/schemas/container_create_registry'
        service:
          format: ObjectId
          type: string
        expose:
          items:
            $ref: '#/components/schemas/container_create_expose'
          type: array
        env:
          items:
            type: string
          type: array
        command:
          type: string
        volumes:
          items:
            $ref: '#/components/schemas/container_create_volumes'
          type: array
        tag:
          type: object
      required:
      - image
      - name
      - service
      type: object
    container_update:
      properties:
        name:
          type: string
      type: object
    container.services:
      example:
        quantity: 0.8008281904610115
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    container.tag:
      default: {}
      type: object
    container_post_accessrights:
      properties:
        identity:
          type: string
      type: object
    container_patch_tag:
      additionalProperties:
        type: string
      type: object
    volume:
      example:
        flavour: flavour
        created: true
        project: project
        services:
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        createdOn: 2000-01-23T04:56:07.000+00:00
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        size: 0.8008281904610115
        createdBy: createdBy
        name: name
        processing: true
        modifiedBy: modifiedBy
        _id: _id
        accessRights:
        - accessRights
        - accessRights
        state: Online
        tag: '{}'
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          default: ""
          type: string
        createdBy:
          default: ""
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            type: string
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Online
          - Attached
          - Detached
          - Unknown
          type: string
        tag:
          default: {}
          type: object
        project:
          format: ObjectId
          type: string
        size:
          type: number
      type: object
    volume_create:
      properties:
        service:
          format: ObjectId
          type: string
        name:
          type: string
        size:
          type: number
        tag:
          type: object
      required:
      - name
      - service
      - size
      type: object
    volume_update:
      properties:
        name:
          type: string
      type: object
    volume.services:
      example:
        quantity: 0.8008281904610115
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    volume.tag:
      default: {}
      type: object
    volume_post_accessrights:
      properties:
        identity:
          type: string
      type: object
    volume_patch_tag:
      additionalProperties:
        type: string
      type: object
    replica:
      example:
        flavour: flavour
        created: true
        project: project
        services:
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        - quantity: 0.8008281904610115
          data: '{}'
          name: name
          type: type
          oneTime: true
          sourceService: sourceService
          billing: billing
        createdOn: 2000-01-23T04:56:07.000+00:00
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        name: name
        processing: true
        modifiedBy: modifiedBy
        _id: _id
        accessRights:
        - accessRights
        - accessRights
        state: Error
        tag: '{}'
        queue:
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
        - stage: stage
          createdBy: createdBy
          resource:
            id: id
            type: type
          queued: 2000-01-23T04:56:07.000+00:00
          name: name
          _id: _id
          state: pending
      properties:
        _id:
          format: ObjectId
          type: string
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/project_services'
          type: array
        flavour:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          default: ""
          type: string
        createdBy:
          default: ""
          type: string
        createdOn:
          format: date-time
          type: string
        accessRights:
          items:
            type: string
          type: array
        processing:
          type: boolean
        created:
          type: boolean
        queue:
          items:
            $ref: '#/components/schemas/event'
          type: array
        state:
          enum:
          - Error
          - FailOverWaitingCompletion
          - FailedOver
          - NotApplicable
          - ReadyForInitialReplication
          - Replicating
          - Resynchronizing
          - ResynchronizeSuspended
          - Suspended
          - SyncedReplicationComplete
          - WaitingForInitialReplication
          - WaitingForStartResynchronize
          - Unknown
          type: string
        tag:
          default: {}
          type: object
        project:
          format: ObjectId
          type: string
      type: object
    replica_create:
      properties:
        hostname:
          type: string
        secret:
          type: string
      required:
      - hostname
      - secret
      type: object
    replica_action_image:
      properties:
        service:
          default: 564639bc052c084e2f2e3266
          format: ObjectId
          type: string
        description:
          type: string
      type: object
    replica.services:
      example:
        quantity: 0.8008281904610115
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
      type: object
    replica.tag:
      default: {}
      type: object
    replica_post_accessrights:
      properties:
        identity:
          type: string
      type: object
    replica_patch_tag:
      additionalProperties:
        type: string
      type: object
    inline_response_400:
      properties:
        message:
          description: error description
          type: string
    inline_response_200:
      example:
        filter:
        - filter
        - filter
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        external:
        - external
        - external
        internal:
        - internal
        - internal
        createdBy: createdBy
        name: name
        description: description
        action: allow
        modifiedBy: modifiedBy
        priority: 0.8008281904610115
        createdOn: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          type: string
        description:
          type: string
        createdOn:
          format: date-time
          type: string
        createdBy:
          default: ""
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          default: ""
          type: string
        priority:
          type: number
        action:
          enum:
          - allow
          - deny
          type: string
        filter:
          items:
            type: string
          type: array
        external:
          items:
            type: string
          type: array
        internal:
          items:
            type: string
          type: array
      required:
      - action
      - priority
    event_resource:
      example:
        id: id
        type: type
      properties:
        id:
          format: ObjectId
          type: string
        type:
          type: string
      required:
      - id
      - type
    hdd_disk:
      example:
        size: 1.4658129805029452
        name: name
        processing: true
        _id: _id
        type: type
        persistent: true
      properties:
        _id:
          type: string
        name:
          type: string
        type:
          type: string
        size:
          type: number
        processing:
          type: boolean
        persistent:
          type: boolean
    project.limit_vm:
      properties:
        count:
          default: 3
          type: number
        memory:
          default: 10
          type: number
      required:
      - count
      - memory
    project.limit_disk:
      properties:
        count:
          default: 3
          type: number
        size:
          default: 2048
          type: number
      required:
      - count
      - size
    project.limit_iso:
      properties:
        count:
          default: 5
          type: number
      required:
      - count
    project.limit_network:
      properties:
        count:
          default: 3
          type: number
      required:
      - count
    project.limit_image:
      properties:
        count:
          default: 10
          type: number
      required:
      - count
    project.limit_vault:
      properties:
        count:
          default: 10
          type: number
        size:
          default: 1024
          type: number
      required:
      - count
      - size
    project.limit_snapshot:
      properties:
        count:
          default: 500
          type: number
      required:
      - count
    project.limit_domain:
      properties:
        count:
          default: 20
          type: number
        record:
          default: 1000
          type: number
      required:
      - count
      - record
    project.limit_reservation:
      properties:
        count:
          default: 50
          type: number
      required:
      - count
    project.limit_volume:
      properties:
        count:
          default: 10
          type: number
        size:
          default: 2048
          type: number
      required:
      - count
      - size
    project.limit_agent:
      properties:
        count:
          default: 2
          type: number
      required:
      - count
    service_billing_price:
      example:
        PLN: 0.8008281904610115
        EUR: 6.027456183070403
        GBP: 5.962133916683182
        USD: 1.4658129805029452
      properties:
        PLN:
          type: number
        EUR:
          type: number
        USD:
          type: number
        GBP:
          type: number
    service_billing_reservations:
      example:
        period: period
        resourcePrice:
          PLN: 0.8008281904610115
          EUR: 6.027456183070403
          GBP: 5.962133916683182
          USD: 1.4658129805029452
        price:
          PLN: 0.8008281904610115
          EUR: 6.027456183070403
          GBP: 5.962133916683182
          USD: 1.4658129805029452
        _id: _id
      properties:
        _id:
          type: string
        period:
          type: string
        price:
          $ref: '#/components/schemas/service_billing_price'
        resourcePrice:
          $ref: '#/components/schemas/service_billing_price'
    service_billing:
      example:
        period: period
        quantity: 5.637376656633329
        reservations:
          period: period
          resourcePrice:
            PLN: 0.8008281904610115
            EUR: 6.027456183070403
            GBP: 5.962133916683182
            USD: 1.4658129805029452
          price:
            PLN: 0.8008281904610115
            EUR: 6.027456183070403
            GBP: 5.962133916683182
            USD: 1.4658129805029452
          _id: _id
        price:
          PLN: 0.8008281904610115
          EUR: 6.027456183070403
          GBP: 5.962133916683182
          USD: 1.4658129805029452
        oneTime: true
      properties:
        price:
          $ref: '#/components/schemas/service_billing_price'
        period:
          type: string
        quantity:
          type: number
        oneTime:
          type: boolean
        reservations:
          $ref: '#/components/schemas/service_billing_reservations'
    user_passwordReset:
      example:
        expiry: 2000-01-23T04:56:07.000+00:00
        createdOn: 2000-01-23T04:56:07.000+00:00
        hash: hash
      properties:
        hash:
          type: string
        expiry:
          format: date-time
          type: string
        createdOn:
          format: date-time
          type: string
    user_lastLogin:
      example:
        loggedOn: 2000-01-23T04:56:07.000+00:00
        loggedFrom: loggedFrom
      properties:
        loggedOn:
          format: date-time
          type: string
        loggedFrom:
          type: string
    user_limit:
      example:
        organisation: '{}'
      properties:
        organisation:
          $ref: project.limit_network
    user_credential_password:
      example:
        createdBy: createdBy
        name: name
        _id: _id
        type: type
        createdOn: createdOn
        value: value
      properties:
        createdBy:
          type: string
        createdOn:
          type: string
        name:
          type: string
        type:
          type: string
        _id:
          type: string
        value:
          type: string
    user_credential:
      example:
        password:
          createdBy: createdBy
          name: name
          _id: _id
          type: type
          createdOn: createdOn
          value: value
        certificate:
          createdBy: createdBy
          name: name
          _id: _id
          type: type
          createdOn: createdOn
          value: value
      properties:
        password:
          $ref: '#/components/schemas/user_credential_password'
        certificate:
          $ref: '#/components/schemas/user_credential_password'
    user_networkAcl:
      example:
        name: name
        _id: _id
        type: subnet
        value: value
      properties:
        type:
          enum:
          - subnet
          - geo
          type: string
        value:
          type: string
        name:
          default: ""
          type: string
        _id:
          type: string
    project_services:
      example:
        quantity: 0.8008281904610115
        data: '{}'
        name: name
        type: type
        oneTime: true
        sourceService: sourceService
        billing: billing
      properties:
        type:
          type: string
        name:
          type: string
        oneTime:
          type: boolean
        billing:
          format: ObjectId
          type: string
        data:
          type: object
        sourceService:
          format: ObjectId
          type: string
        quantity:
          type: number
    project_accessRights:
      example:
        role: owner
        id: id
      properties:
        role:
          enum:
          - owner
          - billing
          - user
          - support
          type: string
        id:
          type: string
    project_billing:
      example:
        creditsBonus: 1.4658129805029452
        credits: 6.027456183070403
        creditLimit: 5.962133916683182
      properties:
        credits:
          type: number
        creditsBonus:
          type: number
        creditLimit:
          type: number
    project_duplicate:
      example:
        _id: _id
        createdOn: createdOn
      properties:
        createdOn:
          type: string
        _id:
          type: string
    project_invoices:
      example:
        summary: summary
        project: project
        organisation: organisation
        _id: _id
        duplicate:
          _id: _id
          createdOn: createdOn
        invoiceNo: invoiceNo
        issueDate: issueDate
      properties:
        _id:
          type: string
        invoiceNo:
          type: string
        issueDate:
          type: string
        summary:
          type: string
        project:
          type: string
        organisation:
          type: string
        duplicate:
          $ref: '#/components/schemas/project_duplicate'
    project_limit:
      example:
        container: '{}'
        image: '{}'
        agent: '{}'
        website: '{}'
        iso: '{}'
        ip: '{}'
        network: '{}'
        netgw: '{}'
        volume: '{}'
        disk: '{}'
        firewall: '{}'
        vm: '{}'
        domain: '{}'
        reservation: '{}'
        logArchive: '{}'
        vault: '{}'
        snapshot: '{}'
      properties:
        vm:
          $ref: project.limit_vm
        disk:
          $ref: project.limit_disk
        iso:
          $ref: project.limit_iso
        network:
          $ref: project.limit_network
        image:
          $ref: project.limit_image
        ip:
          $ref: project.limit_image
        firewall:
          $ref: project.limit_image
        netgw:
          $ref: project.limit_image
        vault:
          $ref: project.limit_vault
        snapshot:
          $ref: project.limit_snapshot
        domain:
          $ref: project.limit_domain
        logArchive:
          $ref: project.limit_image
        reservation:
          $ref: project.limit_reservation
        container:
          $ref: project.limit_image
        volume:
          $ref: project.limit_volume
        agent:
          $ref: project.limit_agent
        website:
          $ref: project.limit_image
    project_threshold_credits:
      example:
        levels:
        - 9.301444243932576
        - 9.301444243932576
      properties:
        levels:
          items:
            type: number
          type: array
    project_threshold:
      example:
        credits:
          levels:
          - 9.301444243932576
          - 9.301444243932576
      properties:
        credits:
          $ref: '#/components/schemas/project_threshold_credits'
    project_access:
      example:
        path: path
        method: ALL
      properties:
        path:
          type: string
        method:
          enum:
          - ALL
          - GET
          - POST
          - PATCH
          - DELETE
          type: string
      required:
      - method
      - path
    project_roles:
      example:
        access:
        - path: path
          method: ALL
        - path: path
          method: ALL
        name: name
      properties:
        access:
          items:
            $ref: '#/components/schemas/project_access'
          type: array
        name:
          type: string
      required:
      - name
    project_compliance:
      example:
        logArchive: logArchive
      properties:
        logArchive:
          format: ObjectId
          type: string
    project_transfer:
      example:
        organisation: organisation
      properties:
        organisation:
          format: ObjectId
          type: string
    project_create_accessRights:
      properties:
        id:
          type: string
        role:
          type: string
      required:
      - id
      - role
    organisation_billing_address:
      example:
        zipcode: zipcode
        country: country
        city: city
        street: street
      properties:
        street:
          type: string
        zipcode:
          type: string
        city:
          type: string
        country:
          type: string
      required:
      - city
      - country
      - street
      - zipcode
    organisation_billing:
      example:
        address:
          zipcode: zipcode
          country: country
          city: city
          street: street
        nip: nip
        currency: currency
        company: company
        email: email
      properties:
        currency:
          type: string
        company:
          type: string
        email:
          type: string
        address:
          $ref: '#/components/schemas/organisation_billing_address'
        nip:
          type: string
    organisation_limit_organisation:
      example:
        project: '{}'
      properties:
        project:
          $ref: project.limit_image
    organisation_limit:
      example:
        organisation:
          project: '{}'
        project:
          container: '{}'
          image: '{}'
          agent: '{}'
          website: '{}'
          iso: '{}'
          ip: '{}'
          network: '{}'
          netgw: '{}'
          volume: '{}'
          disk: '{}'
          firewall: '{}'
          vm: '{}'
          domain: '{}'
          reservation: '{}'
          logArchive: '{}'
          vault: '{}'
          snapshot: '{}'
      properties:
        organisation:
          $ref: '#/components/schemas/organisation_limit_organisation'
        project:
          $ref: '#/components/schemas/project_limit'
    organisation_transfer:
      example:
        name: name
        _id: _id
      properties:
        name:
          type: string
        _id:
          type: string
    organisation_create_billing_address:
      properties:
        country:
          type: string
        city:
          type: string
        zipcode:
          type: string
        street:
          type: string
    organisation_create_billing:
      properties:
        nip:
          type: string
        email:
          type: string
        company:
          type: string
        currency:
          type: string
        address:
          $ref: '#/components/schemas/organisation_create_billing_address'
    organisation_create_accessRights:
      properties:
        id:
          type: string
        role:
          type: string
    organisation_update_billing_address:
      properties:
        city:
          type: string
        zipcode:
          type: string
        street:
          type: string
    organisation_update_billing:
      properties:
        email:
          type: string
        company:
          type: string
        address:
          $ref: '#/components/schemas/organisation_update_billing_address'
    network_dns:
      example:
        nameservers:
        - nameservers
        - nameservers
      properties:
        nameservers:
          items:
            type: string
          type: array
    netgw_create_public:
      properties:
        ip:
          format: ObjectId
          type: string
      required:
      - ip
    netgw_action_attach_private:
      properties:
        network:
          format: ObjectId
          type: string
      required:
      - network
    image_attachedOn:
      example:
        controllerType: controllerType
        controllerNumber: 5.962133916683182
        controllerLocation: 1.4658129805029452
      properties:
        controllerLocation:
          type: number
        controllerNumber:
          type: number
        controllerType:
          type: string
      required:
      - controllerLocation
      - controllerNumber
      - controllerType
    image_disk:
      example:
        name: name
        _id: _id
      properties:
        _id:
          type: string
        name:
          type: string
    image_disks:
      example:
        attachedOn:
          controllerType: controllerType
          controllerNumber: 5.962133916683182
          controllerLocation: 1.4658129805029452
        disk:
          name: name
          _id: _id
        size: 0.8008281904610115
        fileSize: 6.027456183070403
        downloadUrl: downloadUrl
        type: type
      properties:
        type:
          type: string
        size:
          type: number
        fileSize:
          type: number
        attachedOn:
          $ref: '#/components/schemas/image_attachedOn'
        downloadUrl:
          type: string
        disk:
          $ref: '#/components/schemas/image_disk'
    image_vm:
      example:
        flavour: flavour
        name: name
        id: id
      properties:
        flavour:
          type: string
        name:
          type: string
        id:
          format: ObjectId
          type: string
    disk_metadata_source:
      example:
        filename: filename
        size: 6.027456183070403
      properties:
        filename:
          type: string
        size:
          type: number
    disk_metadata:
      example:
        source:
          filename: filename
          size: 6.027456183070403
      properties:
        source:
          $ref: '#/components/schemas/disk_metadata_source'
    vm_sourceImage:
      example:
        name: name
        _id: _id
      properties:
        name:
          type: string
        _id:
          format: ObjectId
          type: string
    vm_data:
      example:
        username: username
      properties:
        username:
          type: string
    vm_create_password:
      properties:
        type:
          enum:
          - plain
          - unix
          type: string
        value:
          type: string
    vm_create_disk:
      properties:
        id:
          format: ObjectId
          type: string
        size:
          type: number
        service:
          format: ObjectId
          type: string
        name:
          type: string
        cloud:
          type: string
    vm_create_netadp:
      properties:
        service:
          format: ObjectId
          type: string
        network:
          format: ObjectId
          type: string
        ip:
          items:
            format: ObjectId
            type: string
          type: array
    ip_associated:
      example:
        ip: ip
        netadp: netadp
        fip: fip
      properties:
        ip:
          type: string
        fip:
          type: string
        netadp:
          type: string
    netadp_assigned:
      example:
        resource: vm
        id: id
      properties:
        resource:
          enum:
          - vm
          - netgw
          - network
          - ip
          type: string
        id:
          format: ObjectId
          type: string
    vault_create_credential_password:
      properties:
        name:
          type: string
        type:
          type: string
        value:
          type: string
        token:
          type: string
      required:
      - name
      - type
      - value
    vault_create_credential_certificate:
      properties:
        name:
          type: string
        type:
          type: string
        value:
          type: string
      required:
      - name
      - type
      - value
    vault_create_credential:
      properties:
        password:
          items:
            $ref: '#/components/schemas/vault_create_credential_password'
          type: array
        certificate:
          items:
            $ref: '#/components/schemas/vault_create_credential_certificate'
          type: array
    logArchive_create_credential:
      properties:
        password:
          items:
            $ref: '#/components/schemas/vault_create_credential_password'
          type: array
    agent_create_credential:
      properties:
        certificate:
          items:
            $ref: '#/components/schemas/vault_create_credential_certificate'
          type: array
    container_volumes:
      example:
        source: source
        sourcePath: sourcePath
        target: target
      properties:
        target:
          type: string
        sourcePath:
          default: ""
          type: string
        source:
          format: ObjectId
          type: string
      required:
      - source
      - target
    container_expose:
      example:
        protocol: protocol
        external: external
        internal: internal
      properties:
        protocol:
          type: string
        external:
          type: string
        internal:
          type: string
      required:
      - external
      - internal
      - protocol
    container_process:
      example:
        parent: parent
        name: name
        id: id
        user: user
      properties:
        id:
          type: string
        name:
          type: string
        user:
          type: string
        parent:
          type: string
    container_create_registry:
      properties:
        username:
          type: string
        password:
          type: string
        token:
          type: string
    container_create_expose:
      properties:
        internal:
          type: string
        external:
          type: string
        protocol:
          type: string
      required:
      - external
      - internal
      - protocol
    container_create_volumes:
      properties:
        source:
          format: ObjectId
          type: string
        sourcePath:
          type: string
        target:
          type: string
      required:
      - source
      - target
  securitySchemes:
    Session:
      scheme: bearer
      type: http
    ServiceAccount:
      scheme: bearer
      type: http
    Project:
      in: header
      name: x-project
      type: apiKey
