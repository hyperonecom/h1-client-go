/*
HyperOne

HyperOne API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IamProjectApplicationCreate struct for IamProjectApplicationCreate
type IamProjectApplicationCreate struct {
	Name string `json:"name"`
	Redirect []IamRedirect `json:"redirect,omitempty"`
	Service string `json:"service"`
	Tag []Tag `json:"tag,omitempty"`
}

// NewIamProjectApplicationCreate instantiates a new IamProjectApplicationCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIamProjectApplicationCreate(name string, service string) *IamProjectApplicationCreate {
	this := IamProjectApplicationCreate{}
	this.Name = name
	this.Service = service
	return &this
}

// NewIamProjectApplicationCreateWithDefaults instantiates a new IamProjectApplicationCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIamProjectApplicationCreateWithDefaults() *IamProjectApplicationCreate {
	this := IamProjectApplicationCreate{}
	return &this
}

// GetName returns the Name field value
func (o *IamProjectApplicationCreate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *IamProjectApplicationCreate) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *IamProjectApplicationCreate) SetName(v string) {
	o.Name = v
}

// GetRedirect returns the Redirect field value if set, zero value otherwise.
func (o *IamProjectApplicationCreate) GetRedirect() []IamRedirect {
	if o == nil || o.Redirect == nil {
		var ret []IamRedirect
		return ret
	}
	return o.Redirect
}

// GetRedirectOk returns a tuple with the Redirect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IamProjectApplicationCreate) GetRedirectOk() ([]IamRedirect, bool) {
	if o == nil || o.Redirect == nil {
		return nil, false
	}
	return o.Redirect, true
}

// HasRedirect returns a boolean if a field has been set.
func (o *IamProjectApplicationCreate) HasRedirect() bool {
	if o != nil && o.Redirect != nil {
		return true
	}

	return false
}

// SetRedirect gets a reference to the given []IamRedirect and assigns it to the Redirect field.
func (o *IamProjectApplicationCreate) SetRedirect(v []IamRedirect) {
	o.Redirect = v
}

// GetService returns the Service field value
func (o *IamProjectApplicationCreate) GetService() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Service
}

// GetServiceOk returns a tuple with the Service field value
// and a boolean to check if the value has been set.
func (o *IamProjectApplicationCreate) GetServiceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Service, true
}

// SetService sets field value
func (o *IamProjectApplicationCreate) SetService(v string) {
	o.Service = v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *IamProjectApplicationCreate) GetTag() []Tag {
	if o == nil || o.Tag == nil {
		var ret []Tag
		return ret
	}
	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IamProjectApplicationCreate) GetTagOk() ([]Tag, bool) {
	if o == nil || o.Tag == nil {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *IamProjectApplicationCreate) HasTag() bool {
	if o != nil && o.Tag != nil {
		return true
	}

	return false
}

// SetTag gets a reference to the given []Tag and assigns it to the Tag field.
func (o *IamProjectApplicationCreate) SetTag(v []Tag) {
	o.Tag = v
}

func (o IamProjectApplicationCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Redirect != nil {
		toSerialize["redirect"] = o.Redirect
	}
	if true {
		toSerialize["service"] = o.Service
	}
	if o.Tag != nil {
		toSerialize["tag"] = o.Tag
	}
	return json.Marshal(toSerialize)
}

type NullableIamProjectApplicationCreate struct {
	value *IamProjectApplicationCreate
	isSet bool
}

func (v NullableIamProjectApplicationCreate) Get() *IamProjectApplicationCreate {
	return v.value
}

func (v *NullableIamProjectApplicationCreate) Set(val *IamProjectApplicationCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableIamProjectApplicationCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableIamProjectApplicationCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIamProjectApplicationCreate(val *IamProjectApplicationCreate) *NullableIamProjectApplicationCreate {
	return &NullableIamProjectApplicationCreate{value: val, isSet: true}
}

func (v NullableIamProjectApplicationCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIamProjectApplicationCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


