/*
HyperOne

HyperOne API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IamActorOrGroup struct for IamActorOrGroup
type IamActorOrGroup struct {
	Id *string `json:"id,omitempty"`
	Value string `json:"value"`
}

// NewIamActorOrGroup instantiates a new IamActorOrGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIamActorOrGroup(value string) *IamActorOrGroup {
	this := IamActorOrGroup{}
	this.Value = value
	return &this
}

// NewIamActorOrGroupWithDefaults instantiates a new IamActorOrGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIamActorOrGroupWithDefaults() *IamActorOrGroup {
	this := IamActorOrGroup{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IamActorOrGroup) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IamActorOrGroup) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IamActorOrGroup) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IamActorOrGroup) SetId(v string) {
	o.Id = &v
}

// GetValue returns the Value field value
func (o *IamActorOrGroup) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *IamActorOrGroup) GetValueOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *IamActorOrGroup) SetValue(v string) {
	o.Value = v
}

func (o IamActorOrGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableIamActorOrGroup struct {
	value *IamActorOrGroup
	isSet bool
}

func (v NullableIamActorOrGroup) Get() *IamActorOrGroup {
	return v.value
}

func (v *NullableIamActorOrGroup) Set(val *IamActorOrGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableIamActorOrGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableIamActorOrGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIamActorOrGroup(val *IamActorOrGroup) *NullableIamActorOrGroup {
	return &NullableIamActorOrGroup{value: val, isSet: true}
}

func (v NullableIamActorOrGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIamActorOrGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


