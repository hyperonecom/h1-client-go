/*
HyperOne

HyperOne API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RecoveryProjectPlanCreateWindow struct for RecoveryProjectPlanCreateWindow
type RecoveryProjectPlanCreateWindow struct {
	Interval string `json:"interval"`
}

// NewRecoveryProjectPlanCreateWindow instantiates a new RecoveryProjectPlanCreateWindow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoveryProjectPlanCreateWindow(interval string) *RecoveryProjectPlanCreateWindow {
	this := RecoveryProjectPlanCreateWindow{}
	this.Interval = interval
	return &this
}

// NewRecoveryProjectPlanCreateWindowWithDefaults instantiates a new RecoveryProjectPlanCreateWindow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoveryProjectPlanCreateWindowWithDefaults() *RecoveryProjectPlanCreateWindow {
	this := RecoveryProjectPlanCreateWindow{}
	return &this
}

// GetInterval returns the Interval field value
func (o *RecoveryProjectPlanCreateWindow) GetInterval() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value
// and a boolean to check if the value has been set.
func (o *RecoveryProjectPlanCreateWindow) GetIntervalOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Interval, true
}

// SetInterval sets field value
func (o *RecoveryProjectPlanCreateWindow) SetInterval(v string) {
	o.Interval = v
}

func (o RecoveryProjectPlanCreateWindow) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["interval"] = o.Interval
	}
	return json.Marshal(toSerialize)
}

type NullableRecoveryProjectPlanCreateWindow struct {
	value *RecoveryProjectPlanCreateWindow
	isSet bool
}

func (v NullableRecoveryProjectPlanCreateWindow) Get() *RecoveryProjectPlanCreateWindow {
	return v.value
}

func (v *NullableRecoveryProjectPlanCreateWindow) Set(val *RecoveryProjectPlanCreateWindow) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoveryProjectPlanCreateWindow) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoveryProjectPlanCreateWindow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoveryProjectPlanCreateWindow(val *RecoveryProjectPlanCreateWindow) *NullableRecoveryProjectPlanCreateWindow {
	return &NullableRecoveryProjectPlanCreateWindow{value: val, isSet: true}
}

func (v NullableRecoveryProjectPlanCreateWindow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoveryProjectPlanCreateWindow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


