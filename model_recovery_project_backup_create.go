/*
HyperOne

HyperOne API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RecoveryProjectBackupCreate struct for RecoveryProjectBackupCreate
type RecoveryProjectBackupCreate struct {
	Name string `json:"name"`
	Source OneOfAnyTypeAnyType `json:"source"`
	Tag []Tag `json:"tag,omitempty"`
}

// NewRecoveryProjectBackupCreate instantiates a new RecoveryProjectBackupCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoveryProjectBackupCreate(name string, source OneOfAnyTypeAnyType) *RecoveryProjectBackupCreate {
	this := RecoveryProjectBackupCreate{}
	this.Name = name
	this.Source = source
	return &this
}

// NewRecoveryProjectBackupCreateWithDefaults instantiates a new RecoveryProjectBackupCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoveryProjectBackupCreateWithDefaults() *RecoveryProjectBackupCreate {
	this := RecoveryProjectBackupCreate{}
	return &this
}

// GetName returns the Name field value
func (o *RecoveryProjectBackupCreate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RecoveryProjectBackupCreate) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RecoveryProjectBackupCreate) SetName(v string) {
	o.Name = v
}

// GetSource returns the Source field value
func (o *RecoveryProjectBackupCreate) GetSource() OneOfAnyTypeAnyType {
	if o == nil {
		var ret OneOfAnyTypeAnyType
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *RecoveryProjectBackupCreate) GetSourceOk() (*OneOfAnyTypeAnyType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *RecoveryProjectBackupCreate) SetSource(v OneOfAnyTypeAnyType) {
	o.Source = v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *RecoveryProjectBackupCreate) GetTag() []Tag {
	if o == nil || o.Tag == nil {
		var ret []Tag
		return ret
	}
	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoveryProjectBackupCreate) GetTagOk() ([]Tag, bool) {
	if o == nil || o.Tag == nil {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *RecoveryProjectBackupCreate) HasTag() bool {
	if o != nil && o.Tag != nil {
		return true
	}

	return false
}

// SetTag gets a reference to the given []Tag and assigns it to the Tag field.
func (o *RecoveryProjectBackupCreate) SetTag(v []Tag) {
	o.Tag = v
}

func (o RecoveryProjectBackupCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["source"] = o.Source
	}
	if o.Tag != nil {
		toSerialize["tag"] = o.Tag
	}
	return json.Marshal(toSerialize)
}

type NullableRecoveryProjectBackupCreate struct {
	value *RecoveryProjectBackupCreate
	isSet bool
}

func (v NullableRecoveryProjectBackupCreate) Get() *RecoveryProjectBackupCreate {
	return v.value
}

func (v *NullableRecoveryProjectBackupCreate) Set(val *RecoveryProjectBackupCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoveryProjectBackupCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoveryProjectBackupCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoveryProjectBackupCreate(val *RecoveryProjectBackupCreate) *NullableRecoveryProjectBackupCreate {
	return &NullableRecoveryProjectBackupCreate{value: val, isSet: true}
}

func (v NullableRecoveryProjectBackupCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoveryProjectBackupCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


