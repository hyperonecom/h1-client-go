/*
HyperOne

HyperOne API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties struct for WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties
type WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties struct {
	DnsName string `json:"dnsName"`
	State *string `json:"state,omitempty"`
}

// NewWebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties instantiates a new WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties(dnsName string) *WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties {
	this := WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties{}
	this.DnsName = dnsName
	return &this
}

// NewWebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainPropertiesWithDefaults instantiates a new WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainPropertiesWithDefaults() *WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties {
	this := WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties{}
	return &this
}

// GetDnsName returns the DnsName field value
func (o *WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties) GetDnsName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DnsName
}

// GetDnsNameOk returns a tuple with the DnsName field value
// and a boolean to check if the value has been set.
func (o *WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties) GetDnsNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DnsName, true
}

// SetDnsName sets field value
func (o *WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties) SetDnsName(v string) {
	o.DnsName = v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties) SetState(v string) {
	o.State = &v
}

func (o WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["dnsName"] = o.DnsName
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableWebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties struct {
	value *WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties
	isSet bool
}

func (v NullableWebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties) Get() *WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties {
	return v.value
}

func (v *NullableWebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties) Set(val *WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableWebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableWebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties(val *WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties) *NullableWebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties {
	return &NullableWebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties{value: val, isSet: true}
}

func (v NullableWebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


