/*
 * HyperOne
 *
 * HyperOne API
 *
 * API version: 0.1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h1

import (
	"encoding/json"
)

// ComputeProjectVmDiskCreate struct for ComputeProjectVmDiskCreate
type ComputeProjectVmDiskCreate struct {
	Disk string `json:"disk"`
}

// NewComputeProjectVmDiskCreate instantiates a new ComputeProjectVmDiskCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComputeProjectVmDiskCreate(disk string) *ComputeProjectVmDiskCreate {
	this := ComputeProjectVmDiskCreate{}
	this.Disk = disk
	return &this
}

// NewComputeProjectVmDiskCreateWithDefaults instantiates a new ComputeProjectVmDiskCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComputeProjectVmDiskCreateWithDefaults() *ComputeProjectVmDiskCreate {
	this := ComputeProjectVmDiskCreate{}
	return &this
}

// GetDisk returns the Disk field value
func (o *ComputeProjectVmDiskCreate) GetDisk() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Disk
}

// GetDiskOk returns a tuple with the Disk field value
// and a boolean to check if the value has been set.
func (o *ComputeProjectVmDiskCreate) GetDiskOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Disk, true
}

// SetDisk sets field value
func (o *ComputeProjectVmDiskCreate) SetDisk(v string) {
	o.Disk = v
}

func (o ComputeProjectVmDiskCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["disk"] = o.Disk
	}
	return json.Marshal(toSerialize)
}

type NullableComputeProjectVmDiskCreate struct {
	value *ComputeProjectVmDiskCreate
	isSet bool
}

func (v NullableComputeProjectVmDiskCreate) Get() *ComputeProjectVmDiskCreate {
	return v.value
}

func (v *NullableComputeProjectVmDiskCreate) Set(val *ComputeProjectVmDiskCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableComputeProjectVmDiskCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableComputeProjectVmDiskCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComputeProjectVmDiskCreate(val *ComputeProjectVmDiskCreate) *NullableComputeProjectVmDiskCreate {
	return &NullableComputeProjectVmDiskCreate{value: val, isSet: true}
}

func (v NullableComputeProjectVmDiskCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComputeProjectVmDiskCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


