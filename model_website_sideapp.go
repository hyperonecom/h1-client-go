/*
 * HyperOne
 *
 * HyperOne API
 *
 * API version: 0.1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h1

import (
	"encoding/json"
)

// WebsiteSideapp struct for WebsiteSideapp
type WebsiteSideapp struct {
	Id *string `json:"id,omitempty"`
	Name string `json:"name"`
}

// NewWebsiteSideapp instantiates a new WebsiteSideapp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebsiteSideapp(name string) *WebsiteSideapp {
	this := WebsiteSideapp{}
	this.Name = name
	return &this
}

// NewWebsiteSideappWithDefaults instantiates a new WebsiteSideapp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebsiteSideappWithDefaults() *WebsiteSideapp {
	this := WebsiteSideapp{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WebsiteSideapp) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebsiteSideapp) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WebsiteSideapp) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WebsiteSideapp) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *WebsiteSideapp) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WebsiteSideapp) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *WebsiteSideapp) SetName(v string) {
	o.Name = v
}

func (o WebsiteSideapp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableWebsiteSideapp struct {
	value *WebsiteSideapp
	isSet bool
}

func (v NullableWebsiteSideapp) Get() *WebsiteSideapp {
	return v.value
}

func (v *NullableWebsiteSideapp) Set(val *WebsiteSideapp) {
	v.value = val
	v.isSet = true
}

func (v NullableWebsiteSideapp) IsSet() bool {
	return v.isSet
}

func (v *NullableWebsiteSideapp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebsiteSideapp(val *WebsiteSideapp) *NullableWebsiteSideapp {
	return &NullableWebsiteSideapp{value: val, isSet: true}
}

func (v NullableWebsiteSideapp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebsiteSideapp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


