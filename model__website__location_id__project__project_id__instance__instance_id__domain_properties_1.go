/*
HyperOne

HyperOne API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties1 struct for WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties1
type WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties1 struct {
	DnsName string `json:"dnsName"`
}

// NewWebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties1 instantiates a new WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties1(dnsName string) *WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties1 {
	this := WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties1{}
	this.DnsName = dnsName
	return &this
}

// NewWebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties1WithDefaults instantiates a new WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties1WithDefaults() *WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties1 {
	this := WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties1{}
	return &this
}

// GetDnsName returns the DnsName field value
func (o *WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties1) GetDnsName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DnsName
}

// GetDnsNameOk returns a tuple with the DnsName field value
// and a boolean to check if the value has been set.
func (o *WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties1) GetDnsNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DnsName, true
}

// SetDnsName sets field value
func (o *WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties1) SetDnsName(v string) {
	o.DnsName = v
}

func (o WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["dnsName"] = o.DnsName
	}
	return json.Marshal(toSerialize)
}

type NullableWebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties1 struct {
	value *WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties1
	isSet bool
}

func (v NullableWebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties1) Get() *WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties1 {
	return v.value
}

func (v *NullableWebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties1) Set(val *WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties1) {
	v.value = val
	v.isSet = true
}

func (v NullableWebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties1) IsSet() bool {
	return v.isSet
}

func (v *NullableWebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties1(val *WebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties1) *NullableWebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties1 {
	return &NullableWebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties1{value: val, isSet: true}
}

func (v NullableWebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebsiteLocationIdProjectProjectIdInstanceInstanceIdDomainProperties1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


