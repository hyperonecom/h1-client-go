/*
HyperOne

HyperOne API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BillingLocationIdProjectProjectIdPlanProperties struct for BillingLocationIdProjectProjectIdPlanProperties
type BillingLocationIdProjectProjectIdPlanProperties struct {
	ValidFrom *string `json:"validFrom,omitempty"`
}

// NewBillingLocationIdProjectProjectIdPlanProperties instantiates a new BillingLocationIdProjectProjectIdPlanProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingLocationIdProjectProjectIdPlanProperties() *BillingLocationIdProjectProjectIdPlanProperties {
	this := BillingLocationIdProjectProjectIdPlanProperties{}
	return &this
}

// NewBillingLocationIdProjectProjectIdPlanPropertiesWithDefaults instantiates a new BillingLocationIdProjectProjectIdPlanProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingLocationIdProjectProjectIdPlanPropertiesWithDefaults() *BillingLocationIdProjectProjectIdPlanProperties {
	this := BillingLocationIdProjectProjectIdPlanProperties{}
	return &this
}

// GetValidFrom returns the ValidFrom field value if set, zero value otherwise.
func (o *BillingLocationIdProjectProjectIdPlanProperties) GetValidFrom() string {
	if o == nil || o.ValidFrom == nil {
		var ret string
		return ret
	}
	return *o.ValidFrom
}

// GetValidFromOk returns a tuple with the ValidFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingLocationIdProjectProjectIdPlanProperties) GetValidFromOk() (*string, bool) {
	if o == nil || o.ValidFrom == nil {
		return nil, false
	}
	return o.ValidFrom, true
}

// HasValidFrom returns a boolean if a field has been set.
func (o *BillingLocationIdProjectProjectIdPlanProperties) HasValidFrom() bool {
	if o != nil && o.ValidFrom != nil {
		return true
	}

	return false
}

// SetValidFrom gets a reference to the given string and assigns it to the ValidFrom field.
func (o *BillingLocationIdProjectProjectIdPlanProperties) SetValidFrom(v string) {
	o.ValidFrom = &v
}

func (o BillingLocationIdProjectProjectIdPlanProperties) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ValidFrom != nil {
		toSerialize["validFrom"] = o.ValidFrom
	}
	return json.Marshal(toSerialize)
}

type NullableBillingLocationIdProjectProjectIdPlanProperties struct {
	value *BillingLocationIdProjectProjectIdPlanProperties
	isSet bool
}

func (v NullableBillingLocationIdProjectProjectIdPlanProperties) Get() *BillingLocationIdProjectProjectIdPlanProperties {
	return v.value
}

func (v *NullableBillingLocationIdProjectProjectIdPlanProperties) Set(val *BillingLocationIdProjectProjectIdPlanProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingLocationIdProjectProjectIdPlanProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingLocationIdProjectProjectIdPlanProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingLocationIdProjectProjectIdPlanProperties(val *BillingLocationIdProjectProjectIdPlanProperties) *NullableBillingLocationIdProjectProjectIdPlanProperties {
	return &NullableBillingLocationIdProjectProjectIdPlanProperties{value: val, isSet: true}
}

func (v NullableBillingLocationIdProjectProjectIdPlanProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingLocationIdProjectProjectIdPlanProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


