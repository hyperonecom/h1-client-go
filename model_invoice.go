/*
HyperOne

HyperOne API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// Invoice struct for Invoice
type Invoice struct {
	Id *string `json:"id,omitempty"`
	AdditionalInfo *string `json:"additionalInfo,omitempty"`
	Corrections []string `json:"corrections,omitempty"`
	InvoiceInfo *string `json:"invoiceInfo,omitempty"`
	InvoiceNo *string `json:"invoiceNo,omitempty"`
	IssueDate *time.Time `json:"issueDate,omitempty"`
	Payments []string `json:"payments,omitempty"`
	Channel *string `json:"channel,omitempty"`
	Nip *string `json:"nip,omitempty"`
	Company *string `json:"company,omitempty"`
	Seller *InvoiceSeller `json:"seller,omitempty"`
	Items []InvoiceItems `json:"items,omitempty"`
	Buyer *InvoiceBuyer `json:"buyer,omitempty"`
	Type *string `json:"type,omitempty"`
	Summary *string `json:"summary,omitempty"`
	Project *string `json:"project,omitempty"`
	Organisation *string `json:"organisation,omitempty"`
	Uri *string `json:"uri,omitempty"`
}

// NewInvoice instantiates a new Invoice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoice() *Invoice {
	this := Invoice{}
	return &this
}

// NewInvoiceWithDefaults instantiates a new Invoice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceWithDefaults() *Invoice {
	this := Invoice{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Invoice) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Invoice) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Invoice) SetId(v string) {
	o.Id = &v
}

// GetAdditionalInfo returns the AdditionalInfo field value if set, zero value otherwise.
func (o *Invoice) GetAdditionalInfo() string {
	if o == nil || o.AdditionalInfo == nil {
		var ret string
		return ret
	}
	return *o.AdditionalInfo
}

// GetAdditionalInfoOk returns a tuple with the AdditionalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetAdditionalInfoOk() (*string, bool) {
	if o == nil || o.AdditionalInfo == nil {
		return nil, false
	}
	return o.AdditionalInfo, true
}

// HasAdditionalInfo returns a boolean if a field has been set.
func (o *Invoice) HasAdditionalInfo() bool {
	if o != nil && o.AdditionalInfo != nil {
		return true
	}

	return false
}

// SetAdditionalInfo gets a reference to the given string and assigns it to the AdditionalInfo field.
func (o *Invoice) SetAdditionalInfo(v string) {
	o.AdditionalInfo = &v
}

// GetCorrections returns the Corrections field value if set, zero value otherwise.
func (o *Invoice) GetCorrections() []string {
	if o == nil || o.Corrections == nil {
		var ret []string
		return ret
	}
	return o.Corrections
}

// GetCorrectionsOk returns a tuple with the Corrections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetCorrectionsOk() ([]string, bool) {
	if o == nil || o.Corrections == nil {
		return nil, false
	}
	return o.Corrections, true
}

// HasCorrections returns a boolean if a field has been set.
func (o *Invoice) HasCorrections() bool {
	if o != nil && o.Corrections != nil {
		return true
	}

	return false
}

// SetCorrections gets a reference to the given []string and assigns it to the Corrections field.
func (o *Invoice) SetCorrections(v []string) {
	o.Corrections = v
}

// GetInvoiceInfo returns the InvoiceInfo field value if set, zero value otherwise.
func (o *Invoice) GetInvoiceInfo() string {
	if o == nil || o.InvoiceInfo == nil {
		var ret string
		return ret
	}
	return *o.InvoiceInfo
}

// GetInvoiceInfoOk returns a tuple with the InvoiceInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetInvoiceInfoOk() (*string, bool) {
	if o == nil || o.InvoiceInfo == nil {
		return nil, false
	}
	return o.InvoiceInfo, true
}

// HasInvoiceInfo returns a boolean if a field has been set.
func (o *Invoice) HasInvoiceInfo() bool {
	if o != nil && o.InvoiceInfo != nil {
		return true
	}

	return false
}

// SetInvoiceInfo gets a reference to the given string and assigns it to the InvoiceInfo field.
func (o *Invoice) SetInvoiceInfo(v string) {
	o.InvoiceInfo = &v
}

// GetInvoiceNo returns the InvoiceNo field value if set, zero value otherwise.
func (o *Invoice) GetInvoiceNo() string {
	if o == nil || o.InvoiceNo == nil {
		var ret string
		return ret
	}
	return *o.InvoiceNo
}

// GetInvoiceNoOk returns a tuple with the InvoiceNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetInvoiceNoOk() (*string, bool) {
	if o == nil || o.InvoiceNo == nil {
		return nil, false
	}
	return o.InvoiceNo, true
}

// HasInvoiceNo returns a boolean if a field has been set.
func (o *Invoice) HasInvoiceNo() bool {
	if o != nil && o.InvoiceNo != nil {
		return true
	}

	return false
}

// SetInvoiceNo gets a reference to the given string and assigns it to the InvoiceNo field.
func (o *Invoice) SetInvoiceNo(v string) {
	o.InvoiceNo = &v
}

// GetIssueDate returns the IssueDate field value if set, zero value otherwise.
func (o *Invoice) GetIssueDate() time.Time {
	if o == nil || o.IssueDate == nil {
		var ret time.Time
		return ret
	}
	return *o.IssueDate
}

// GetIssueDateOk returns a tuple with the IssueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetIssueDateOk() (*time.Time, bool) {
	if o == nil || o.IssueDate == nil {
		return nil, false
	}
	return o.IssueDate, true
}

// HasIssueDate returns a boolean if a field has been set.
func (o *Invoice) HasIssueDate() bool {
	if o != nil && o.IssueDate != nil {
		return true
	}

	return false
}

// SetIssueDate gets a reference to the given time.Time and assigns it to the IssueDate field.
func (o *Invoice) SetIssueDate(v time.Time) {
	o.IssueDate = &v
}

// GetPayments returns the Payments field value if set, zero value otherwise.
func (o *Invoice) GetPayments() []string {
	if o == nil || o.Payments == nil {
		var ret []string
		return ret
	}
	return o.Payments
}

// GetPaymentsOk returns a tuple with the Payments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetPaymentsOk() ([]string, bool) {
	if o == nil || o.Payments == nil {
		return nil, false
	}
	return o.Payments, true
}

// HasPayments returns a boolean if a field has been set.
func (o *Invoice) HasPayments() bool {
	if o != nil && o.Payments != nil {
		return true
	}

	return false
}

// SetPayments gets a reference to the given []string and assigns it to the Payments field.
func (o *Invoice) SetPayments(v []string) {
	o.Payments = v
}

// GetChannel returns the Channel field value if set, zero value otherwise.
func (o *Invoice) GetChannel() string {
	if o == nil || o.Channel == nil {
		var ret string
		return ret
	}
	return *o.Channel
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetChannelOk() (*string, bool) {
	if o == nil || o.Channel == nil {
		return nil, false
	}
	return o.Channel, true
}

// HasChannel returns a boolean if a field has been set.
func (o *Invoice) HasChannel() bool {
	if o != nil && o.Channel != nil {
		return true
	}

	return false
}

// SetChannel gets a reference to the given string and assigns it to the Channel field.
func (o *Invoice) SetChannel(v string) {
	o.Channel = &v
}

// GetNip returns the Nip field value if set, zero value otherwise.
func (o *Invoice) GetNip() string {
	if o == nil || o.Nip == nil {
		var ret string
		return ret
	}
	return *o.Nip
}

// GetNipOk returns a tuple with the Nip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetNipOk() (*string, bool) {
	if o == nil || o.Nip == nil {
		return nil, false
	}
	return o.Nip, true
}

// HasNip returns a boolean if a field has been set.
func (o *Invoice) HasNip() bool {
	if o != nil && o.Nip != nil {
		return true
	}

	return false
}

// SetNip gets a reference to the given string and assigns it to the Nip field.
func (o *Invoice) SetNip(v string) {
	o.Nip = &v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *Invoice) GetCompany() string {
	if o == nil || o.Company == nil {
		var ret string
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetCompanyOk() (*string, bool) {
	if o == nil || o.Company == nil {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *Invoice) HasCompany() bool {
	if o != nil && o.Company != nil {
		return true
	}

	return false
}

// SetCompany gets a reference to the given string and assigns it to the Company field.
func (o *Invoice) SetCompany(v string) {
	o.Company = &v
}

// GetSeller returns the Seller field value if set, zero value otherwise.
func (o *Invoice) GetSeller() InvoiceSeller {
	if o == nil || o.Seller == nil {
		var ret InvoiceSeller
		return ret
	}
	return *o.Seller
}

// GetSellerOk returns a tuple with the Seller field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetSellerOk() (*InvoiceSeller, bool) {
	if o == nil || o.Seller == nil {
		return nil, false
	}
	return o.Seller, true
}

// HasSeller returns a boolean if a field has been set.
func (o *Invoice) HasSeller() bool {
	if o != nil && o.Seller != nil {
		return true
	}

	return false
}

// SetSeller gets a reference to the given InvoiceSeller and assigns it to the Seller field.
func (o *Invoice) SetSeller(v InvoiceSeller) {
	o.Seller = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *Invoice) GetItems() []InvoiceItems {
	if o == nil || o.Items == nil {
		var ret []InvoiceItems
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetItemsOk() ([]InvoiceItems, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *Invoice) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []InvoiceItems and assigns it to the Items field.
func (o *Invoice) SetItems(v []InvoiceItems) {
	o.Items = v
}

// GetBuyer returns the Buyer field value if set, zero value otherwise.
func (o *Invoice) GetBuyer() InvoiceBuyer {
	if o == nil || o.Buyer == nil {
		var ret InvoiceBuyer
		return ret
	}
	return *o.Buyer
}

// GetBuyerOk returns a tuple with the Buyer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetBuyerOk() (*InvoiceBuyer, bool) {
	if o == nil || o.Buyer == nil {
		return nil, false
	}
	return o.Buyer, true
}

// HasBuyer returns a boolean if a field has been set.
func (o *Invoice) HasBuyer() bool {
	if o != nil && o.Buyer != nil {
		return true
	}

	return false
}

// SetBuyer gets a reference to the given InvoiceBuyer and assigns it to the Buyer field.
func (o *Invoice) SetBuyer(v InvoiceBuyer) {
	o.Buyer = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Invoice) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Invoice) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Invoice) SetType(v string) {
	o.Type = &v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *Invoice) GetSummary() string {
	if o == nil || o.Summary == nil {
		var ret string
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetSummaryOk() (*string, bool) {
	if o == nil || o.Summary == nil {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *Invoice) HasSummary() bool {
	if o != nil && o.Summary != nil {
		return true
	}

	return false
}

// SetSummary gets a reference to the given string and assigns it to the Summary field.
func (o *Invoice) SetSummary(v string) {
	o.Summary = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *Invoice) GetProject() string {
	if o == nil || o.Project == nil {
		var ret string
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetProjectOk() (*string, bool) {
	if o == nil || o.Project == nil {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *Invoice) HasProject() bool {
	if o != nil && o.Project != nil {
		return true
	}

	return false
}

// SetProject gets a reference to the given string and assigns it to the Project field.
func (o *Invoice) SetProject(v string) {
	o.Project = &v
}

// GetOrganisation returns the Organisation field value if set, zero value otherwise.
func (o *Invoice) GetOrganisation() string {
	if o == nil || o.Organisation == nil {
		var ret string
		return ret
	}
	return *o.Organisation
}

// GetOrganisationOk returns a tuple with the Organisation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetOrganisationOk() (*string, bool) {
	if o == nil || o.Organisation == nil {
		return nil, false
	}
	return o.Organisation, true
}

// HasOrganisation returns a boolean if a field has been set.
func (o *Invoice) HasOrganisation() bool {
	if o != nil && o.Organisation != nil {
		return true
	}

	return false
}

// SetOrganisation gets a reference to the given string and assigns it to the Organisation field.
func (o *Invoice) SetOrganisation(v string) {
	o.Organisation = &v
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *Invoice) GetUri() string {
	if o == nil || o.Uri == nil {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetUriOk() (*string, bool) {
	if o == nil || o.Uri == nil {
		return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *Invoice) HasUri() bool {
	if o != nil && o.Uri != nil {
		return true
	}

	return false
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *Invoice) SetUri(v string) {
	o.Uri = &v
}

func (o Invoice) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.AdditionalInfo != nil {
		toSerialize["additionalInfo"] = o.AdditionalInfo
	}
	if o.Corrections != nil {
		toSerialize["corrections"] = o.Corrections
	}
	if o.InvoiceInfo != nil {
		toSerialize["invoiceInfo"] = o.InvoiceInfo
	}
	if o.InvoiceNo != nil {
		toSerialize["invoiceNo"] = o.InvoiceNo
	}
	if o.IssueDate != nil {
		toSerialize["issueDate"] = o.IssueDate
	}
	if o.Payments != nil {
		toSerialize["payments"] = o.Payments
	}
	if o.Channel != nil {
		toSerialize["channel"] = o.Channel
	}
	if o.Nip != nil {
		toSerialize["nip"] = o.Nip
	}
	if o.Company != nil {
		toSerialize["company"] = o.Company
	}
	if o.Seller != nil {
		toSerialize["seller"] = o.Seller
	}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	if o.Buyer != nil {
		toSerialize["buyer"] = o.Buyer
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Summary != nil {
		toSerialize["summary"] = o.Summary
	}
	if o.Project != nil {
		toSerialize["project"] = o.Project
	}
	if o.Organisation != nil {
		toSerialize["organisation"] = o.Organisation
	}
	if o.Uri != nil {
		toSerialize["uri"] = o.Uri
	}
	return json.Marshal(toSerialize)
}

type NullableInvoice struct {
	value *Invoice
	isSet bool
}

func (v NullableInvoice) Get() *Invoice {
	return v.value
}

func (v *NullableInvoice) Set(val *Invoice) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoice) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoice(val *Invoice) *NullableInvoice {
	return &NullableInvoice{value: val, isSet: true}
}

func (v NullableInvoice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


